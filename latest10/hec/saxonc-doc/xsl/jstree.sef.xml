<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2019-11-06T15:11:18.018Z' id='0' version='30' packageVersion='1' saxonVersion='9.9.1.5' target='JS' targetVersion='1' relocatable='true' implicit='true'>
 <co id='0' binds=''>
  <template name='Q{}repeat' flags='os' line='230' module='elements-body.xsl' slots='0'>
   <choose role='body' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='232'>
    <vc op='eq' onEmpty='0' comp='CCC'>
     <cast as='xs:string' emptiable='1'>
      <data>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|2|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='attribute' nodeTest='attribute(Q{}repeat)' jsTest='return item.name===&#39;repeat&#39;'/>
       </slash>
      </data>
     </cast>
     <str val='one-or-more'/>
    </vc>
    <valueOf flags='S'>
     <str val='+'/>
    </valueOf>
    <vc line='235' op='eq' onEmpty='0' comp='CCC'>
     <cast as='xs:string' emptiable='1'>
      <data>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|2|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='attribute' nodeTest='attribute(Q{}repeat)' jsTest='return item.name===&#39;repeat&#39;'/>
       </slash>
      </data>
     </cast>
     <str val='zero-or-more'/>
    </vc>
    <valueOf flags='S'>
     <str val='*'/>
    </valueOf>
    <vc line='238' op='eq' onEmpty='0' comp='CCC'>
     <cast as='xs:string' emptiable='1'>
      <data>
       <slash simple='1'>
        <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|2|XPTY0020|'>
         <dot flags='a'/>
        </treat>
        <axis name='attribute' nodeTest='attribute(Q{}repeat)' jsTest='return item.name===&#39;repeat&#39;'/>
       </slash>
      </data>
     </cast>
     <str val='zero-or-one'/>
    </vc>
    <valueOf flags='S'>
     <str val='?'/>
    </valueOf>
   </choose>
  </template>
 </co>
 <co id='1' binds=''>
  <template name='Q{}no-attributes' flags='os' line='172' module='elements-body.xsl' slots='0'>
   <sequence role='body' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='173'>
    <elem name='br' nsuri='' namespaces='map ixsl f'>
     <empty/>
    </elem>
    <elem line='174' name='strong' nsuri='' namespaces='map ixsl f'>
     <elem line='175' name='i' nsuri='' flags='l'>
      <valueOf flags='l'>
       <str val='Element has no attributes'/>
      </valueOf>
     </elem>
    </elem>
   </sequence>
  </template>
 </co>
 <co id='2' binds='3 4 5 6'>
  <template name='Q{}navpage' flags='os' line='352' module='jstree.xsl' slots='5'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='353'>
    <param name='Q{}class' slot='0' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|class'>
      <check card='1' diag='8|0|XTTE0590|class'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|class'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='355' var='Q{}ids' as='xs:string*' slot='1' eval='4'>
     <fn name='tokenize'>
      <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:tokenize'>
       <check card='?' diag='0|0||fn:tokenize'>
        <cvUntyped to='xs:string'>
         <data>
          <ufCall name='Q{urn:viewerapp.function}get-hash' tailCall='false' bSlot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val='/'/>
      <str val=''/>
     </fn>
     <ufCall line='381' name='Q{urn:viewerapp.function}set-hash' tailCall='false' bSlot='1' eval='8'>
      <let line='369' var='Q{}c' as='node()' slot='2' eval='16'>
       <ufCall name='Q{urn:viewerapp.function}get-item' tailCall='false' bSlot='2' eval='6 16 0'>
        <varRef name='Q{}ids' slot='1'/>
        <check line='356' card='1' diag='0|1||f:get-item'>
         <let var='Q{}start' as='xs:string?' slot='3' eval='7'>
          <first>
           <varRef name='Q{}ids' slot='1'/>
          </first>
          <check line='626' card='?' diag='5|0|XTTE0780|f:get-first-item#1'>
           <filter flags='b'>
            <gVarRef name='Q{http://saxon.sf.net/generated-variable}gg762227630' bSlot='3'/>
            <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}id' chk='0'/>
             </cast>
             <varRef name='Q{}start' slot='3'/>
            </vc>
           </filter>
          </check>
         </let>
        </check>
        <int val='1'/>
       </ufCall>
       <let line='373' var='Q{}new-li' as='element(Q{}li)?' slot='4' eval='7'>
        <choose>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <varRef name='Q{}class' slot='0'/>
          <str val='arrowLeft'/>
         </vc>
         <lastOf>
          <union op='|'>
           <slash>
            <varRef name='Q{}c' slot='2'/>
            <first>
             <axis name='preceding' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
            </first>
           </slash>
           <docOrder intra='1'>
            <slash simple='2'>
             <slash simple='1'>
              <varRef name='Q{}c' slot='2'/>
              <axis name='parent' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
             </slash>
             <axis name='parent' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
            </slash>
           </docOrder>
          </union>
         </lastOf>
         <true/>
         <first>
          <slash>
           <varRef name='Q{}c' slot='2'/>
           <union op='|'>
            <slash simple='2'>
             <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
             <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
            </slash>
            <axis name='following' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
           </union>
          </slash>
         </first>
        </choose>
        <fn line='376' name='string-join'>
         <data>
          <slash simple='2'>
           <union op='|'>
            <slash>
             <varRef name='Q{}new-li' slot='4'/>
             <fn name='reverse'>
              <axis name='ancestor' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
             </fn>
            </slash>
            <varRef name='Q{}new-li' slot='4'/>
           </union>
           <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
          </slash>
         </data>
         <str val='/'/>
        </fn>
       </let>
      </let>
     </ufCall>
    </let>
   </sequence>
  </template>
 </co>
 <co id='7' binds='3 8 4'>
  <template name='Q{}display-results' flags='os' line='202' module='findtext.xsl' slots='3'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='203' var='Q{}foundPathsDiv' as='element(Q{}div)*' slot='0' eval='8'>
    <filter flags=''>
     <slash simple='2'>
      <filter flags='b'>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='1'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
          <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
        </slash>
        <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}id' chk='0'/>
        </cast>
        <str val='wrap'/>
       </vc>
      </filter>
      <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
     </slash>
     <vc op='eq' comp='CCC'>
      <attVal name='Q{}id' chk='0'/>
      <str val='foundPaths'/>
     </vc>
    </filter>
    <let line='204' var='Q{}count' as='xs:integer' slot='1' eval='8'>
     <fn name='count'>
      <filter flags='b'>
       <slash simple='2'>
        <varRef name='Q{}foundPathsDiv' slot='0'/>
        <axis name='descendant' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}class' chk='0'/>
        </cast>
        <str val='link'/>
       </vc>
      </filter>
     </fn>
     <sequence line='207'>
      <choose>
       <compareToInt op='eq' val='0'>
        <varRef name='Q{}count' slot='1'/>
       </compareToInt>
       <sequence line='208'>
        <forEach>
         <varRef name='Q{}foundPathsDiv' slot='0'/>
         <ifCall line='209' name='Q{http://saxonica.com/ns/interactiveXSLT}set-style' type='item()?'>
          <str val='display'/>
          <str val='none'/>
          <dot type='element(Q{}div)'/>
         </ifCall>
        </forEach>
        <resultDoc line='211' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
         <str role='href' val='#findstatus'/>
         <valueOf role='content' line='212'>
          <str val='0 of 0'/>
         </valueOf>
        </resultDoc>
       </sequence>
      </choose>
      <choose line='216'>
       <compareToInt op='gt' val='0'>
        <varRef name='Q{}count' slot='1'/>
       </compareToInt>
       <let line='217' var='Q{}path1' as='attribute(Q{}path)*' slot='2' eval='4'>
        <slash simple='2'>
         <slash>
          <varRef name='Q{}foundPathsDiv' slot='0'/>
          <first>
           <filter flags='b'>
            <axis name='descendant' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}class' chk='0'/>
             </cast>
             <str val='link'/>
            </vc>
           </filter>
          </first>
         </slash>
         <axis name='attribute' nodeTest='attribute(Q{}path)' jsTest='return item.name===&#39;path&#39;'/>
        </slash>
        <sequence line='218'>
         <choose>
          <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
           <atomSing card='?' diag='1|0||eq'>
            <ufCall name='Q{urn:viewerapp.function}get-hash' tailCall='false' bSlot='0'/>
           </atomSing>
           <atomSing card='?' diag='1|1||eq'>
            <varRef name='Q{}path1' slot='2'/>
           </atomSing>
          </vc>
          <callT line='220' name='Q{}highlighting' bSlot='1'/>
         </choose>
         <ufCall line='222' name='Q{urn:viewerapp.function}set-hash' tailCall='false' bSlot='2' eval='6'>
          <varRef name='Q{}path1' slot='2'/>
         </ufCall>
         <forEach line='223'>
          <varRef name='Q{}foundPathsDiv' slot='0'/>
          <ifCall line='224' name='Q{http://saxonica.com/ns/interactiveXSLT}set-style' type='item()?'>
           <str val='display'/>
           <str val='block'/>
           <dot type='element(Q{}div)'/>
          </ifCall>
         </forEach>
         <resultDoc line='226' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
          <str role='href' val='#findstatus'/>
          <valueOf role='content' line='227'>
           <fn name='concat'>
            <str val='1 of '/>
            <varRef name='Q{}count' slot='1'/>
           </fn>
          </valueOf>
         </resultDoc>
         <forEach line='229'>
          <slash>
           <varRef name='Q{}foundPathsDiv' slot='0'/>
           <first>
            <filter flags='b'>
             <axis name='descendant' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}class' chk='0'/>
              </cast>
              <str val='link'/>
             </vc>
            </filter>
           </first>
          </slash>
          <ifCall line='230' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
           <str val='class'/>
           <str val='hot'/>
          </ifCall>
         </forEach>
        </sequence>
       </let>
      </choose>
     </sequence>
    </let>
   </let>
  </template>
 </co>
 <co id='9' binds='10 10 9'>
  <mode name='Q{}check-text' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='1' prio='-0.5' seq='13' rank='0' minImp='1' slots='0' flags='s' line='165' module='findtext.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='1' prio='0.0' seq='12' rank='1' minImp='1' slots='2' flags='s' line='152' module='findtext.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='153'>
     <param name='Q{}search' slot='0'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <param line='154' name='Q{}path' slot='1'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='1'/>
     </param>
     <choose line='157'>
      <fn line='156' name='contains'>
       <fn name='lower-case'>
        <cvUntyped to='xs:string'>
         <data>
          <dot type='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
         </data>
        </cvUntyped>
       </fn>
       <treat line='157' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|1||fn:contains'>
        <check card='?' diag='0|1||fn:contains'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}search' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </fn>
      <callT line='158' name='Q{}foundPaths' bSlot='0' flags='t'>
       <withParam name='Q{}newPath' flags='c' as='xs:string'>
        <fn line='159' name='substring'>
         <fn line='155' name='concat'>
          <atomSing card='?' diag='0|0||fn:concat'>
           <varRef name='Q{}path' slot='1'/>
          </atomSing>
          <str val='/'/>
          <atomSing card='?' diag='0|2||fn:concat'>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
          </atomSing>
         </fn>
         <int val='2'/>
        </fn>
       </withParam>
       <withParam name='Q{}section' flags='c' as='node()'>
        <dot line='160' type='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
       </withParam>
      </callT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='1' prio='0.0' seq='11' part='1' rank='1' minImp='1' slots='3' flags='s' line='133' module='findtext.xsl'>
    <p.nodeTest role='match' test='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='134'>
     <param name='Q{}search' slot='0'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <param line='135' name='Q{}path' slot='1' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|path'>
       <check card='1' diag='8|0|XTTE0590|path'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|path'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='136' var='Q{}newpath' as='xs:string' slot='2' eval='8'>
      <fn name='concat'>
       <varRef name='Q{}path' slot='1'/>
       <str val='/'/>
       <attVal name='Q{}id' chk='0'/>
      </fn>
      <sequence line='140'>
       <choose>
        <fn line='138' name='contains'>
         <fn name='lower-case'>
          <fn name='string-join'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <fn name='not'>
              <gc op='=' card='N:1' comp='CCC'>
               <literal count='3'>
                <str val='section'/>
                <str val='article'/>
                <str val='function'/>
               </literal>
               <fn name='local-name'>
                <dot type='element()'/>
               </fn>
              </gc>
             </fn>
            </filter>
           </data>
           <str val='!'/>
          </fn>
         </fn>
         <treat line='140' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|1||fn:contains'>
          <check card='?' diag='0|1||fn:contains'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}search' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
        <callT line='141' name='Q{}foundPaths' bSlot='1'>
         <withParam name='Q{}newPath' flags='c' as='xs:string'>
          <fn line='142' name='substring'>
           <varRef name='Q{}newpath' slot='2'/>
           <int val='2'/>
          </fn>
         </withParam>
         <withParam name='Q{}section' flags='c' as='node()'>
          <dot line='143' type='element()'/>
         </withParam>
        </callT>
       </choose>
       <applyT line='146' mode='Q{}check-text' flags='t' bSlot='2'>
        <axis role='select' name='child' nodeTest='((element(Q{}section) | element(Q{}article)) | element(Q{http://www.saxonica.com/ns/doc/functions}function))' jsTest='function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;};return a()||b();'/>
        <withParam name='Q{}search'>
         <varRef line='147' name='Q{}search' slot='0'/>
        </withParam>
        <withParam name='Q{}path' as='xs:string'>
         <varRef line='148' name='Q{}newpath' slot='2'/>
        </withParam>
       </applyT>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='1' prio='0.0' seq='11' rank='1' minImp='1' slots='3' flags='s' line='133' module='findtext.xsl'>
    <p.nodeTest role='match' test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='134'>
     <param name='Q{}search' slot='0'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <param line='135' name='Q{}path' slot='1' as='xs:string'>
      <str role='select' val=''/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|path'>
       <check card='1' diag='8|0|XTTE0590|path'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|path'>
         <data>
          <supplied slot='1'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='136' var='Q{}newpath' as='xs:string' slot='2' eval='8'>
      <fn name='concat'>
       <varRef name='Q{}path' slot='1'/>
       <str val='/'/>
       <attVal name='Q{}id' chk='0'/>
      </fn>
      <sequence line='140'>
       <choose>
        <fn line='138' name='contains'>
         <fn name='lower-case'>
          <fn name='string-join'>
           <data>
            <filter flags='b'>
             <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
             <fn name='not'>
              <gc op='=' card='N:1' comp='CCC'>
               <literal count='3'>
                <str val='section'/>
                <str val='article'/>
                <str val='function'/>
               </literal>
               <fn name='local-name'>
                <dot type='element()'/>
               </fn>
              </gc>
             </fn>
            </filter>
           </data>
           <str val='!'/>
          </fn>
         </fn>
         <treat line='140' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|1||fn:contains'>
          <check card='?' diag='0|1||fn:contains'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}search' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
        <callT line='141' name='Q{}foundPaths' bSlot='1'>
         <withParam name='Q{}newPath' flags='c' as='xs:string'>
          <fn line='142' name='substring'>
           <varRef name='Q{}newpath' slot='2'/>
           <int val='2'/>
          </fn>
         </withParam>
         <withParam name='Q{}section' flags='c' as='node()'>
          <dot line='143' type='element()'/>
         </withParam>
        </callT>
       </choose>
       <applyT line='146' mode='Q{}check-text' flags='t' bSlot='2'>
        <axis role='select' name='child' nodeTest='((element(Q{}section) | element(Q{}article)) | element(Q{http://www.saxonica.com/ns/doc/functions}function))' jsTest='function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;};return a()||b();'/>
        <withParam name='Q{}search'>
         <varRef line='147' name='Q{}search' slot='0'/>
        </withParam>
        <withParam name='Q{}path' as='xs:string'>
         <varRef line='148' name='Q{}newpath' slot='2'/>
        </withParam>
       </applyT>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='11' binds='11 8'>
  <template name='Q{}highlight-item' flags='os' line='566' module='jstree.xsl' slots='6'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='567'>
    <param name='Q{}parent' slot='0' as='node()?'>
     <empty role='select'/>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|parent'>
      <check card='?' diag='8|0|XTTE0590|parent'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <param line='568' name='Q{}ids' slot='1' as='xs:string*'>
     <empty role='select'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
      <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
       <data>
        <supplied slot='1'/>
       </data>
      </cvUntyped>
     </treat>
    </param>
    <param line='569' name='Q{}index' slot='2' flags='i' as='xs:integer'>
     <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
      <check card='1' diag='8|0|XTTE0590|index'>
       <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='570' var='Q{}hitem' as='element(Q{}li)*' slot='3' eval='3'>
     <filter flags=''>
      <slash simple='2'>
       <slash simple='1'>
        <varRef name='Q{}parent' slot='0'/>
        <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
       </slash>
       <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
      </slash>
      <vc op='eq' comp='CCC'>
       <attVal name='Q{}id' chk='0'/>
       <subscript>
        <varRef name='Q{}ids' slot='1'/>
        <varRef name='Q{}index' slot='2'/>
       </subscript>
      </vc>
     </filter>
     <choose line='572'>
      <vc op='lt' onEmpty='0' comp='CAVC'>
       <varRef name='Q{}index' slot='2'/>
       <fn name='count'>
        <varRef name='Q{}ids' slot='1'/>
       </fn>
      </vc>
      <callT line='573' name='Q{}highlight-item' bSlot='0' flags='t'>
       <withParam name='Q{}parent' flags='c' as='element(Q{}li)?'>
        <check line='574' card='?' diag='8|0|XTTE0590|parent'>
         <varRef name='Q{}hitem' slot='3'/>
        </check>
       </withParam>
       <withParam name='Q{}ids' flags='c' as='xs:string*'>
        <varRef line='575' name='Q{}ids' slot='1'/>
       </withParam>
       <withParam name='Q{}index' flags='c' as='xs:integer'>
        <arith line='576' op='+' calc='i+i'>
         <varRef name='Q{}index' slot='2'/>
         <int val='1'/>
        </arith>
       </withParam>
      </callT>
      <true/>
      <let line='584' var='Q{http://saxon.sf.net/generated-variable}v1' as='item()' slot='4' eval='13'>
       <check card='1' diag='0|0||ixsl:call'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
       </check>
       <let line='581' var='Q{http://saxon.sf.net/generated-variable}v0' as='item()' slot='5' eval='13'>
        <check card='1' diag='0|0||ixsl:call'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
        <sequence line='580'>
         <forEach>
          <slash simple='2'>
           <varRef name='Q{}hitem' slot='3'/>
           <axis name='child' nodeTest='element(Q{}span)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;span&#39;;'/>
          </slash>
          <sequence line='581'>
           <forEach>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
             <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='5'/>
             <str val='swapItem'/>
             <arrayBlock>
              <dot type='element(Q{}span)'/>
             </arrayBlock>
            </ifCall>
            <ifCall line='582' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
             <str val='class'/>
             <str val='item'/>
            </ifCall>
           </forEach>
           <ifCall line='584' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
            <varRef name='Q{http://saxon.sf.net/generated-variable}v1' slot='4'/>
            <str val='enableScroll'/>
            <array size='0'/>
           </ifCall>
           <ifCall line='585' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
            <str val='class'/>
            <str val='hot'/>
           </ifCall>
          </sequence>
         </forEach>
         <choose line='588'>
          <vc op='ne' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
           <atomSing card='?' diag='1|0||ne'>
            <lookup>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}style' type='item()?'>
              <check card='?' diag='0|0||ixsl:style'>
               <filter flags=''>
                <slash simple='2'>
                 <slash simple='2'>
                  <slash simple='2'>
                   <slash simple='1'>
                    <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
                    <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
                   </slash>
                   <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
                  </slash>
                  <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
                 </slash>
                 <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
                </slash>
                <vc op='eq' comp='CCC'>
                 <attVal name='Q{}class' chk='0'/>
                 <str val='found'/>
                </vc>
               </filter>
              </check>
             </ifCall>
             <str val='display'/>
            </lookup>
           </atomSing>
           <str val='none'/>
          </vc>
          <callT line='590' name='Q{}highlighting' bSlot='1' flags='t'/>
         </choose>
        </sequence>
       </let>
      </let>
     </choose>
    </let>
   </sequence>
  </template>
 </co>
 <co id='12' binds='3 13 4'>
  <mode name='Q{}handle-itemclick' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='-0.5' seq='65' rank='0' minImp='0' slots='3' flags='s' line='306' module='jstree.xsl'>
    <p.nodeTest role='match' test='element()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;'/>
    <let role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='308' var='Q{}new-hash' as='xs:string' slot='0' eval='8'>
     <fn name='string-join'>
      <cvUntyped line='307' to='xs:string' diag='3|0|XTTE0570|ids'>
       <data>
        <docOrder intra='0'>
         <slash simple='2'>
          <sequence>
           <dot type='element()'/>
           <fn name='reverse'>
            <slash simple='1'>
             <dot type='element()'/>
             <axis name='ancestor' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
            </slash>
           </fn>
          </sequence>
          <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
         </slash>
        </docOrder>
       </data>
      </cvUntyped>
      <str val='/'/>
     </fn>
     <let line='309' var='Q{}isSpan' as='xs:boolean' slot='1' eval='16'>
      <check card='1' diag='3|0|XTTE0570|isSpan'>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}class' chk='0'/>
        <str val='item'/>
       </vc>
      </check>
      <let line='313' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:boolean' slot='2' eval='13'>
       <fn name='not'>
        <varRef name='Q{}isSpan' slot='1'/>
       </fn>
       <forEach line='311'>
        <choose>
         <varRef name='Q{}isSpan' slot='1'/>
         <axis name='parent' nodeTest='(element()|document-node())' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);'/>
         <true/>
         <dot type='element()'/>
        </choose>
        <choose line='313'>
         <and op='and'>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <attVal name='Q{}class' chk='0'/>
           <str val='open'/>
          </vc>
          <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='2'/>
         </and>
         <ifCall line='314' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
          <str val='class'/>
          <str val='closed'/>
         </ifCall>
         <true/>
         <sequence line='317'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
           <check card='1' diag='0|0||ixsl:call'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
           </check>
           <str val='disableScroll'/>
           <array size='0'/>
          </ifCall>
          <choose line='319'>
           <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
            <atomSing card='?' diag='1|0||eq'>
             <ufCall name='Q{urn:viewerapp.function}get-hash' tailCall='false' bSlot='0'/>
            </atomSing>
            <varRef name='Q{}new-hash' slot='0'/>
           </vc>
           <sequence line='321'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
             <str val='class'/>
             <choose line='621'>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <check line='320' card='1' diag='0|0||f:get-open-class'>
                <cvUntyped to='xs:string'>
                 <attVal name='Q{}class' chk='0'/>
                </cvUntyped>
               </check>
               <str val='empty'/>
              </vc>
              <str val='empty'/>
              <true/>
              <str val='open'/>
             </choose>
            </ifCall>
            <choose line='322'>
             <fn name='empty'>
              <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
             </fn>
             <callT line='323' name='Q{}process-hashchange' bSlot='1'/>
            </choose>
           </sequence>
           <true/>
           <ufCall line='327' name='Q{urn:viewerapp.function}set-hash' tailCall='false' bSlot='2' eval='6'>
            <varRef name='Q{}new-hash' slot='0'/>
           </ufCall>
          </choose>
         </sequence>
        </choose>
       </forEach>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='14' binds=''>
  <template name='Q{}scrollpage' flags='os' line='269' module='jstree.xsl' slots='0'>
   <ifCall role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='272' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
    <str val='scrollTop'/>
    <int val='0'/>
    <check card='1' diag='0|2||ixsl:set-property'>
     <filter flags='b'>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
           <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}id' chk='0'/>
         </cast>
         <str val='wrap'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <vc op='eq' onEmpty='0' comp='CCC'>
       <cast as='xs:string' emptiable='1'>
        <attVal name='Q{}id' chk='0'/>
       </cast>
       <str val='main'/>
      </vc>
     </filter>
    </check>
   </ifCall>
  </template>
 </co>
 <co id='8' binds='15 16 17'>
  <template name='Q{}highlighting' flags='os' line='244' module='findtext.xsl' slots='1'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='246' var='Q{}search' as='xs:string' slot='0' eval='8'>
    <fn name='lower-case'>
     <fn name='normalize-space'>
      <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:normalize-space'>
       <check card='?' diag='0|0||fn:normalize-space'>
        <cvUntyped to='xs:string'>
         <data>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
           <gVarRef name='Q{http://saxon.sf.net/generated-variable}gg121295574' bSlot='0'/>
           <str val='value'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
    </fn>
    <sequence line='247'>
     <forEach>
      <filter flags=''>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
           <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       </slash>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}id' chk='0'/>
        <str val='main'/>
       </vc>
      </filter>
      <resultDoc line='248' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
       <str role='href' val='?.'/>
       <applyT role='content' line='249' mode='Q{}highlight-text' flags='i' bSlot='1'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
        <withParam name='Q{}search' as='xs:string'>
         <varRef line='250' name='Q{}search' slot='0'/>
        </withParam>
       </applyT>
      </resultDoc>
     </forEach>
     <ifCall line='257' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
      <int val='10'/>
      <empty/>
      <callT line='258' name='Q{}scrollToHighlight' bSlot='2'/>
     </ifCall>
    </sequence>
   </let>
  </template>
 </co>
 <co id='18' binds='9 19 7'>
  <template name='Q{}search-doc' flags='os' line='110' module='findtext.xsl' slots='3'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='112'>
    <param name='Q{}search' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='113' name='Q{}docName' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='114' name='Q{}docID' slot='2'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='2'/>
    </param>
    <applyT line='116' mode='Q{}check-text' bSlot='0'>
     <slash role='select' simple='1'>
      <fn name='doc'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc'>
        <check card='?' diag='0|0||fn:doc'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}docName' slot='1'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </fn>
      <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
     </slash>
     <withParam name='Q{}search'>
      <varRef line='117' name='Q{}search' slot='0'/>
     </withParam>
    </applyT>
    <forEach line='123'>
     <filter flags='b'>
      <slash simple='2'>
       <filter flags=''>
        <slash simple='2'>
         <filter flags='b'>
          <slash simple='2'>
           <slash simple='2'>
            <slash simple='1'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
             <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
            </slash>
            <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
           </slash>
           <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
          </slash>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}id' chk='0'/>
           </cast>
           <str val='wrap'/>
          </vc>
         </filter>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <vc op='eq' comp='CCC'>
         <attVal name='Q{}id' chk='0'/>
         <str val='foundPaths'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <data>
        <varRef name='Q{}docID' slot='2'/>
       </data>
       <attVal name='Q{}id' chk='0'/>
      </gc>
     </filter>
     <ifCall line='125' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
      <str val='_searching'/>
      <str val='false'/>
     </ifCall>
    </forEach>
    <choose line='128'>
     <ufCall name='Q{urn:viewerapp.function}allSectionsSearched' tailCall='false' bSlot='1'/>
     <callT line='129' name='Q{}display-results' bSlot='2' flags='t'/>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='20' binds='21 22'>
  <template name='Q{}list' flags='os' line='66' module='jstree.xsl' slots='1'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='68'>
    <param name='Q{}docName' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <resultDoc line='69' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
     <str role='href' val='#list'/>
     <applyT role='content' line='71' bSlot='0'>
      <slash role='select' simple='2'>
       <slash simple='1'>
        <fn name='doc'>
         <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc'>
          <check card='?' diag='0|0||fn:doc'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}docName' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/catalog}catalog)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/catalog&#39;&amp;&amp;q.local===&#39;catalog&#39;;'/>
       </slash>
       <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/catalog}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/catalog&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
      </slash>
     </applyT>
    </resultDoc>
    <ifCall line='74' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
     <int val='1'/>
     <empty/>
     <callT line='75' name='Q{}init' bSlot='1'/>
    </ifCall>
   </sequence>
  </template>
 </co>
 <co id='23' binds='4 3'>
  <function name='Q{urn:viewerapp.function}anchor-navigation' line='603' module='jstree.xsl' eval='7' flags='pU' as='item()*' slots='1'>
   <arg name='Q{}c' as='node()'/>
   <tailCallLoop role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='610'>
    <ufCall name='Q{urn:viewerapp.function}set-hash' tailCall='foreign' bSlot='0' eval='8'>
     <fn name='translate'>
      <cvUntyped to='xs:string'>
       <cast line='607' as='xs:untypedAtomic' emptiable='0'>
        <fn line='608' name='string'>
         <cast as='xs:untypedAtomic' emptiable='0'>
          <fn name='substring'>
           <fn name='string'>
            <fn line='607' name='resolve-uri'>
             <cvUntyped to='xs:string'>
              <data>
               <slash simple='1'>
                <varRef name='Q{}c' slot='0'/>
                <axis name='attribute' nodeTest='attribute(Q{}data-href)' jsTest='return item.name===&#39;data-href&#39;'/>
               </slash>
              </data>
             </cvUntyped>
             <fn name='concat'>
              <str val='http://a.com/'/>
              <atomSing card='?' diag='0|1||fn:concat'>
               <ufCall name='Q{urn:viewerapp.function}get-hash' tailCall='false' bSlot='1'/>
              </atomSing>
              <str val='/'/>
             </fn>
            </fn>
           </fn>
           <int val='14'/>
          </fn>
         </cast>
        </fn>
       </cast>
      </cvUntyped>
      <str val='#'/>
      <str val='@'/>
     </fn>
    </ufCall>
   </tailCallLoop>
  </function>
 </co>
 <co id='24' binds='6 25 18'>
  <template name='Q{}searching' flags='os' line='93' module='findtext.xsl' slots='2'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='94'>
    <param name='Q{}search' slot='0' flags='i' as='xs:string'>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|search'>
      <check card='1' diag='8|0|XTTE0590|search'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|search'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <forEach line='97'>
     <gVarRef name='Q{http://saxon.sf.net/generated-variable}gg762227630' bSlot='0'/>
     <let line='98' var='Q{}docName' as='xs:string' slot='1' eval='8'>
      <fn name='concat'>
       <gVarRef name='Q{}location' bSlot='1'/>
       <str val='/'/>
       <attVal name='Q{}id' chk='0'/>
       <str val='.xml'/>
      </fn>
      <ifCall line='99' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
       <int val='0'/>
       <varRef name='Q{}docName' slot='1'/>
       <callT line='100' name='Q{}search-doc' bSlot='2'>
        <withParam name='Q{}search' flags='c' as='xs:string'>
         <varRef line='101' name='Q{}search' slot='0'/>
        </withParam>
        <withParam name='Q{}docName' flags='c' as='xs:string'>
         <varRef line='102' name='Q{}docName' slot='1'/>
        </withParam>
        <withParam name='Q{}docID' flags='c' as='xs:string'>
         <fn line='103' name='string'>
          <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
         </fn>
        </withParam>
       </callT>
      </ifCall>
     </let>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id='26' binds='4'>
  <mode name='Q{}found-action' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='1' prio='0.0' seq='10' rank='0' minImp='1' slots='6' flags='s' line='52' module='findtext.xsl'>
    <p.nodeTest role='match' test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
    <let role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='53' var='Q{}foundDiv' as='element(Q{}div)*' slot='0' eval='8'>
     <filter flags=''>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
           <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}id' chk='0'/>
         </cast>
         <str val='wrap'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <vc op='eq' comp='CCC'>
       <attVal name='Q{}class' chk='0'/>
       <str val='found'/>
      </vc>
     </filter>
     <let line='54' var='Q{}foundPathsDiv' as='element(Q{}div)*' slot='1' eval='8'>
      <filter flags=''>
       <slash simple='2'>
        <filter flags='b'>
         <slash simple='2'>
          <slash simple='2'>
           <slash simple='1'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
            <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
           </slash>
           <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
         </slash>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <cast as='xs:string' emptiable='1'>
           <attVal name='Q{}id' chk='0'/>
          </cast>
          <str val='wrap'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       </slash>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}id' chk='0'/>
        <str val='foundPaths'/>
       </vc>
      </filter>
      <let line='55' var='Q{}paths' as='element(Q{}p)*' slot='2' eval='4'>
       <filter flags='b'>
        <slash simple='2'>
         <varRef name='Q{}foundPathsDiv' slot='1'/>
         <axis name='descendant' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
        </slash>
        <gc op='=' card='N:1' comp='CCC'>
         <literal count='2'>
          <str val='link'/>
          <str val='hot'/>
         </literal>
         <attVal name='Q{}class' chk='0'/>
        </gc>
       </filter>
       <choose line='58'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <attVal name='Q{}class' chk='0'/>
         <str val='foundClosed'/>
        </vc>
        <forEach line='59'>
         <union op='|'>
          <docOrder intra='0'>
           <varRef name='Q{}foundDiv' slot='0'/>
          </docOrder>
          <docOrder intra='0'>
           <varRef name='Q{}foundPathsDiv' slot='1'/>
          </docOrder>
         </union>
         <ifCall line='60' name='Q{http://saxonica.com/ns/interactiveXSLT}set-style' type='item()?'>
          <str val='display'/>
          <str val='none'/>
          <dot type='element(Q{}div)'/>
         </ifCall>
        </forEach>
        <true/>
        <let line='65' var='Q{}status-element' as='element(Q{}p)*' slot='3' eval='3'>
         <filter flags='b'>
          <slash simple='2'>
           <varRef name='Q{}foundDiv' slot='0'/>
           <axis name='child' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
          </slash>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}id' chk='0'/>
           </cast>
           <str val='findstatus'/>
          </vc>
         </filter>
         <let line='67' var='Q{}index' as='xs:integer' slot='4' eval='16'>
          <cast as='xs:integer' emptiable='0'>
           <fn name='substring-before'>
            <check card='?' diag='0|0||fn:substring-before'>
             <cvUntyped to='xs:string'>
              <data>
               <varRef name='Q{}status-element' slot='3'/>
              </data>
             </cvUntyped>
            </check>
            <str val=' of'/>
           </fn>
          </cast>
          <let line='73' var='Q{}newindex' as='xs:integer' slot='5' eval='16'>
           <choose>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <attVal name='Q{}class' chk='0'/>
             <str val='link'/>
            </vc>
            <arith op='+' calc='i+i'>
             <fn name='count'>
              <filter flags='b'>
               <slash simple='1'>
                <dot type='element(Q{}p)'/>
                <axis name='preceding' nodeTest='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
               </slash>
               <gc op='=' card='N:1' comp='CCC'>
                <literal count='2'>
                 <str val='link'/>
                 <str val='hot'/>
                </literal>
                <attVal name='Q{}class' chk='0'/>
               </gc>
              </filter>
             </fn>
             <int val='1'/>
            </arith>
            <and op='and'>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <attVal name='Q{}class' chk='0'/>
              <str val='foundNext'/>
             </vc>
             <vc op='lt' onEmpty='0' comp='CAVC'>
              <varRef name='Q{}index' slot='4'/>
              <fn name='count'>
               <varRef name='Q{}paths' slot='2'/>
              </fn>
             </vc>
            </and>
            <arith op='+' calc='i+i'>
             <varRef name='Q{}index' slot='4'/>
             <int val='1'/>
            </arith>
            <and op='and'>
             <vc op='eq' onEmpty='0' comp='CCC'>
              <attVal name='Q{}class' chk='0'/>
              <str val='foundPrev'/>
             </vc>
             <compareToInt op='gt' val='0'>
              <varRef name='Q{}index' slot='4'/>
             </compareToInt>
            </and>
            <arith op='-' calc='i-i'>
             <varRef name='Q{}index' slot='4'/>
             <int val='1'/>
            </arith>
            <true/>
            <int val='0'/>
           </choose>
           <choose line='74'>
            <compareToInt op='gt' val='0'>
             <varRef name='Q{}newindex' slot='5'/>
            </compareToInt>
            <sequence line='75'>
             <forEach>
              <varRef name='Q{}status-element' slot='3'/>
              <resultDoc line='76' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
               <str role='href' val='?.'/>
               <valueOf role='content' line='77'>
                <fn name='string-join'>
                 <convert from='xs:anyAtomicType' to='xs:string'>
                  <sequence>
                   <varRef name='Q{}newindex' slot='5'/>
                   <str val=' of '/>
                   <fn name='substring-after'>
                    <cvUntyped to='xs:string'>
                     <data>
                      <dot type='element(Q{}p)'/>
                     </data>
                    </cvUntyped>
                    <str val='of '/>
                   </fn>
                  </sequence>
                 </convert>
                 <str val=' '/>
                </fn>
               </valueOf>
              </resultDoc>
             </forEach>
             <ufCall line='80' name='Q{urn:viewerapp.function}set-hash' tailCall='false' bSlot='0' eval='4'>
              <slash simple='1'>
               <subscript>
                <varRef name='Q{}paths' slot='2'/>
                <varRef name='Q{}newindex' slot='5'/>
               </subscript>
               <axis name='attribute' nodeTest='attribute(Q{}path)' jsTest='return item.name===&#39;path&#39;'/>
              </slash>
             </ufCall>
             <forEach line='81'>
              <subscript>
               <varRef name='Q{}paths' slot='2'/>
               <varRef name='Q{}index' slot='4'/>
              </subscript>
              <ifCall line='82' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
               <str val='class'/>
               <str val='link'/>
              </ifCall>
             </forEach>
             <forEach line='84'>
              <subscript>
               <varRef name='Q{}paths' slot='2'/>
               <varRef name='Q{}newindex' slot='5'/>
              </subscript>
              <ifCall line='85' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
               <str val='class'/>
               <str val='hot'/>
              </ifCall>
             </forEach>
            </sequence>
           </choose>
          </let>
         </let>
        </let>
       </choose>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='27' binds=''>
  <function name='Q{urn:viewerapp.function}get-open-class' line='619' module='jstree.xsl' eval='16' flags='pU' as='xs:string' slots='1'>
   <arg name='Q{}class' as='xs:string'/>
   <choose role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='621'>
    <vc op='eq' onEmpty='0' comp='CCC'>
     <varRef name='Q{}class' slot='0'/>
     <str val='empty'/>
    </vc>
    <str val='empty'/>
    <true/>
    <str val='open'/>
   </choose>
  </function>
 </co>
 <co id='28' binds='28'>
  <template name='Q{}get-trail' flags='os' line='410' module='jstree.xsl' slots='7'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='411'>
    <param name='Q{}ids' slot='0' as='xs:string*'>
     <empty role='select'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
      <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
       <data>
        <supplied slot='0'/>
       </data>
      </cvUntyped>
     </treat>
    </param>
    <param line='412' name='Q{}parent' slot='1' as='node()?'>
     <empty role='select'/>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|parent'>
      <check card='?' diag='8|0|XTTE0590|parent'>
       <supplied slot='1'/>
      </check>
     </treat>
    </param>
    <param line='413' name='Q{}index' slot='2' flags='i' as='xs:integer'>
     <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
      <check card='1' diag='8|0|XTTE0590|index'>
       <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line='414' var='Q{}section' as='element()*' slot='3' eval='4'>
     <filter flags=''>
      <slash simple='1'>
       <varRef name='Q{}parent' slot='1'/>
       <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
      </slash>
      <vc op='eq' comp='CCC'>
       <attVal name='Q{}id' chk='0'/>
       <subscript>
        <varRef name='Q{}ids' slot='0'/>
        <varRef name='Q{}index' slot='2'/>
       </subscript>
      </vc>
     </filter>
     <let line='415' var='Q{}title' as='item()?' slot='4' eval='7'>
      <first>
       <sequence>
        <slash simple='2'>
         <varRef name='Q{}section' slot='3'/>
         <axis name='attribute' nodeTest='attribute(Q{}title)' jsTest='return item.name===&#39;title&#39;'/>
        </slash>
        <slash simple='2'>
         <varRef name='Q{}section' slot='3'/>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </slash>
        <subscript>
         <varRef name='Q{}ids' slot='0'/>
         <varRef name='Q{}index' slot='2'/>
        </subscript>
       </sequence>
      </first>
      <choose line='417'>
       <vc op='gt' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <empty/>
       <and line='418' op='and'>
        <vc op='eq' onEmpty='0' comp='CAVC'>
         <varRef name='Q{}index' slot='2'/>
         <fn name='count'>
          <varRef name='Q{}ids' slot='0'/>
         </fn>
        </vc>
        <fn name='empty'>
         <varRef name='Q{}section' slot='3'/>
        </fn>
       </and>
       <let line='420' var='Q{}last' as='xs:string?' slot='5' eval='7'>
        <subscript>
         <varRef name='Q{}ids' slot='0'/>
         <varRef name='Q{}index' slot='2'/>
        </subscript>
        <let line='423' var='Q{}prefix' as='xs:string' slot='6' eval='16'>
         <choose ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' module='app-functions.xsl' line='23'>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <check ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' module='jstree.xsl' line='421' card='1' diag='0|0||f:usual-prefix'>
            <cvUntyped to='xs:string'>
             <data>
              <slash simple='2'>
               <slash simple='2'>
                <filter flags='b'>
                 <slash simple='1'>
                  <varRef name='Q{}parent' slot='1'/>
                  <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
                 </slash>
                 <gc op='=' card='N:1' comp='CCC'>
                  <data>
                   <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
                  </data>
                  <varRef name='Q{}last' slot='5'/>
                 </gc>
                </filter>
                <axis line='423' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
               </slash>
               <axis line='423' name='attribute' nodeTest='attribute(Q{}namespace)' jsTest='return item.name===&#39;namespace&#39;'/>
              </slash>
             </data>
            </cvUntyped>
           </check>
           <str val='http://saxonica.com/ns/interactiveXSLT'/>
          </vc>
          <str val='ixsl'/>
          <true/>
          <str val=''/>
         </choose>
         <elem line='426' name='li' nsuri=''>
          <sequence>
           <att name='idt' flags='l'>
            <varRef name='Q{}last' slot='5'/>
           </att>
           <att name='class' flags='l'>
            <str val='trail'/>
           </att>
           <valueOf line='427' flags='l'>
            <choose line='425'>
             <vc op='ne' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
              <varRef name='Q{}prefix' slot='6'/>
              <str val=''/>
             </vc>
             <fn name='concat'>
              <varRef name='Q{}prefix' slot='6'/>
              <str val=':'/>
              <varRef name='Q{}last' slot='5'/>
             </fn>
             <true/>
             <varRef name='Q{}last' slot='5'/>
            </choose>
           </valueOf>
          </sequence>
         </elem>
        </let>
       </let>
       <vc line='430' op='eq' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <elem line='431' name='li' nsuri=''>
        <sequence>
         <att name='idt' flags='l'>
          <fn name='string-join'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash simple='2'>
              <varRef name='Q{}section' slot='3'/>
              <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
             </slash>
            </data>
           </convert>
           <str val=' '/>
          </fn>
         </att>
         <att name='class' flags='l'>
          <str val='trail'/>
         </att>
         <valueOf line='432' flags='l'>
          <fn name='string-join'>
           <convert from='xs:anyAtomicType' to='xs:string'>
            <data>
             <varRef name='Q{}title' slot='4'/>
            </data>
           </convert>
           <str val=' '/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
       <true/>
       <sequence line='436'>
        <elem name='li' nsuri=''>
         <sequence>
          <att name='idt' flags='l'>
           <fn name='string-join'>
            <convert from='xs:untypedAtomic' to='xs:string'>
             <data>
              <slash simple='2'>
               <varRef name='Q{}section' slot='3'/>
               <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
              </slash>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </att>
          <att name='class' flags='l'>
           <str val='trail'/>
          </att>
          <valueOf line='437' flags='l'>
           <fn name='string-join'>
            <convert from='xs:anyAtomicType' to='xs:string'>
             <data>
              <varRef name='Q{}title' slot='4'/>
             </data>
            </convert>
            <str val=' '/>
           </fn>
          </valueOf>
          <valueOf flags='el'>
           <str val=' ▷'/>
          </valueOf>
         </sequence>
        </elem>
        <callT line='438' name='Q{}get-trail' bSlot='0' flags='t'>
         <withParam name='Q{}ids' flags='c' as='xs:string*'>
          <varRef line='439' name='Q{}ids' slot='0'/>
         </withParam>
         <withParam name='Q{}parent' flags='c' as='element()?'>
          <check line='440' card='?' diag='8|0|XTTE0590|parent'>
           <varRef name='Q{}section' slot='3'/>
          </check>
         </withParam>
         <withParam name='Q{}index' flags='c' as='xs:integer'>
          <arith line='441' op='+' calc='i+i'>
           <varRef name='Q{}index' slot='2'/>
           <int val='1'/>
          </arith>
         </withParam>
        </callT>
       </sequence>
      </choose>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='29' binds='2'>
  <function name='Q{urn:viewerapp.function}navpage' line='343' module='jstree.xsl' eval='8' flags='pU' as='item()*' slots='1'>
   <arg name='Q{}class' as='item()*'/>
   <ifCall role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='345' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
    <int val='16'/>
    <empty/>
    <callT line='346' name='Q{}navpage' bSlot='0'>
     <withParam name='Q{}class' flags='c' as='xs:string'>
      <treat line='347' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|class'>
       <check card='1' diag='8|0|XTTE0590|class'>
        <cvUntyped to='xs:string' diag='8|0|XTTE0590|class'>
         <data>
          <varRef name='Q{}class' slot='0'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </withParam>
    </callT>
   </ifCall>
  </function>
 </co>
 <co id='30' binds=''>
  <function name='Q{urn:viewerapp.function}fn-name' line='31' module='app-functions.xsl' eval='16' flags='pU' as='xs:string' slots='2'>
   <arg name='Q{}fn-element' as='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
   <let role='body' ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='33' var='Q{}prefix' as='xs:string' slot='1' eval='16'>
    <choose line='23'>
     <vc op='eq' onEmpty='0' comp='CCC'>
      <check line='33' card='1' diag='0|0||f:usual-prefix'>
       <cvUntyped to='xs:string'>
        <data>
         <slash simple='2'>
          <slash simple='1'>
           <varRef name='Q{}fn-element' slot='0'/>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
          </slash>
          <axis name='attribute' nodeTest='attribute(Q{}namespace)' jsTest='return item.name===&#39;namespace&#39;'/>
         </slash>
        </data>
       </cvUntyped>
      </check>
      <str val='http://saxonica.com/ns/interactiveXSLT'/>
     </vc>
     <str val='ixsl'/>
     <true/>
     <str val=''/>
    </choose>
    <choose line='35'>
     <vc op='ne' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
      <varRef name='Q{}prefix' slot='1'/>
      <str val=''/>
     </vc>
     <fn name='concat'>
      <varRef name='Q{}prefix' slot='1'/>
      <str val=':'/>
      <atomSing card='?' diag='0|2||fn:concat'>
       <slash simple='1'>
        <varRef name='Q{}fn-element' slot='0'/>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
       </slash>
      </atomSing>
     </fn>
     <true/>
     <fn name='string'>
      <check card='?' diag='0|0||fn:string'>
       <slash simple='1'>
        <varRef name='Q{}fn-element' slot='0'/>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
       </slash>
      </check>
     </fn>
    </choose>
   </let>
  </function>
 </co>
 <co id='31' binds=''>
  <function name='Q{urn:viewerapp.function}fn-list' line='12' module='app-functions.xsl' eval='4' flags='pU' as='element()*' slots='1'>
   <arg name='Q{}fns' as='element()*'/>
   <sort role='body' ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='14'>
    <varRef role='select' name='Q{}fns' slot='0'/>
    <sortKey line='15' comp='CAC|http://saxon.sf.net/collation?lang=en'>
     <fn role='select' name='lower-case'>
      <check card='?' diag='0|0||fn:lower-case'>
       <cvUntyped to='xs:string'>
        <data>
         <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
        </data>
       </cvUntyped>
      </check>
     </fn>
     <str role='order' val='ascending'/>
     <str role='lang' val='en'/>
     <str role='caseOrder' val='#default'/>
     <str role='stable' val='yes'/>
    </sortKey>
   </sort>
  </function>
 </co>
 <co id='13' binds='3 25 32'>
  <template name='Q{}process-hashchange' flags='os' line='159' module='jstree.xsl' slots='2'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='160' var='Q{}hash-parts' as='xs:string*' slot='0' eval='4'>
    <fn name='tokenize'>
     <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:tokenize'>
      <check card='?' diag='0|0||fn:tokenize'>
       <cvUntyped to='xs:string'>
        <data>
         <ufCall name='Q{urn:viewerapp.function}get-hash' tailCall='false' bSlot='0'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <str val='/'/>
     <str val=''/>
    </fn>
    <let line='163' var='Q{}docName' as='xs:string' slot='1' eval='8'>
     <fn name='concat'>
      <gVarRef name='Q{}location' bSlot='1'/>
      <str val='/'/>
      <first line='161'>
       <varRef name='Q{}hash-parts' slot='0'/>
      </first>
      <str val='.xml'/>
     </fn>
     <ifCall line='166' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
      <int val='0'/>
      <varRef name='Q{}docName' slot='1'/>
      <callT line='167' name='Q{}render-page' bSlot='2'>
       <withParam name='Q{}hash-parts' flags='c' as='xs:string*'>
        <varRef line='168' name='Q{}hash-parts' slot='0'/>
       </withParam>
       <withParam name='Q{}docName' flags='c' as='xs:string'>
        <varRef line='169' name='Q{}docName' slot='1'/>
       </withParam>
      </callT>
     </ifCall>
    </let>
   </let>
  </template>
 </co>
 <co id='33' binds='34'>
  <function name='Q{urn:viewerapp.function}get-first-item' line='624' module='jstree.xsl' eval='7' flags='pU' as='node()?' slots='2'>
   <arg name='Q{}start' as='item()*'/>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='626' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:anyAtomicType*' slot='1' eval='4'>
    <data>
     <varRef name='Q{}start' slot='0'/>
    </data>
    <check card='?' diag='5|0|XTTE0780|f:get-first-item#1'>
     <filter flags='b'>
      <slash simple='2'>
       <slash simple='1'>
        <gVarRef name='Q{}navlist' bSlot='0'/>
        <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
       </slash>
       <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
      </slash>
      <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
       <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
       <attVal name='Q{}id' chk='0'/>
      </gc>
     </filter>
    </check>
   </let>
  </function>
 </co>
 <co id='34' binds=''>
  <globalVariable name='Q{}navlist' type='element(Q{}div)' line='47' module='jstree.xsl' visibility='PRIVATE' jsAcceptor='function test(item) {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;};if (test(val)) {return val;} else {throw SaxonJS.XError(&#39;Conversion failed&#39;, &#39;XTTE0590&#39;);}' jsCardCheck='function c(n) {return n==1;};'>
   <check ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='47' card='1' diag='3|0|XTTE0570|navlist'>
    <filter flags='b'>
     <slash simple='2'>
      <slash simple='2'>
       <slash simple='2'>
        <slash simple='1'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
         <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
        </slash>
        <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
       </slash>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
     </slash>
     <vc op='eq' onEmpty='0' comp='CCC'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{}id' chk='0'/>
      </cast>
      <str val='nav'/>
     </vc>
    </filter>
   </check>
  </globalVariable>
 </co>
 <co id='35' binds='25 36'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onmouseover' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='0.5' seq='62' rank='0' minImp='0' slots='1' flags='s' line='132' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{}span)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;span&#39;;'/>
      <axis ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='132' name='attribute' nodeTest='attribute(Q{}data-href)' jsTest='return item.name===&#39;data-href&#39;'/>
     </p.withPredicate>
     <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='132' op='eq' comp='CCC'>
      <attVal name='Q{}class' chk='0'/>
      <str val='flink'/>
     </vc>
    </p.withPredicate>
    <let role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='133' var='Q{}docName' as='xs:string' slot='0' eval='8'>
     <fn name='concat'>
      <gVarRef name='Q{}location' bSlot='0'/>
      <str val='/ixsl-extension.xml'/>
     </fn>
     <ifCall line='134' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
      <int val='0'/>
      <varRef name='Q{}docName' slot='0'/>
      <callT line='135' name='Q{}show-fn' bSlot='1'>
       <withParam name='Q{}span' flags='c' as='item()'>
        <dot line='136' type='element(Q{}span)'/>
       </withParam>
       <withParam name='Q{}docName' flags='c' as='xs:string'>
        <varRef line='137' name='Q{}docName' slot='0'/>
       </withParam>
      </callT>
     </ifCall>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='37' binds='38 38 38'>
  <mode name='Q{}function-list' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='4' prio='0.0' seq='36' rank='0' minImp='4' slots='3' flags='s' line='153' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='155'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
      <str val='document.title'/>
      <fn name='concat'>
       <str val='Saxon-JS '/>
       <attVal name='Q{}title' chk='0'/>
      </fn>
      <check card='1' diag='0|2||ixsl:set-property'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
      </check>
     </ifCall>
     <elem line='158' name='div' nsuri='' namespaces='f'>
      <sequence>
       <att name='id' flags='l'>
        <str val='fn-desc'/>
       </att>
       <elem line='159' name='h4' nsuri='' flags='l'>
        <sequence>
         <valueOf flags='l'>
          <str val='Functions in namespace '/>
         </valueOf>
         <valueOf flags='l'>
          <fn name='string-join'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash line='154' simple='2'>
              <slash simple='1'>
               <first>
                <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
               </first>
               <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
              </slash>
              <axis name='attribute' nodeTest='attribute(Q{}namespace)' jsTest='return item.name===&#39;namespace&#39;'/>
             </slash>
            </data>
           </convert>
           <str val=' '/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
       <elem line='160' name='p' nsuri='' flags='l'>
        <elem line='161' name='i' nsuri='' flags='l'>
         <valueOf flags='l'>
          <str val='Hover over a listed function to view a brief description. For full details, select the&#xA;                    function entry.'/>
         </valueOf>
        </elem>
       </elem>
      </sequence>
     </elem>
     <let line='169' var='Q{}height' as='xs:numeric?' slot='0' eval='7'>
      <arith op='-' calc='a-a'>
       <cvUntyped to='xs:double'>
        <atomSing card='?' diag='1|0||-'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
          <check card='?' diag='0|0||ixsl:get'>
           <filter flags='b'>
            <slash simple='2'>
             <filter flags='b'>
              <slash simple='2'>
               <slash simple='2'>
                <slash simple='1'>
                 <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
                 <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
                </slash>
                <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
               </slash>
               <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
              </slash>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <cast as='xs:string' emptiable='1'>
                <attVal name='Q{}id' chk='0'/>
               </cast>
               <str val='wrap'/>
              </vc>
             </filter>
             <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}id' chk='0'/>
             </cast>
             <str val='main'/>
            </vc>
           </filter>
          </check>
          <str val='offsetHeight'/>
         </ifCall>
        </atomSing>
       </cvUntyped>
       <int val='140'/>
      </arith>
      <sequence line='171'>
       <elem name='div' nsuri='' namespaces='f'>
        <sequence>
         <att name='style' flags='l'>
          <fn name='concat'>
           <str val='overflow:auto; height:'/>
           <fn name='string'>
            <convert from='xs:numeric' to='xs:string'>
             <varRef name='Q{}height' slot='0'/>
            </convert>
           </fn>
           <str val='px; margin-top:5px;margin-bottom:5px'/>
          </fn>
         </att>
         <let line='174' var='Q{}sfns' as='element(Q{http://www.saxonica.com/ns/doc/functions}function)*' slot='1' eval='3'>
          <sort ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' module='app-functions.xsl' line='14'>
           <axis role='select' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' module='functions-body.xsl' line='174' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
           <sortKey line='15' comp='CAC|http://saxon.sf.net/collation?lang=en'>
            <fn role='select' name='lower-case'>
             <check card='?' diag='0|0||fn:lower-case'>
              <cvUntyped to='xs:string'>
               <data>
                <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
               </data>
              </cvUntyped>
             </check>
            </fn>
            <str role='order' val='ascending'/>
            <str role='lang' val='en'/>
            <str role='caseOrder' val='#default'/>
            <str role='stable' val='yes'/>
           </sortKey>
          </sort>
          <sequence line='176'>
           <elem name='p' nsuri='' flags='l' namespaces='f'>
            <sequence>
             <valueOf flags='l'>
              <str val='Number of functions: '/>
             </valueOf>
             <valueOf flags='l'>
              <convert from='xs:integer' to='xs:string'>
               <fn name='count'>
                <varRef name='Q{}sfns' slot='1'/>
               </fn>
              </convert>
             </valueOf>
            </sequence>
           </elem>
           <let line='178' var='Q{}colsize' as='xs:integer?' slot='2' eval='7'>
            <cast as='xs:integer' emptiable='1'>
             <fn name='ceiling'>
              <arith op='div' calc='i/i'>
               <fn name='count'>
                <varRef name='Q{}sfns' slot='1'/>
               </fn>
               <int val='3'/>
              </arith>
             </fn>
            </cast>
            <elem line='180' name='table' nsuri='' flags='l' namespaces='f'>
             <sequence>
              <att name='class' flags='l'>
               <str val='fn-list-by-ns'/>
              </att>
              <elem line='181' name='tr' nsuri='' flags='l'>
               <sequence line='182'>
                <elem name='td' nsuri='' flags='l'>
                 <sequence>
                  <att name='valign' flags='l'>
                   <str val='top'/>
                  </att>
                  <elem line='183' name='p' nsuri='' flags='l' namespaces='f'>
                   <applyT line='184' mode='Q{}index' bSlot='0'>
                    <filter role='select' flags='p'>
                     <varRef name='Q{}sfns' slot='1'/>
                     <vc op='eq' comp='CAVC'>
                      <arith op='idiv' calc='i~i'>
                       <arith op='-' calc='i-i'>
                        <fn name='position'/>
                        <int val='1'/>
                       </arith>
                       <varRef name='Q{}colsize' slot='2'/>
                      </arith>
                      <int val='0'/>
                     </vc>
                    </filter>
                   </applyT>
                  </elem>
                 </sequence>
                </elem>
                <elem line='187' name='td' nsuri='' flags='l'>
                 <sequence>
                  <att name='valign' flags='l'>
                   <str val='top'/>
                  </att>
                  <elem line='188' name='p' nsuri='' flags='l' namespaces='f'>
                   <applyT line='189' mode='Q{}index' bSlot='1'>
                    <filter role='select' flags='p'>
                     <varRef name='Q{}sfns' slot='1'/>
                     <vc op='eq' comp='CAVC'>
                      <arith op='idiv' calc='i~i'>
                       <arith op='-' calc='i-i'>
                        <fn name='position'/>
                        <int val='1'/>
                       </arith>
                       <varRef name='Q{}colsize' slot='2'/>
                      </arith>
                      <int val='1'/>
                     </vc>
                    </filter>
                   </applyT>
                  </elem>
                 </sequence>
                </elem>
                <elem line='192' name='td' nsuri='' flags='l'>
                 <sequence>
                  <att name='valign' flags='l'>
                   <str val='top'/>
                  </att>
                  <elem line='193' name='p' nsuri='' flags='l' namespaces='f'>
                   <applyT line='194' mode='Q{}index' bSlot='2'>
                    <filter role='select' flags='p'>
                     <varRef name='Q{}sfns' slot='1'/>
                     <vc op='eq' comp='CAVC'>
                      <arith op='idiv' calc='i~i'>
                       <arith op='-' calc='i-i'>
                        <fn name='position'/>
                        <int val='1'/>
                       </arith>
                       <varRef name='Q{}colsize' slot='2'/>
                      </arith>
                      <int val='2'/>
                     </vc>
                    </filter>
                   </applyT>
                  </elem>
                 </sequence>
                </elem>
               </sequence>
              </elem>
             </sequence>
            </elem>
           </let>
          </sequence>
         </let>
        </sequence>
       </elem>
       <elem line='203' name='p' nsuri='' namespaces='f'>
        <sequence>
         <att name='class' flags='l'>
          <str val='small-note'/>
         </att>
         <valueOf flags='l'>
          <str val='The information in this section indicates which functions are implemented&#xA;            in this Saxon release, and any restrictions in the current implementation.&#xA;        '/>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='38' binds=''>
  <mode name='Q{}index' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='4' prio='0.0' seq='37' rank='0' minImp='4' slots='0' flags='s' line='210' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='211'>
     <elem name='span' nsuri='' namespaces='f'>
      <sequence>
       <att name='class' flags='l'>
        <str val='flink'/>
       </att>
       <att name='data-href' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <att name='data-ns' flags='l'>
        <str val='&#39;ixsl&#39;'/>
       </att>
       <valueOf line='212' flags='l'>
        <fn name='string-join'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
          </data>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
     <elem line='214' name='br' nsuri='' namespaces='f'>
      <empty/>
     </elem>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='15' binds='34'>
  <globalVariable name='Q{http://saxon.sf.net/generated-variable}gg121295574' type='element(Q{}input)?' line='27' module='findtext.xsl' visibility='PRIVATE' jsAcceptor='function test(item) {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;input&#39;;};if (test(val)) {return val;} else {throw SaxonJS.XError(&#39;Conversion failed&#39;, &#39;XTTE0590&#39;);}' jsCardCheck='function c(n) {return n&lt;=1;};'>
   <check ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='27' card='?' diag='0|0||ixsl:get'>
    <slash simple='2'>
     <slash simple='1'>
      <gVarRef name='Q{}navlist' bSlot='0'/>
      <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
     </slash>
     <axis name='child' nodeTest='element(Q{}input)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;input&#39;;'/>
    </slash>
   </check>
  </globalVariable>
 </co>
 <co id='6' binds='34'>
  <globalVariable name='Q{http://saxon.sf.net/generated-variable}gg762227630' type='element(Q{}li)*' line='97' module='findtext.xsl' visibility='PRIVATE' jsAcceptor='function test(item) {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;};if (test(val)) {return val;} else {throw SaxonJS.XError(&#39;Conversion failed&#39;, &#39;XTTE0590&#39;);}' jsCardCheck='function c() {return true;};'>
   <slash ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='97' simple='2'>
    <slash simple='1'>
     <gVarRef name='Q{}navlist' bSlot='0'/>
     <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
    </slash>
    <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
   </slash>
  </globalVariable>
 </co>
 <co id='39' binds='25 20 40 41 40'>
  <template name='Q{}main' flags='os' line='49' module='jstree.xsl' slots='1'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='50' var='Q{}catDocName' as='xs:string' slot='0' eval='8'>
    <fn name='concat'>
     <gVarRef name='Q{}location' bSlot='0'/>
     <str val='/catalog.xml'/>
    </fn>
    <sequence line='51'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
      <int val='0'/>
      <varRef name='Q{}catDocName' slot='0'/>
      <callT line='52' name='Q{}list' bSlot='1'>
       <withParam name='Q{}docName' flags='c' as='xs:string'>
        <varRef line='53' name='Q{}catDocName' slot='0'/>
       </withParam>
      </callT>
     </ifCall>
     <ifCall line='57' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
      <int val='0'/>
      <gVarRef name='Q{}implement-doc' bSlot='2'/>
      <callT line='60' name='Q{}get-implement-doc' bSlot='3'>
       <withParam name='Q{}implement-doc' flags='c' as='xs:string'>
        <gVarRef line='61' name='Q{}implement-doc' bSlot='4'/>
       </withParam>
      </callT>
     </ifCall>
    </sequence>
   </let>
  </template>
 </co>
 <co id='32' binds='34 42 43 44 45 14 28 11 34'>
  <template name='Q{}render-page' flags='os' line='175' module='jstree.xsl' slots='9'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='177'>
    <param name='Q{}docName' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='178' name='Q{}hash-parts' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <let line='179' var='Q{}start' as='item()?' slot='2' eval='7'>
     <first>
      <varRef name='Q{}hash-parts' slot='1'/>
     </first>
     <let line='180' var='Q{}first-item' as='element(Q{}li)?' slot='3' eval='7'>
      <let var='Q{}start' as='item()?' slot='4' eval='6'>
       <varRef name='Q{}start' slot='2'/>
       <let line='626' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:anyAtomicType*' slot='5' eval='4'>
        <data>
         <varRef name='Q{}start' slot='4'/>
        </data>
        <check card='?' diag='5|0|XTTE0780|f:get-first-item#1'>
         <filter flags='b'>
          <slash simple='2'>
           <slash simple='1'>
            <gVarRef name='Q{}navlist' bSlot='0'/>
            <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
           </slash>
           <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
          </slash>
          <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
           <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='5'/>
           <attVal name='Q{}id' chk='0'/>
          </gc>
         </filter>
        </check>
       </let>
      </let>
      <let line='182' var='Q{}doc' as='document-node()?' slot='6' eval='7'>
       <choose>
        <fn name='doc-available'>
         <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc-available'>
          <check card='?' diag='0|0||fn:doc-available'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}docName' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
        <fn name='doc'>
         <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc'>
          <check card='?' diag='0|0||fn:doc'>
           <cvUntyped to='xs:string'>
            <data>
             <varRef name='Q{}docName' slot='0'/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
       </choose>
       <choose line='184'>
        <and op='and'>
         <fn name='exists'>
          <varRef name='Q{}doc' slot='6'/>
         </fn>
         <fn name='exists'>
          <varRef name='Q{}first-item' slot='3'/>
         </fn>
        </and>
        <sequence line='185'>
         <callT name='Q{}show-listitems' bSlot='1'>
          <withParam name='Q{}doc' flags='c' as='document-node()'>
           <check line='186' card='1' diag='8|0|XTTE0590|doc'>
            <varRef name='Q{}doc' slot='6'/>
           </check>
          </withParam>
          <withParam name='Q{}ids' flags='c'>
           <varRef line='187' name='Q{}hash-parts' slot='1'/>
          </withParam>
          <withParam name='Q{}index' flags='c' as='xs:integer'>
           <int val='1'/>
          </withParam>
          <withParam name='Q{}item' flags='c' as='node()?'>
           <varRef line='189' name='Q{}first-item' slot='3'/>
          </withParam>
         </callT>
         <let line='191' var='Q{}count' as='xs:integer' slot='7' eval='8'>
          <fn name='count'>
           <varRef name='Q{}hash-parts' slot='1'/>
          </fn>
          <sequence line='195'>
           <resultDoc global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
            <str role='href' val='#main'/>
            <choose role='content' line='198'>
             <and op='and'>
              <and line='194' op='and'>
               <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <atomSing card='?' diag='1|0||eq'>
                 <varRef name='Q{}start' slot='2'/>
                </atomSing>
                <str val='ixsl-extension'/>
               </vc>
               <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <atomSing card='?' diag='1|0||eq'>
                 <subscript>
                  <varRef name='Q{}hash-parts' slot='1'/>
                  <int val='2'/>
                 </subscript>
                </atomSing>
                <str val='functions'/>
               </vc>
              </and>
              <compareToInt op='eq' val='3'>
               <varRef name='Q{}count' slot='7'/>
              </compareToInt>
             </and>
             <applyT line='200' mode='Q{}f' bSlot='2'>
              <filter role='select' flags=''>
               <slash simple='1'>
                <varRef name='Q{}doc' slot='6'/>
                <axis name='descendant' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
               </slash>
               <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <fn name='string'>
                 <check card='?' diag='0|0||fn:string'>
                  <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
                 </check>
                </fn>
                <atomSing card='?' diag='1|1||eq'>
                 <subscript>
                  <varRef name='Q{}hash-parts' slot='1'/>
                  <int val='3'/>
                 </subscript>
                </atomSing>
               </vc>
              </filter>
             </applyT>
             <compareToInt line='220' op='eq' val='1'>
              <varRef name='Q{}count' slot='7'/>
             </compareToInt>
             <applyT line='221' mode='Q{}primary' bSlot='3'>
              <varRef role='select' name='Q{}doc' slot='6'/>
             </applyT>
             <true/>
             <applyT line='224' mode='Q{}get-section' bSlot='4'>
              <slash role='select' simple='1'>
               <varRef name='Q{}doc' slot='6'/>
               <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
              </slash>
              <withParam name='Q{}ids'>
               <varRef line='225' name='Q{}hash-parts' slot='1'/>
              </withParam>
              <withParam name='Q{}parent' as='element()*'>
               <slash line='226' simple='1'>
                <varRef name='Q{}doc' slot='6'/>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
              </withParam>
              <withParam name='Q{}index' as='xs:integer'>
               <int val='2'/>
              </withParam>
             </applyT>
            </choose>
           </resultDoc>
           <ifCall line='233' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
            <int val='1'/>
            <empty/>
            <callT line='234' name='Q{}scrollpage' bSlot='5'/>
           </ifCall>
           <resultDoc line='237' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
            <str role='href' val='#trail'/>
            <let role='content' line='239' var='Q{}ul' as='element(Q{}ul)*' slot='8' eval='8'>
             <filter flags='b'>
              <slash simple='2'>
               <filter flags='b'>
                <slash simple='2'>
                 <slash simple='2'>
                  <slash simple='2'>
                   <slash simple='1'>
                    <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
                    <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
                   </slash>
                   <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
                  </slash>
                  <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
                 </slash>
                 <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
                </slash>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <attVal name='Q{}id' chk='0'/>
                 </cast>
                 <str val='header'/>
                </vc>
               </filter>
               <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
              </slash>
              <vc op='eq' onEmpty='0' comp='CCC'>
               <cast as='xs:string' emptiable='1'>
                <attVal name='Q{}class' chk='0'/>
               </cast>
               <str val='trail'/>
              </vc>
             </filter>
             <sequence line='240'>
              <copyOf flags='vc'>
               <filter flags=''>
                <slash simple='2'>
                 <varRef name='Q{}ul' slot='8'/>
                 <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
                </slash>
                <vc op='eq' comp='CCC'>
                 <attVal name='Q{}id' chk='0'/>
                 <str val='trail1'/>
                </vc>
               </filter>
              </copyOf>
              <copyOf line='241' flags='vc'>
               <filter flags=''>
                <slash simple='2'>
                 <varRef name='Q{}ul' slot='8'/>
                 <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
                </slash>
                <vc op='eq' comp='CCC'>
                 <attVal name='Q{}id' chk='0'/>
                 <str val='trail2'/>
                </vc>
               </filter>
              </copyOf>
              <callT line='242' name='Q{}get-trail' bSlot='6'>
               <withParam name='Q{}ids' flags='c' as='xs:string*'>
                <treat line='243' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
                 <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
                  <data>
                   <varRef name='Q{}hash-parts' slot='1'/>
                  </data>
                 </cvUntyped>
                </treat>
               </withParam>
               <withParam name='Q{}parent' flags='c' as='document-node()?'>
                <varRef line='244' name='Q{}doc' slot='6'/>
               </withParam>
               <withParam name='Q{}index' flags='c' as='xs:integer'>
                <int val='1'/>
               </withParam>
              </callT>
             </sequence>
            </let>
           </resultDoc>
           <ifCall line='249' name='Q{http://saxonica.com/ns/interactiveXSLT}schedule-action' type='item()*'>
            <int val='1'/>
            <empty/>
            <callT line='250' name='Q{}highlight-item' bSlot='7'>
             <withParam name='Q{}parent' flags='c' as='element(Q{}div)'>
              <gVarRef line='251' name='Q{}navlist' bSlot='8'/>
             </withParam>
             <withParam name='Q{}ids' flags='c' as='xs:string*'>
              <treat line='252' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
               <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
                <data>
                 <varRef name='Q{}hash-parts' slot='1'/>
                </data>
               </cvUntyped>
              </treat>
             </withParam>
             <withParam name='Q{}index' flags='c' as='xs:integer'>
              <int val='1'/>
             </withParam>
            </callT>
           </ifCall>
          </sequence>
         </let>
        </sequence>
        <true/>
        <resultDoc line='258' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
         <str role='href' val='#main'/>
         <sequence role='content' line='259'>
          <elem name='h1' nsuri=''>
           <valueOf flags='el'>
            <str val='Page Not Found'/>
           </valueOf>
          </elem>
          <elem line='260' name='p' nsuri=''>
           <valueOf flags='el'>
            <str val='Error in URI hash-path:'/>
           </valueOf>
          </elem>
          <elem line='261' name='p' nsuri=''>
           <sequence line='263'>
            <valueOf flags='l'>
             <fn name='string-join'>
              <convert from='xs:anyAtomicType' to='xs:string'>
               <choose>
                <fn name='exists'>
                 <varRef name='Q{}doc' slot='6'/>
                </fn>
                <data>
                 <emptyTextNodeRemover>
                  <sequence>
                   <str val='List Item &#39;'/>
                   <varRef name='Q{}start' slot='2'/>
                  </sequence>
                 </emptyTextNodeRemover>
                </data>
                <true/>
                <data>
                 <mergeAdj>
                  <sequence>
                   <str val='Document &#39;'/>
                   <varRef name='Q{}docName' slot='0'/>
                  </sequence>
                 </mergeAdj>
                </data>
               </choose>
              </convert>
              <str val=' '/>
             </fn>
            </valueOf>
            <valueOf line='261' flags='el'>
             <str val='&#39; not found'/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </resultDoc>
       </choose>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='46' binds='46'>
  <template name='Q{}add-list' flags='os' line='489' module='jstree.xsl' slots='10'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='492'>
    <param name='Q{}section' slot='0' flags='i' as='node()'>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|section'>
      <check card='1' diag='8|0|XTTE0590|section'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <param line='493' name='Q{}ids' slot='1' as='xs:string*'>
     <empty role='select'/>
     <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
      <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
       <data>
        <supplied slot='1'/>
       </data>
      </cvUntyped>
     </treat>
    </param>
    <param line='494' name='Q{}index' slot='2' flags='i' as='xs:integer'>
     <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
      <check card='1' diag='8|0|XTTE0590|index'>
       <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <choose line='500'>
     <fn name='exists'>
      <slash simple='1'>
       <varRef name='Q{}section' slot='0'/>
       <axis name='child' nodeTest='(element(Q{}section) | element(Q{}j))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;j&#39;;};return a()||b();'/>
      </slash>
     </fn>
     <let line='504' var='Q{http://saxon.sf.net/generated-variable}v1' as='xs:string?' slot='3' eval='13'>
      <subscript>
       <varRef name='Q{}ids' slot='1'/>
       <arith op='+' calc='i+i'>
        <varRef name='Q{}index' slot='2'/>
        <int val='1'/>
       </arith>
      </subscript>
      <let var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:boolean' slot='4' eval='13'>
       <vc op='lt' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='1'/>
        </fn>
       </vc>
       <elem line='501' name='ul' nsuri=''>
        <forEach line='502'>
         <slash simple='1'>
          <varRef name='Q{}section' slot='0'/>
          <axis name='child' nodeTest='(element(Q{}section) | element(Q{}j))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;j&#39;;};return a()||b();'/>
         </slash>
         <let line='504' var='Q{}onpath' as='xs:boolean' slot='5' eval='16'>
          <and op='and'>
           <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='4'/>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <attVal name='Q{}id' chk='0'/>
            <varRef name='Q{http://saxon.sf.net/generated-variable}v1' slot='3'/>
           </vc>
          </and>
          <let line='505' var='Q{}contains' as='xs:boolean' slot='6' eval='8'>
           <fn name='exists'>
            <axis name='child' nodeTest='((element(Q{}section) | element(Q{}j)) | element(Q{http://www.saxonica.com/ns/doc/functions}function))' jsTest='function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;j&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;};return a()||b();'/>
           </fn>
           <elem line='506' name='li' nsuri='' flags='l'>
            <sequence>
             <att name='id' flags='l'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <attVal name='Q{}id' chk='0'/>
              </convert>
             </att>
             <att line='510' name='class' flags='l'>
              <choose>
               <and op='and'>
                <varRef name='Q{}onpath' slot='5'/>
                <varRef name='Q{}contains' slot='6'/>
               </and>
               <str val='open'/>
               <varRef name='Q{}contains' slot='6'/>
               <str val='closed'/>
               <true/>
               <str val='empty'/>
              </choose>
             </att>
             <elem line='511' name='span' nsuri='' flags='l'>
              <sequence>
               <att name='class' flags='l'>
                <str val='item'/>
               </att>
               <valueOf line='512' flags='l'>
                <fn name='string-join'>
                 <convert from='xs:anyAtomicType' to='xs:string'>
                  <choose>
                   <fn name='exists'>
                    <axis name='attribute' nodeTest='attribute(Q{}title)' jsTest='return item.name===&#39;title&#39;'/>
                   </fn>
                   <data>
                    <axis name='attribute' nodeTest='attribute(Q{}title)' jsTest='return item.name===&#39;title&#39;'/>
                   </data>
                   <true/>
                   <data>
                    <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
                   </data>
                  </choose>
                 </convert>
                 <str val=' '/>
                </fn>
               </valueOf>
              </sequence>
             </elem>
             <choose line='514'>
              <and op='and'>
               <varRef name='Q{}onpath' slot='5'/>
               <varRef name='Q{}contains' slot='6'/>
              </and>
              <let line='516' var='Q{http://saxon.sf.net/generated-variable}v2' as='xs:string?' slot='7' eval='13'>
               <subscript>
                <varRef name='Q{}ids' slot='1'/>
                <arith op='+' calc='i+i'>
                 <varRef name='Q{}index' slot='2'/>
                 <int val='1'/>
                </arith>
               </subscript>
               <callT line='515' name='Q{}add-list' bSlot='0'>
                <withParam name='Q{}section' flags='c' as='element()'>
                 <check line='516' card='1' diag='8|0|XTTE0590|section'>
                  <filter flags='b'>
                   <slash simple='1'>
                    <varRef name='Q{}section' slot='0'/>
                    <axis name='child' nodeTest='(element(Q{}section) | element(Q{}j))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;j&#39;;};return a()||b();'/>
                   </slash>
                   <vc op='eq' onEmpty='0' comp='CCC'>
                    <cast as='xs:string' emptiable='1'>
                     <attVal name='Q{}id' chk='0'/>
                    </cast>
                    <varRef name='Q{http://saxon.sf.net/generated-variable}v2' slot='7'/>
                   </vc>
                  </filter>
                 </check>
                </withParam>
                <withParam name='Q{}ids' flags='c' as='xs:string*'>
                 <varRef line='517' name='Q{}ids' slot='1'/>
                </withParam>
                <withParam name='Q{}index' flags='c' as='xs:integer'>
                 <arith line='518' op='+' calc='i+i'>
                  <varRef name='Q{}index' slot='2'/>
                  <int val='1'/>
                 </arith>
                </withParam>
               </callT>
              </let>
             </choose>
            </sequence>
           </elem>
          </let>
         </let>
        </forEach>
       </elem>
      </let>
     </let>
    </choose>
    <choose line='525'>
     <fn name='exists'>
      <slash simple='1'>
       <varRef name='Q{}section' slot='0'/>
       <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
      </slash>
     </fn>
     <elem line='526' name='ul' nsuri=''>
      <forEach line='527'>
       <slash simple='1'>
        <varRef name='Q{}section' slot='0'/>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
       </slash>
       <let line='529' var='Q{}fn-name' as='xs:string' slot='8' eval='8'>
        <fn name='string'>
         <check card='?' diag='0|0||fn:string'>
          <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
         </check>
        </fn>
        <let line='532' var='Q{}prefix' as='xs:string' slot='9' eval='16'>
         <choose ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' module='app-functions.xsl' line='23'>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <check ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' module='jstree.xsl' line='532' card='1' diag='0|0||f:usual-prefix'>
            <cvUntyped to='xs:string'>
             <data>
              <slash simple='2'>
               <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
               <axis name='attribute' nodeTest='attribute(Q{}namespace)' jsTest='return item.name===&#39;namespace&#39;'/>
              </slash>
             </data>
            </cvUntyped>
           </check>
           <str val='http://saxonica.com/ns/interactiveXSLT'/>
          </vc>
          <str val='ixsl'/>
          <true/>
          <str val=''/>
         </choose>
         <elem line='535' name='li' nsuri='' flags='l'>
          <sequence>
           <att name='id' flags='l'>
            <varRef name='Q{}fn-name' slot='8'/>
           </att>
           <att line='536' name='class' flags='l'>
            <str val='empty'/>
           </att>
           <elem line='537' name='span' nsuri='' flags='l'>
            <sequence>
             <att name='class' flags='l'>
              <str val='item'/>
             </att>
             <valueOf line='538' flags='l'>
              <choose line='534'>
               <vc op='ne' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <varRef name='Q{}prefix' slot='9'/>
                <str val=''/>
               </vc>
               <fn name='concat'>
                <varRef name='Q{}prefix' slot='9'/>
                <str val=':'/>
                <varRef name='Q{}fn-name' slot='8'/>
               </fn>
               <true/>
               <varRef name='Q{}fn-name' slot='8'/>
              </choose>
             </valueOf>
            </sequence>
           </elem>
          </sequence>
         </elem>
        </let>
       </let>
      </forEach>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id='41' binds=''>
  <template name='Q{}get-implement-doc' flags='os' line='79' module='jstree.xsl' slots='2'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='81' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:boolean' slot='1' eval='13'>
    <vc op='lt' comp='CalVC'>
     <fn name='current-date'/>
     <atomic val='2000-01-01' type='xs:date'/>
    </vc>
    <sequence line='80'>
     <param name='Q{}implement-doc' slot='0'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <filter line='81' flags='ib'>
      <fn name='doc'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc'>
        <check card='?' diag='0|0||fn:doc'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}implement-doc' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </fn>
      <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
     </filter>
    </sequence>
   </let>
  </template>
 </co>
 <co id='21' binds='47 40 48 47 21 0 49 21 47 0 21 21 21 21 47 0'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='3' prio='-0.25' seq='18' part='1' rank='1' minImp='3' slots='0' flags='s' line='30' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='Q{http://www.saxonica.com/ns/doc/functions}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;'/>
    <compElem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='31'>
     <fn role='name' name='local-name'>
      <dot type='element()'/>
     </fn>
     <applyT role='content' line='32' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </compElem>
   </templateRule>
   <templateRule prec='3' prio='-0.25' seq='18' rank='1' minImp='3' slots='0' flags='s' line='30' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='Q{http://www.saxonica.com/ns/doc/elements}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;'/>
    <compElem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='31'>
     <fn role='name' name='local-name'>
      <dot type='element()'/>
     </fn>
     <applyT role='content' line='32' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </compElem>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='22' rank='2' minImp='3' slots='0' flags='s' line='40' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='41' flags='cti' bSlot='-1'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='42' rank='3' minImp='5' slots='0' flags='s' line='123' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}data-type)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;data-type&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='124'>
     <choose>
      <compareToInt op='gt' val='3'>
       <fn name='position'/>
      </compareToInt>
      <valueOf>
       <str val=' | '/>
      </valueOf>
     </choose>
     <elem line='125' name='i' nsuri='' namespaces='map ixsl f'>
      <valueOf line='126' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='55' rank='3' minImp='5' slots='0' flags='s' line='251' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}parent)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;parent&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='252'>
     <callT name='Q{}group' bSlot='0'/>
     <elem line='253' name='a' nsuri='' namespaces='map ixsl f'>
      <sequence>
       <att name='href' flags='l'>
        <fn name='concat'>
         <str val='/xsl-elements/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}name' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <att name='class' flags='l'>
        <str val='bodylink code'/>
       </att>
       <valueOf line='254' flags='l'>
        <fn name='concat'>
         <str val='xsl:'/>
         <attVal name='Q{}name' chk='0'/>
        </fn>
       </valueOf>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='39' rank='3' minImp='5' slots='7' flags='s' line='30' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-element)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;saxon-element&#39;;'/>
    <let role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='33' var='Q{}section-ids' as='attribute(Q{}id)*' slot='0' eval='4'>
     <sequence>
      <slash simple='2'>
       <fn name='reverse'>
        <slash simple='1'>
         <dot type='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-element)'/>
         <axis name='ancestor' nodeTest='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
        </slash>
       </fn>
       <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
      </slash>
      <slash simple='2'>
       <fn name='reverse'>
        <slash simple='1'>
         <dot type='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-element)'/>
         <axis name='ancestor' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
        </slash>
       </fn>
       <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
      </slash>
     </sequence>
     <let line='36' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:untypedAtomic*' slot='1' eval='4'>
      <data>
       <varRef name='Q{}section-ids' slot='0'/>
      </data>
      <let line='34' var='Q{}implement' as='document-node()' slot='2' eval='8'>
       <fn name='doc'>
        <gVarRef name='Q{}implement-doc' bSlot='1'/>
       </fn>
       <sequence line='40'>
        <elem name='h1' nsuri='' namespaces='map ixsl f'>
         <valueOf line='41' flags='l'>
          <fn name='concat'>
           <str val='ixsl:'/>
           <atomSing card='?' diag='0|1||fn:concat'>
            <axis line='32' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
           </atomSing>
          </fn>
         </valueOf>
        </elem>
        <applyT line='44' flags='c' bSlot='-1'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
        </applyT>
        <elem line='46' name='aside' nsuri='' namespaces='map ixsl f'>
         <valueOf line='47' flags='l'>
          <fn name='string-join'>
           <let ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' var='Q{}implement' as='document-node()' slot='3' eval='6'>
            <varRef ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' name='Q{}implement' slot='2'/>
            <let module='app-functions.xsl' line='49' var='Q{http://saxon.sf.net/generated-variable}v0' as='element(Q{}saxon)*' slot='4' eval='4'>
             <slash simple='2'>
              <slash simple='1'>
               <varRef name='Q{}implement' slot='3'/>
               <axis name='child' nodeTest='element(Q{}implement)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;implement&#39;;'/>
              </slash>
              <axis name='child' nodeTest='element(Q{}saxon)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;saxon&#39;;'/>
             </slash>
             <cvUntyped line='48' to='xs:string' diag='5|0|XTTE0780|f:edition#2'>
              <data>
               <forEach>
                <for line='47' var='Q{}t' as='xs:string' slot='5'>
                 <fn role='in' module='elements-body.xsl' name='tokenize'>
                  <treat ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||f:edition'>
                   <check card='1' diag='0|0||f:edition'>
                    <cvUntyped to='xs:string'>
                     <data>
                      <first>
                       <sequence>
                        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-edition)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;saxon-edition&#39;;'/>
                        <lastOf line='36'>
                         <slash simple='2'>
                          <filter flags='b'>
                           <slash simple='2'>
                            <slash simple='1'>
                             <varRef name='Q{}implement' slot='2'/>
                             <axis name='child' nodeTest='element(Q{}implement)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;implement&#39;;'/>
                            </slash>
                            <axis name='child' nodeTest='element(Q{}default)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;default&#39;;'/>
                           </slash>
                           <gc op='=' card='N:1' comp='CCC'>
                            <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
                            <attVal name='Q{}id' chk='0'/>
                           </gc>
                          </filter>
                          <axis name='attribute' nodeTest='attribute(Q{}saxon)' jsTest='return item.name===&#39;saxon&#39;'/>
                         </slash>
                        </lastOf>
                        <str val='default'/>
                       </sequence>
                      </first>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <str val='\s+'/>
                  <str val=''/>
                 </fn>
                 <fn role='return' name='upper-case'>
                  <varRef name='Q{}t' slot='5'/>
                 </fn>
                </for>
                <valueOf line='49'>
                 <fn name='string-join'>
                  <convert from='xs:anyAtomicType' to='xs:string'>
                   <let var='Q{http://saxon.sf.net/generated-variable}current-1197342495' as='xs:string' slot='6' eval='16'>
                    <dot type='xs:string'/>
                    <data>
                     <filter flags='b'>
                      <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='4'/>
                      <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                       <cast as='xs:string' emptiable='1'>
                        <attVal name='Q{}version' chk='0'/>
                       </cast>
                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-1197342495' slot='6'/>
                      </vc>
                     </filter>
                    </data>
                   </let>
                  </convert>
                  <str val=' '/>
                 </fn>
                </valueOf>
               </forEach>
              </data>
             </cvUntyped>
            </let>
           </let>
           <str val=' '/>
          </fn>
         </valueOf>
        </elem>
        <choose line='51'>
         <fn name='exists'>
          <filter flags='b'>
           <slash simple='2'>
            <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
            <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </slash>
           <fn name='empty'>
            <axis name='self' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute&#39;;'/>
           </fn>
          </filter>
         </fn>
         <applyT line='52' mode='Q{}model' bSlot='2'>
          <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
         </applyT>
        </choose>
        <choose line='55'>
         <fn name='exists'>
          <slash simple='2'>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute&#39;;'/>
          </slash>
         </fn>
         <sequence line='56'>
          <elem name='h3' nsuri='' namespaces='map ixsl f'>
           <sequence>
            <att name='class' flags='l'>
             <str val='subtitle'/>
            </att>
            <valueOf flags='Sl'>
             <str val='Attributes'/>
            </valueOf>
           </sequence>
          </elem>
          <applyT line='57' flags='c' bSlot='-1'>
           <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
          </applyT>
         </sequence>
        </choose>
        <applyT line='60' flags='c' bSlot='-1'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
        </applyT>
        <applyT line='63' flags='c' bSlot='-1'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
        </applyT>
        <applyT line='65' flags='c' bSlot='-1'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
        </applyT>
        <choose line='67'>
         <fn name='exists'>
          <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
         </fn>
         <sequence line='68'>
          <elem name='h3' nsuri='' namespaces='map ixsl f'>
           <sequence>
            <att name='class' flags='l'>
             <str val='subtitle'/>
            </att>
            <valueOf flags='l'>
             <str val='See also'/>
            </valueOf>
           </sequence>
          </elem>
          <applyT line='69' flags='ct' bSlot='-1'>
           <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
          </applyT>
         </sequence>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='26' part='1' rank='2' minImp='3' slots='0' flags='s' line='49' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='50'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Details'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='51' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='49' rank='3' minImp='5' slots='0' flags='s' line='184' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}sequence)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;sequence&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='185'>
     <callT name='Q{}group' bSlot='3'/>
     <valueOf flags='S'>
      <str val='('/>
     </valueOf>
     <applyT line='187' flags='i' bSlot='4'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
     <valueOf flags='S'>
      <str val=')'/>
     </valueOf>
     <callT line='189' name='Q{}repeat' bSlot='5' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='20' rank='2' minImp='3' slots='0' flags='s' line='36' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='37' mode='Q{}secondary' flags='t' bSlot='6'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='45' rank='3' minImp='5' slots='0' flags='s' line='145' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}desc)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;desc&#39;;'/>
    <applyT role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='146' flags='cti' bSlot='-1'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='52' rank='3' minImp='5' slots='0' flags='s' line='202' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}empty)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;empty&#39;;'/>
    <valueOf role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='202' flags='S'>
     <str val='none'/>
    </valueOf>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='24' rank='2' minImp='3' slots='0' flags='s' line='44' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='45'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='l'>
        <str val='Notes on the Saxon implementation'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='46' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='44' rank='3' minImp='5' slots='0' flags='s' line='139' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}attribute-value-template)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute-value-template&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='141'>
     <valueOf>
      <str val='{ '/>
     </valueOf>
     <applyT flags='i' bSlot='7'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
     <valueOf>
      <str val=' }'/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='28' part='1' rank='2' minImp='3' slots='1' flags='s' line='54' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='55'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Examples'/>
       </valueOf>
      </sequence>
     </elem>
     <choose line='58'>
      <fn name='exists'>
       <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
      </fn>
      <choose line='60'>
       <compareToInt op='eq' val='1'>
        <fn name='count'>
         <fn name='subsequence'>
          <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
          <int val='1'/>
          <int val='2'/>
         </fn>
        </fn>
       </compareToInt>
       <applyT line='61' flags='ct' bSlot='-1'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
       </applyT>
       <true/>
       <iterate line='64'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
        <params role='params' line='65'>
         <param name='Q{}i' slot='0' as='xs:integer'>
          <int role='select' val='1'/>
          <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|i'>
           <check card='1' diag='8|0|XTTE0590|i'>
            <cvUntyped to='xs:integer' diag='8|0|XTTE0590|i'>
             <data>
              <supplied slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </param>
        </params>
        <sequence role='action' line='67'>
         <elem name='h4' nsuri=''>
          <sequence>
           <valueOf flags='l'>
            <str val='Example '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}i' slot='0'/>
            </convert>
           </valueOf>
          </sequence>
         </elem>
         <applyT line='68' flags='ci' bSlot='-1'>
          <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
         </applyT>
         <nextIteration line='70'>
          <withParam name='Q{}i' as='xs:integer' slot='0'>
           <arith line='66' op='+' calc='i+i'>
            <varRef name='Q{}i' slot='0'/>
            <int val='1'/>
           </arith>
          </withParam>
         </nextIteration>
        </sequence>
       </iterate>
      </choose>
      <true/>
      <applyT line='77' flags='cti' bSlot='-1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='50' rank='3' minImp='5' slots='0' flags='s' line='192' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='193'>
     <callT name='Q{}group' bSlot='8'/>
     <elem line='194' name='i' nsuri='' namespaces='map ixsl f'>
      <valueOf line='195' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
     </elem>
     <callT line='197' name='Q{}repeat' bSlot='9' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='6' prio='0.0' seq='57' rank='5' minImp='0' slots='0' flags='s' line='88' module='jstree.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/catalog}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/catalog&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <elem role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='89' name='li' nsuri=''>
     <sequence>
      <att name='class' flags='l'>
       <str val='closed'/>
      </att>
      <att name='id' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}ref' chk='0'/>
       </convert>
      </att>
      <elem line='90' name='span' nsuri='' flags='l'>
       <sequence>
        <att name='class' flags='l'>
         <str val='item'/>
        </att>
        <valueOf line='91' flags='l'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <data>
           <dot type='element(Q{http://www.saxonica.com/ns/doc/catalog}section)'/>
          </data>
         </convert>
        </valueOf>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='26' rank='2' minImp='3' slots='0' flags='s' line='49' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='50'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Details'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='51' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='47' rank='3' minImp='5' slots='0' flags='s' line='166' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}in-category)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;in-category&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='167'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Category: '/>
      </valueOf>
     </elem>
     <valueOf line='168'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <attVal name='Q{}name' chk='0'/>
      </convert>
     </valueOf>
     <elem line='169' name='br' nsuri='' namespaces='map ixsl f'>
      <empty/>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='41' rank='3' minImp='5' slots='0' flags='s' line='104' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute&#39;;'/>
    <choose role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='106'>
     <vc op='eq' onEmpty='0' comp='CCC'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{}deprecated' chk='0'/>
      </cast>
      <str val='yes'/>
     </vc>
     <sequence line='108'>
      <valueOf flags='S'>
       <str val='['/>
      </valueOf>
      <valueOf>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
      <valueOf flags='S'>
       <str val=']?'/>
      </valueOf>
     </sequence>
     <vc line='111' op='eq' onEmpty='0' comp='CCC'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{}required' chk='0'/>
      </cast>
      <str val='yes'/>
     </vc>
     <elem line='112' name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf line='113' flags='l'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
     </elem>
     <true/>
     <sequence line='117'>
      <valueOf>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
      <valueOf flags='S'>
       <str val='?'/>
      </valueOf>
     </sequence>
    </choose>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='30' part='1' rank='2' minImp='3' slots='0' flags='s' line='82' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
    <elem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='85' name='p' nsuri=''>
     <elem name='span' nsuri='' flags='l'>
      <sequence>
       <att name='class' flags='l'>
        <str val='link'/>
       </att>
       <att name='data-href' flags='l'>
        <fn name='concat'>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}type' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}subtype' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}name' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <valueOf line='86' flags='l'>
        <fn name='concat'>
         <str val='ixsl:'/>
         <attVal name='Q{}name' chk='0'/>
        </fn>
       </valueOf>
       <choose line='87'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <attVal name='Q{}subtype' chk='0'/>
         <str val='functions'/>
        </vc>
        <valueOf flags='Sl'>
         <str val='()'/>
        </valueOf>
       </choose>
      </sequence>
     </elem>
    </elem>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='51' rank='3' minImp='5' slots='0' flags='s' line='200' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}text)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;text&#39;;'/>
    <valueOf role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='200' flags='S'>
     <str val='#PCDATA'/>
    </valueOf>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='22' part='1' rank='2' minImp='3' slots='0' flags='s' line='40' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='41' flags='cti' bSlot='-1'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='43' rank='3' minImp='5' slots='0' flags='s' line='130' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}constant)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;constant&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='133'>
     <choose>
      <or op='or'>
       <and op='and'>
        <compareToInt op='gt' val='1'>
         <fn name='position'/>
        </compareToInt>
        <fn name='empty'>
         <axis name='parent' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute-value-template)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute-value-template&#39;;'/>
        </fn>
       </and>
       <and op='and'>
        <compareToInt op='gt' val='2'>
         <fn name='position'/>
        </compareToInt>
        <fn name='exists'>
         <axis name='parent' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute-value-template)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute-value-template&#39;;'/>
        </fn>
       </and>
      </or>
      <valueOf>
       <str val=' | '/>
      </valueOf>
     </choose>
     <valueOf flags='S'>
      <str val='"'/>
     </valueOf>
     <valueOf line='135'>
      <convert from='xs:untypedAtomic' to='xs:string'>
       <attVal name='Q{}value' chk='0'/>
      </convert>
     </valueOf>
     <valueOf flags='S'>
      <str val='"'/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.5' seq='56' rank='4' minImp='5' slots='0' flags='s' line='258' module='elements-body.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{http://www.saxonica.com/ns/doc/elements}parent-category)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;parent-category&#39;;'/>
     <vc ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='258' op='eq' onEmpty='0' comp='CCC'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{}name' chk='0'/>
      </cast>
      <str val='sequence-constructor'/>
     </vc>
    </p.withPredicate>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='259'>
     <choose>
      <compareToInt op='gt' val='2'>
       <fn name='position'/>
      </compareToInt>
      <valueOf>
       <str val='; '/>
      </valueOf>
     </choose>
     <valueOf line='258'>
      <str val=' any XSLT element whose content model is &#xA;        '/>
     </valueOf>
     <elem line='260' name='i' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='Sl'>
       <str val='sequence-constructor'/>
      </valueOf>
     </elem>
     <valueOf line='258'>
      <str val='; any literal result element&#xA;    '/>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='28' rank='2' minImp='3' slots='1' flags='s' line='54' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='55'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Examples'/>
       </valueOf>
      </sequence>
     </elem>
     <choose line='58'>
      <fn name='exists'>
       <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
      </fn>
      <choose line='60'>
       <compareToInt op='eq' val='1'>
        <fn name='count'>
         <fn name='subsequence'>
          <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
          <int val='1'/>
          <int val='2'/>
         </fn>
        </fn>
       </compareToInt>
       <applyT line='61' flags='ct' bSlot='-1'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
       </applyT>
       <true/>
       <iterate line='64'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
        <params role='params' line='65'>
         <param name='Q{}i' slot='0' as='xs:integer'>
          <int role='select' val='1'/>
          <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|i'>
           <check card='1' diag='8|0|XTTE0590|i'>
            <cvUntyped to='xs:integer' diag='8|0|XTTE0590|i'>
             <data>
              <supplied slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </param>
        </params>
        <sequence role='action' line='67'>
         <elem name='h4' nsuri=''>
          <sequence>
           <valueOf flags='l'>
            <str val='Example '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}i' slot='0'/>
            </convert>
           </valueOf>
          </sequence>
         </elem>
         <applyT line='68' flags='ci' bSlot='-1'>
          <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
         </applyT>
         <nextIteration line='70'>
          <withParam name='Q{}i' as='xs:integer' slot='0'>
           <arith line='66' op='+' calc='i+i'>
            <varRef name='Q{}i' slot='0'/>
            <int val='1'/>
           </arith>
          </withParam>
         </nextIteration>
        </sequence>
       </iterate>
      </choose>
      <true/>
      <applyT line='77' flags='cti' bSlot='-1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='49' part='1' rank='3' minImp='5' slots='0' flags='s' line='184' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}choice)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;choice&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='185'>
     <callT name='Q{}group' bSlot='3'/>
     <valueOf flags='S'>
      <str val='('/>
     </valueOf>
     <applyT line='187' flags='i' bSlot='4'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
     <valueOf flags='S'>
      <str val=')'/>
     </valueOf>
     <callT line='189' name='Q{}repeat' bSlot='5' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='20' part='1' rank='2' minImp='3' slots='0' flags='s' line='36' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='37' mode='Q{}secondary' flags='t' bSlot='6'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='54' rank='3' minImp='5' slots='0' flags='s' line='244' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}allowed-parents)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;allowed-parents&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='245'>
     <elem name='br' nsuri='' namespaces='map ixsl f'>
      <empty/>
     </elem>
     <elem line='246' name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Permitted parent elements: '/>
      </valueOf>
     </elem>
     <applyT line='247' flags='i' bSlot='10'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
     <choose line='248'>
      <fn name='empty'>
       <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
      </fn>
      <valueOf flags='S'>
       <str val='None'/>
      </valueOf>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='24' part='1' rank='2' minImp='3' slots='0' flags='s' line='44' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='45'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='l'>
        <str val='Notes on the Saxon implementation'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='46' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='40' rank='3' minImp='5' slots='0' flags='s' line='75' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
    <elem role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='77' name='table' nsuri='' namespaces='map ixsl f'>
     <sequence>
      <att name='class' flags='l'>
       <str val='element-att'/>
      </att>
      <forEach line='78'>
       <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute&#39;;'/>
       <elem line='79' name='tr' nsuri='' flags='l' namespaces='map ixsl f'>
        <sequence line='80'>
         <elem name='td' nsuri='' flags='l'>
          <elem line='81' name='p' nsuri='' flags='l'>
           <elem line='82' name='code' nsuri='' flags='l' namespaces='map ixsl f'>
            <applyT line='83' bSlot='11'>
             <dot role='select' type='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)'/>
            </applyT>
           </elem>
          </elem>
         </elem>
         <elem line='87' name='td' nsuri='' flags='l'>
          <elem line='88' name='p' nsuri='' flags='l'>
           <elem line='89' name='code' nsuri='' flags='l' namespaces='map ixsl f'>
            <applyT line='90' bSlot='12'>
             <axis role='select' name='child' nodeTest='(element() except element(Q{http://www.saxonica.com/ns/doc/elements}desc))' jsTest='function a() {return item.nodeType===1;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;desc&#39;;};return a()&amp;&amp;!b();'/>
            </applyT>
           </elem>
          </elem>
         </elem>
         <elem line='94' name='td' nsuri='' flags='l'>
          <elem line='95' name='p' nsuri='' flags='l' namespaces='map ixsl f'>
           <applyT line='96' bSlot='13'>
            <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}desc)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;desc&#39;;'/>
           </applyT>
          </elem>
         </elem>
        </sequence>
       </elem>
      </forEach>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='30' rank='2' minImp='3' slots='0' flags='s' line='82' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
    <elem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='85' name='p' nsuri=''>
     <elem name='span' nsuri='' flags='l'>
      <sequence>
       <att name='class' flags='l'>
        <str val='link'/>
       </att>
       <att name='data-href' flags='l'>
        <fn name='concat'>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}type' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}subtype' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}name' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <valueOf line='86' flags='l'>
        <fn name='concat'>
         <str val='ixsl:'/>
         <attVal name='Q{}name' chk='0'/>
        </fn>
       </valueOf>
       <choose line='87'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <attVal name='Q{}subtype' chk='0'/>
         <str val='functions'/>
        </vc>
        <valueOf flags='Sl'>
         <str val='()'/>
        </valueOf>
       </choose>
      </sequence>
     </elem>
    </elem>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='53' rank='3' minImp='5' slots='0' flags='s' line='204' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}content)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;content&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='205'>
     <callT name='Q{}group' bSlot='14'/>
     <choose line='207'>
      <fn name='contains'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </cvUntyped>
       <str val=':'/>
      </fn>
      <valueOf line='208'>
       <convert from='xs:untypedAtomic' to='xs:string'>
        <attVal name='Q{}name' chk='0'/>
       </convert>
      </valueOf>
      <true/>
      <elem line='211' name='a' nsuri='' namespaces='map ixsl f'>
       <sequence>
        <att name='class' flags='l'>
         <str val='bodylink code'/>
        </att>
        <att name='href' flags='l'>
         <fn name='concat'>
          <str val='/xsl-elements/'/>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <attVal name='Q{}name' chk='0'/>
           </convert>
          </fn>
         </fn>
        </att>
        <valueOf line='212' flags='l'>
         <fn name='concat'>
          <str val='xsl:'/>
          <attVal name='Q{}name' chk='0'/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </choose>
     <callT line='216' name='Q{}repeat' bSlot='15' flags='t'/>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='-0.5' seq='16' part='1' rank='0' minImp='3' slots='0' flags='s' line='24' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
    <copy role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='26' flags='cin'>
     <applyT role='content' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec='3' prio='-0.5' seq='16' rank='0' minImp='3' slots='0' flags='s' line='24' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
    <copy role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='26' flags='cin'>
     <applyT role='content' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id='17' binds=''>
  <template name='Q{}scrollToHighlight' flags='os' line='274' module='findtext.xsl' slots='1'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='275' var='Q{}el' as='element(Q{}span)*' slot='0' eval='8'>
    <slash>
     <filter flags=''>
      <slash simple='2'>
       <slash simple='2'>
        <slash simple='2'>
         <slash simple='1'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
          <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
        </slash>
        <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       </slash>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <vc op='eq' comp='CCC'>
       <attVal name='Q{}id' chk='0'/>
       <str val='main'/>
      </vc>
     </filter>
     <first>
      <filter flags='b'>
       <axis name='descendant' nodeTest='element(Q{}span)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;span&#39;;'/>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}class' chk='0'/>
        </cast>
        <str val='highlight'/>
       </vc>
      </filter>
     </first>
    </slash>
    <choose line='279'>
     <fn name='exists'>
      <varRef name='Q{}el' slot='0'/>
     </fn>
     <ifCall line='280' name='Q{http://saxonica.com/ns/interactiveXSLT}call' type='item()?'>
      <check card='1' diag='0|0||ixsl:call'>
       <varRef name='Q{}el' slot='0'/>
      </check>
      <str val='scrollIntoView'/>
      <array size='1'>
       <true/>
      </array>
     </ifCall>
     <true/>
     <message line='283'>
      <valueOf role='select'>
       <str val='Warning: scrollToHighlight found no highlight to scroll to'/>
      </valueOf>
      <str role='terminate' val='no'/>
      <str role='error' val='Q{http://www.w3.org/2005/xqt-errors}XTMM9000'/>
     </message>
    </choose>
   </let>
  </template>
 </co>
 <co id='49' binds='21 49 49 49 49 49 49 21 49'>
  <mode name='Q{}secondary' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='5' prio='0.0' seq='38' rank='3' minImp='5' slots='0' flags='s' line='25' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-element)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;saxon-element&#39;;'/>
    <applyT role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='26' flags='t' bSlot='0'>
     <dot role='select' type='element(Q{http://www.saxonica.com/ns/doc/elements}saxon-element)'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='7' part='1' rank='1' minImp='0' slots='2' flags='s' line='68' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <choose role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='71'>
     <or op='or'>
      <gc op='=' card='N:1' comp='CCC'>
       <literal count='2'>
        <str val='file:'/>
        <str val='http:'/>
       </literal>
       <fn name='substring'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <int val='1'/>
        <int val='5'/>
       </fn>
      </gc>
      <fn name='starts-with'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='https:'/>
      </fn>
     </or>
     <elem line='72' name='a' nsuri='' namespaces='el fnd'>
      <applyT line='73' mode='Q{}secondary' bSlot='1'>
       <sequence role='select'>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
        <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
       </sequence>
      </applyT>
     </elem>
     <gc line='76' op='=' card='N:1' comp='CCC'>
      <literal count='6'>
       <str val='zip'/>
       <str val='pdf'/>
       <str val='txt'/>
       <str val='xsl'/>
       <str val='xsd'/>
       <str val='xml'/>
      </literal>
      <fn name='substring-after'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='.'/>
      </fn>
     </gc>
     <elem line='82' name='a' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='href' flags='l'>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <choose line='81'>
           <fn name='starts-with'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <str val='/'/>
           </fn>
           <fn name='substring'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <int val='2'/>
           </fn>
           <true/>
           <data>
            <axis name='attribute' nodeTest='attribute(Q{}href)' jsTest='return item.name===&#39;href&#39;'/>
           </data>
          </choose>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <applyT line='83' mode='Q{}secondary' bSlot='2'>
        <sequence role='select'>
         <axis name='attribute' nodeTest='(attribute() except attribute(Q{}href))' jsTest='function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name===&#39;href&#39;};return a()&amp;&amp;!b();'/>
         <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
        </sequence>
       </applyT>
      </sequence>
     </elem>
     <fn line='86' name='ends-with'>
      <cvUntyped to='xs:string'>
       <attVal name='Q{}href' chk='0'/>
      </cvUntyped>
      <str val='..'/>
     </fn>
     <let line='87' var='Q{}levels' as='xs:integer' slot='0' eval='8'>
      <fn name='count'>
       <fn name='tokenize'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <str val='/'/>
        <str val=''/>
       </fn>
      </fn>
      <elem line='88' name='span' nsuri='' namespaces='el fnd'>
       <sequence>
        <att name='class' flags='l'>
         <fn name='concat'>
          <str val='link '/>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <attVal name='Q{}class' chk='0'/>
           </convert>
          </fn>
         </fn>
        </att>
        <att name='data-href' flags='l'>
         <fn name='concat'>
          <fn name='string-join'>
           <for var='Q{}l' as='xs:integer' slot='1'>
            <to role='in'>
             <int val='1'/>
             <arith op='+' calc='i+i'>
              <varRef name='Q{}levels' slot='0'/>
              <int val='1'/>
             </arith>
            </to>
            <str role='return' val='../'/>
           </for>
           <str val=''/>
          </fn>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash simple='1'>
              <subscript>
               <slash simple='1'>
                <dot type='element()'/>
                <axis name='ancestor' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
               </slash>
               <arith op='+' calc='i+i'>
                <varRef name='Q{}levels' slot='0'/>
                <int val='1'/>
               </arith>
              </subscript>
              <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
             </slash>
            </data>
           </convert>
          </fn>
         </fn>
        </att>
        <applyT line='89' mode='Q{}secondary' bSlot='3'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
        </applyT>
       </sequence>
      </elem>
     </let>
     <true/>
     <elem line='93' name='span' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='class' flags='l'>
        <fn name='concat'>
         <str val='link '/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}class' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <att name='data-href' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </convert>
       </att>
       <applyT line='94' mode='Q{}secondary' bSlot='4'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
       </applyT>
      </sequence>
     </elem>
    </choose>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='4' rank='1' minImp='0' slots='0' flags='s' line='32' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}dfn)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;dfn&#39;;'/>
    <applyT role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='33' mode='Q{}secondary' flags='ti' bSlot='5'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='2' part='1' rank='1' minImp='0' slots='0' flags='s' line='25' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='7' rank='1' minImp='0' slots='2' flags='s' line='68' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <choose role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='71'>
     <or op='or'>
      <gc op='=' card='N:1' comp='CCC'>
       <literal count='2'>
        <str val='file:'/>
        <str val='http:'/>
       </literal>
       <fn name='substring'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <int val='1'/>
        <int val='5'/>
       </fn>
      </gc>
      <fn name='starts-with'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='https:'/>
      </fn>
     </or>
     <elem line='72' name='a' nsuri='' namespaces='el fnd'>
      <applyT line='73' mode='Q{}secondary' bSlot='1'>
       <sequence role='select'>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
        <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
       </sequence>
      </applyT>
     </elem>
     <gc line='76' op='=' card='N:1' comp='CCC'>
      <literal count='6'>
       <str val='zip'/>
       <str val='pdf'/>
       <str val='txt'/>
       <str val='xsl'/>
       <str val='xsd'/>
       <str val='xml'/>
      </literal>
      <fn name='substring-after'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='.'/>
      </fn>
     </gc>
     <elem line='82' name='a' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='href' flags='l'>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <choose line='81'>
           <fn name='starts-with'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <str val='/'/>
           </fn>
           <fn name='substring'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <int val='2'/>
           </fn>
           <true/>
           <data>
            <axis name='attribute' nodeTest='attribute(Q{}href)' jsTest='return item.name===&#39;href&#39;'/>
           </data>
          </choose>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <applyT line='83' mode='Q{}secondary' bSlot='2'>
        <sequence role='select'>
         <axis name='attribute' nodeTest='(attribute() except attribute(Q{}href))' jsTest='function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name===&#39;href&#39;};return a()&amp;&amp;!b();'/>
         <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
        </sequence>
       </applyT>
      </sequence>
     </elem>
     <fn line='86' name='ends-with'>
      <cvUntyped to='xs:string'>
       <attVal name='Q{}href' chk='0'/>
      </cvUntyped>
      <str val='..'/>
     </fn>
     <let line='87' var='Q{}levels' as='xs:integer' slot='0' eval='8'>
      <fn name='count'>
       <fn name='tokenize'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <str val='/'/>
        <str val=''/>
       </fn>
      </fn>
      <elem line='88' name='span' nsuri='' namespaces='el fnd'>
       <sequence>
        <att name='class' flags='l'>
         <fn name='concat'>
          <str val='link '/>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <attVal name='Q{}class' chk='0'/>
           </convert>
          </fn>
         </fn>
        </att>
        <att name='data-href' flags='l'>
         <fn name='concat'>
          <fn name='string-join'>
           <for var='Q{}l' as='xs:integer' slot='1'>
            <to role='in'>
             <int val='1'/>
             <arith op='+' calc='i+i'>
              <varRef name='Q{}levels' slot='0'/>
              <int val='1'/>
             </arith>
            </to>
            <str role='return' val='../'/>
           </for>
           <str val=''/>
          </fn>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash simple='1'>
              <subscript>
               <slash simple='1'>
                <dot type='element()'/>
                <axis name='ancestor' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
               </slash>
               <arith op='+' calc='i+i'>
                <varRef name='Q{}levels' slot='0'/>
                <int val='1'/>
               </arith>
              </subscript>
              <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
             </slash>
            </data>
           </convert>
          </fn>
         </fn>
        </att>
        <applyT line='89' mode='Q{}secondary' bSlot='3'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
        </applyT>
       </sequence>
      </elem>
     </let>
     <true/>
     <elem line='93' name='span' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='class' flags='l'>
        <fn name='concat'>
         <str val='link '/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}class' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <att name='data-href' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </convert>
       </att>
       <applyT line='94' mode='Q{}secondary' bSlot='4'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
       </applyT>
      </sequence>
     </elem>
    </choose>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='2' rank='1' minImp='0' slots='0' flags='s' line='25' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <empty role='action'/>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='7' part='2' rank='1' minImp='0' slots='2' flags='s' line='68' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <choose role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='71'>
     <or op='or'>
      <gc op='=' card='N:1' comp='CCC'>
       <literal count='2'>
        <str val='file:'/>
        <str val='http:'/>
       </literal>
       <fn name='substring'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <int val='1'/>
        <int val='5'/>
       </fn>
      </gc>
      <fn name='starts-with'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='https:'/>
      </fn>
     </or>
     <elem line='72' name='a' nsuri='' namespaces='el fnd'>
      <applyT line='73' mode='Q{}secondary' bSlot='1'>
       <sequence role='select'>
        <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
        <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
       </sequence>
      </applyT>
     </elem>
     <gc line='76' op='=' card='N:1' comp='CCC'>
      <literal count='6'>
       <str val='zip'/>
       <str val='pdf'/>
       <str val='txt'/>
       <str val='xsl'/>
       <str val='xsd'/>
       <str val='xml'/>
      </literal>
      <fn name='substring-after'>
       <cvUntyped to='xs:string'>
        <attVal name='Q{}href' chk='0'/>
       </cvUntyped>
       <str val='.'/>
      </fn>
     </gc>
     <elem line='82' name='a' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='href' flags='l'>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <choose line='81'>
           <fn name='starts-with'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <str val='/'/>
           </fn>
           <fn name='substring'>
            <cvUntyped to='xs:string'>
             <attVal name='Q{}href' chk='0'/>
            </cvUntyped>
            <int val='2'/>
           </fn>
           <true/>
           <data>
            <axis name='attribute' nodeTest='attribute(Q{}href)' jsTest='return item.name===&#39;href&#39;'/>
           </data>
          </choose>
         </convert>
         <str val=' '/>
        </fn>
       </att>
       <applyT line='83' mode='Q{}secondary' bSlot='2'>
        <sequence role='select'>
         <axis name='attribute' nodeTest='(attribute() except attribute(Q{}href))' jsTest='function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name===&#39;href&#39;};return a()&amp;&amp;!b();'/>
         <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
        </sequence>
       </applyT>
      </sequence>
     </elem>
     <fn line='86' name='ends-with'>
      <cvUntyped to='xs:string'>
       <attVal name='Q{}href' chk='0'/>
      </cvUntyped>
      <str val='..'/>
     </fn>
     <let line='87' var='Q{}levels' as='xs:integer' slot='0' eval='8'>
      <fn name='count'>
       <fn name='tokenize'>
        <cvUntyped to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </cvUntyped>
        <str val='/'/>
        <str val=''/>
       </fn>
      </fn>
      <elem line='88' name='span' nsuri='' namespaces='el fnd'>
       <sequence>
        <att name='class' flags='l'>
         <fn name='concat'>
          <str val='link '/>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <attVal name='Q{}class' chk='0'/>
           </convert>
          </fn>
         </fn>
        </att>
        <att name='data-href' flags='l'>
         <fn name='concat'>
          <fn name='string-join'>
           <for var='Q{}l' as='xs:integer' slot='1'>
            <to role='in'>
             <int val='1'/>
             <arith op='+' calc='i+i'>
              <varRef name='Q{}levels' slot='0'/>
              <int val='1'/>
             </arith>
            </to>
            <str role='return' val='../'/>
           </for>
           <str val=''/>
          </fn>
          <fn name='string'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash simple='1'>
              <subscript>
               <slash simple='1'>
                <dot type='element()'/>
                <axis name='ancestor' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
               </slash>
               <arith op='+' calc='i+i'>
                <varRef name='Q{}levels' slot='0'/>
                <int val='1'/>
               </arith>
              </subscript>
              <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
             </slash>
            </data>
           </convert>
          </fn>
         </fn>
        </att>
        <applyT line='89' mode='Q{}secondary' bSlot='3'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
        </applyT>
       </sequence>
      </elem>
     </let>
     <true/>
     <elem line='93' name='span' nsuri='' namespaces='el fnd'>
      <sequence>
       <att name='class' flags='l'>
        <fn name='concat'>
         <str val='link '/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}class' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <att name='data-href' flags='l'>
        <convert from='xs:untypedAtomic' to='xs:string'>
         <attVal name='Q{}href' chk='0'/>
        </convert>
       </att>
       <applyT line='94' mode='Q{}secondary' bSlot='4'>
        <axis role='select' name='child' nodeTest='node()' jsTest='return SaxonJS.U.isNode(item);'/>
       </applyT>
      </sequence>
     </elem>
    </choose>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='5' rank='2' minImp='0' slots='1' flags='s' line='36' module='body.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}nav)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;nav&#39;;'/>
     <axis ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='36' name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
    </p.withPredicate>
    <let role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='37' var='Q{}except' as='xs:string*' slot='0' eval='4'>
     <fn name='tokenize'>
      <cvUntyped to='xs:string'>
       <attVal name='Q{}except' chk='0'/>
      </cvUntyped>
      <str val=' '/>
      <str val=''/>
     </fn>
     <elem line='38' name='ul' nsuri='' namespaces='el fnd'>
      <forEach line='39'>
       <filter flags='b'>
        <slash simple='2'>
         <axis name='parent' nodeTest='(element()|document-node())' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);'/>
         <axis name='child' nodeTest='(element(Q{}article) | element(Q{}section))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};return a()||b();'/>
        </slash>
        <fn name='not'>
         <gc op='=' card='N:1' comp='CCC'>
          <varRef name='Q{}except' slot='0'/>
          <attVal name='Q{}id' chk='0'/>
         </gc>
        </fn>
       </filter>
       <elem line='40' name='li' nsuri='' flags='l' namespaces='el fnd'>
        <elem line='41' name='p' nsuri='' flags='l'>
         <sequence line='42'>
          <elem name='span' nsuri='' flags='l'>
           <sequence>
            <att name='class' flags='l'>
             <str val='link'/>
            </att>
            <att name='data-href' flags='l'>
             <convert from='xs:untypedAtomic' to='xs:string'>
              <attVal name='Q{}id' chk='0'/>
             </convert>
            </att>
            <valueOf line='43' flags='l'>
             <convert from='xs:untypedAtomic' to='xs:string'>
              <attVal name='Q{}title' chk='0'/>
             </convert>
            </valueOf>
           </sequence>
          </elem>
          <choose line='45'>
           <fn name='exists'>
            <axis name='attribute' nodeTest='attribute(Q{}summary)' jsTest='return item.name===&#39;summary&#39;'/>
           </fn>
           <valueOf line='46' flags='l'>
            <fn name='string-join'>
             <convert from='xs:anyAtomicType' to='xs:string'>
              <sequence>
               <str val=':'/>
               <attVal name='Q{}summary' chk='0'/>
              </sequence>
             </convert>
             <str val=' '/>
            </fn>
           </valueOf>
          </choose>
         </sequence>
        </elem>
       </elem>
      </forEach>
     </elem>
    </let>
   </templateRule>
   <templateRule prec='0' prio='0.5' seq='6' rank='2' minImp='0' slots='0' flags='s' line='54' module='body.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}img)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;img&#39;;'/>
     <axis ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='54' name='attribute' nodeTest='attribute(Q{}src)' jsTest='return item.name===&#39;src&#39;'/>
    </p.withPredicate>
    <elem role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='56' name='img' nsuri='' namespaces='el fnd'>
     <sequence>
      <att name='src' flags='l'>
       <fn name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <choose line='55'>
          <fn name='starts-with'>
           <cvUntyped to='xs:string'>
            <attVal name='Q{}src' chk='0'/>
           </cvUntyped>
           <str val='/'/>
          </fn>
          <fn name='substring'>
           <cvUntyped to='xs:string'>
            <attVal name='Q{}src' chk='0'/>
           </cvUntyped>
           <int val='2'/>
          </fn>
          <true/>
          <data>
           <dot type='element(Q{}img)'/>
          </data>
         </choose>
        </convert>
        <str val=' '/>
       </fn>
      </att>
      <applyT line='57' mode='Q{}secondary' bSlot='6'>
       <axis role='select' name='attribute' nodeTest='(attribute() except attribute(Q{}src))' jsTest='function a() {return SaxonJS.U.isAttr(item)};function b() {return item.name===&#39;src&#39;};return a()&amp;&amp;!b();'/>
      </applyT>
      <applyT line='58' flags='i' bSlot='7'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </sequence>
    </elem>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='1' part='1' rank='0' minImp='0' slots='0' flags='s' line='19' module='body.xsl'>
    <p.nodeTest role='match' test='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
    <copy role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='21' flags='cin'>
     <applyT role='content' mode='Q{}secondary' bSlot='8'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec='0' prio='-0.5' seq='1' rank='0' minImp='0' slots='0' flags='s' line='19' module='body.xsl'>
    <p.nodeTest role='match' test='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
    <copy role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='21' flags='cin'>
     <applyT role='content' mode='Q{}secondary' bSlot='8'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id='43' binds='40 30 30 43 43 43 43 43 43 49 43'>
  <mode name='Q{}f' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='3' prio='-0.25' seq='19' part='1' rank='1' minImp='3' slots='0' flags='s' line='30' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='Q{http://www.saxonica.com/ns/doc/functions}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;'/>
    <compElem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='31'>
     <fn role='name' name='local-name'>
      <dot type='element()'/>
     </fn>
     <applyT role='content' line='32' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </compElem>
   </templateRule>
   <templateRule prec='3' prio='-0.25' seq='19' rank='1' minImp='3' slots='0' flags='s' line='30' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='Q{http://www.saxonica.com/ns/doc/elements}*' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;'/>
    <compElem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='31'>
     <fn role='name' name='local-name'>
      <dot type='element()'/>
     </fn>
     <applyT role='content' line='32' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </compElem>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='23' rank='2' minImp='3' slots='0' flags='s' line='40' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='41' flags='cti' bSlot='-1'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='4' prio='0.0' seq='32' rank='3' minImp='4' slots='7' flags='s' line='29' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
    <let role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='31' var='Q{}namespace' as='attribute(Q{}id)*' slot='0' eval='4'>
     <slash simple='2'>
      <fn name='reverse'>
       <slash simple='1'>
        <dot type='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
        <axis name='ancestor' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
       </slash>
      </fn>
      <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
     </slash>
     <let line='34' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:untypedAtomic*' slot='1' eval='4'>
      <data>
       <varRef name='Q{}namespace' slot='0'/>
      </data>
      <let line='32' var='Q{}implement' as='document-node()' slot='2' eval='8'>
       <fn name='doc'>
        <gVarRef name='Q{}implement-doc' bSlot='0'/>
       </fn>
       <sequence line='36'>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
         <str val='document.title'/>
         <fn name='concat'>
          <str val='Saxon-JS '/>
          <ufCall name='Q{urn:viewerapp.function}fn-name' tailCall='false' bSlot='1' eval='16'>
           <dot type='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
          </ufCall>
         </fn>
         <check card='1' diag='0|2||ixsl:set-property'>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
         </check>
        </ifCall>
        <elem line='38' name='h1' nsuri='' namespaces='f'>
         <valueOf line='39' flags='l'>
          <ufCall name='Q{urn:viewerapp.function}fn-name' tailCall='false' bSlot='2' eval='16'>
           <dot type='element(Q{http://www.saxonica.com/ns/doc/functions}function)'/>
          </ufCall>
         </valueOf>
        </elem>
        <applyT line='42' mode='Q{}f' bSlot='3'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
        </applyT>
        <elem line='44' name='aside' nsuri='' namespaces='f'>
         <valueOf line='45' flags='l'>
          <fn name='string-join'>
           <let ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' var='Q{}implement' as='document-node()' slot='3' eval='6'>
            <varRef ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' name='Q{}implement' slot='2'/>
            <let module='app-functions.xsl' line='49' var='Q{http://saxon.sf.net/generated-variable}v0' as='element(Q{}saxon)*' slot='4' eval='4'>
             <slash simple='2'>
              <slash simple='1'>
               <varRef name='Q{}implement' slot='3'/>
               <axis name='child' nodeTest='element(Q{}implement)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;implement&#39;;'/>
              </slash>
              <axis name='child' nodeTest='element(Q{}saxon)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;saxon&#39;;'/>
             </slash>
             <cvUntyped line='48' to='xs:string' diag='5|0|XTTE0780|f:edition#2'>
              <data>
               <forEach>
                <for line='47' var='Q{}t' as='xs:string' slot='5'>
                 <fn role='in' module='functions-body.xsl' line='45' name='tokenize'>
                  <treat ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||f:edition'>
                   <check card='1' diag='0|0||f:edition'>
                    <cvUntyped to='xs:string'>
                     <data>
                      <first>
                       <sequence>
                        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}saxon-edition)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;saxon-edition&#39;;'/>
                        <slash line='34' simple='2'>
                         <filter flags='b'>
                          <slash simple='2'>
                           <slash simple='1'>
                            <varRef name='Q{}implement' slot='2'/>
                            <axis name='child' nodeTest='element(Q{}implement)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;implement&#39;;'/>
                           </slash>
                           <axis name='child' nodeTest='element(Q{}default)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;default&#39;;'/>
                          </slash>
                          <gc op='=' card='N:1' comp='CCC'>
                           <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
                           <attVal name='Q{}id' chk='0'/>
                          </gc>
                         </filter>
                         <axis name='attribute' nodeTest='attribute(Q{}saxon)' jsTest='return item.name===&#39;saxon&#39;'/>
                        </slash>
                        <str val='default'/>
                       </sequence>
                      </first>
                     </data>
                    </cvUntyped>
                   </check>
                  </treat>
                  <str val='\s+'/>
                  <str val=''/>
                 </fn>
                 <fn role='return' name='upper-case'>
                  <varRef name='Q{}t' slot='5'/>
                 </fn>
                </for>
                <valueOf line='49'>
                 <fn name='string-join'>
                  <convert from='xs:anyAtomicType' to='xs:string'>
                   <let var='Q{http://saxon.sf.net/generated-variable}current-1197342495' as='xs:string' slot='6' eval='16'>
                    <dot type='xs:string'/>
                    <data>
                     <filter flags='b'>
                      <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='4'/>
                      <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                       <cast as='xs:string' emptiable='1'>
                        <attVal name='Q{}version' chk='0'/>
                       </cast>
                       <varRef name='Q{http://saxon.sf.net/generated-variable}current-1197342495' slot='6'/>
                      </vc>
                     </filter>
                    </data>
                   </let>
                  </convert>
                  <str val=' '/>
                 </fn>
                </valueOf>
               </forEach>
              </data>
             </cvUntyped>
            </let>
           </let>
           <str val=' '/>
          </fn>
         </valueOf>
        </elem>
        <applyT line='48' mode='Q{}f' bSlot='4'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}signatures)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;signatures&#39;;'/>
        </applyT>
        <elem line='50' name='h3' nsuri='' namespaces='f'>
         <sequence>
          <att name='class' flags='l'>
           <str val='subtitle'/>
          </att>
          <valueOf flags='Sl'>
           <str val='Namespace'/>
          </valueOf>
         </sequence>
        </elem>
        <elem line='51' name='p' nsuri='' namespaces='f'>
         <valueOf line='52' flags='l'>
          <fn name='string-join'>
           <convert from='xs:untypedAtomic' to='xs:string'>
            <data>
             <slash simple='2'>
              <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
              <axis name='attribute' nodeTest='attribute(Q{}namespace)' jsTest='return item.name===&#39;namespace&#39;'/>
             </slash>
            </data>
           </convert>
           <str val=' '/>
          </fn>
         </valueOf>
        </elem>
        <applyT line='55' mode='Q{}f' bSlot='5'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
        </applyT>
        <applyT line='56' mode='Q{}f' bSlot='6'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
        </applyT>
        <applyT line='57' mode='Q{}f' bSlot='7'>
         <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
        </applyT>
        <choose line='59'>
         <fn name='exists'>
          <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
         </fn>
         <sequence line='60'>
          <elem name='h3' nsuri='' namespaces='f'>
           <sequence>
            <att name='class' flags='l'>
             <str val='subtitle'/>
            </att>
            <valueOf flags='l'>
             <str val='See also:'/>
            </valueOf>
           </sequence>
          </elem>
          <applyT line='61' mode='Q{}f' flags='t' bSlot='8'>
           <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
          </applyT>
         </sequence>
        </choose>
       </sequence>
      </let>
     </let>
    </let>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='27' part='1' rank='2' minImp='3' slots='0' flags='s' line='49' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='50'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Details'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='51' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='21' rank='2' minImp='3' slots='0' flags='s' line='36' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='37' mode='Q{}secondary' flags='t' bSlot='9'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='25' rank='2' minImp='3' slots='0' flags='s' line='44' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='45'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='l'>
        <str val='Notes on the Saxon implementation'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='46' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='4' prio='0.0' seq='33' rank='3' minImp='4' slots='1' flags='s' line='69' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}signatures)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;signatures&#39;;'/>
    <forEach role='action' defaultElementNS='http://www.saxonica.com/ns/doc/functions' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='71'>
     <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}proto)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;proto&#39;;'/>
     <sequence line='74'>
      <elem name='p' nsuri='' namespaces='f'>
       <sequence>
        <att name='class' flags='l'>
         <str val='fn-sig'/>
        </att>
        <valueOf line='77' flags='l'>
         <fn name='concat'>
          <atomSing card='?' diag='0|0||fn:concat'>
           <slash simple='2'>
            <docOrder intra='1'>
             <slash simple='2'>
              <axis name='parent' nodeTest='(element()|document-node())' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);'/>
              <axis name='parent' nodeTest='(element()|document-node())' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);'/>
             </slash>
            </docOrder>
            <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
           </slash>
          </atomSing>
          <str val='('/>
          <fn name='string-join'>
           <for var='Q{}arg' as='element(Q{http://www.saxonica.com/ns/doc/functions}arg)' slot='0'>
            <axis role='in' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}arg)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;arg&#39;;'/>
            <fn role='return' name='concat'>
             <str val='$'/>
             <data>
              <slash simple='1'>
               <varRef name='Q{}arg' slot='0'/>
               <axis name='attribute' nodeTest='attribute(Q{}name)' jsTest='return item.name===&#39;name&#39;'/>
              </slash>
             </data>
             <str val=' as '/>
             <data>
              <slash simple='1'>
               <varRef name='Q{}arg' slot='0'/>
               <axis name='attribute' nodeTest='attribute(Q{}type)' jsTest='return item.name===&#39;type&#39;'/>
              </slash>
             </data>
            </fn>
           </for>
           <str val=', '/>
          </fn>
          <str val=')'/>
          <str val=' ➔  '/>
          <attVal name='Q{}return-type' chk='0'/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
      <applyT line='81' mode='Q{}f' bSlot='10'>
       <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
      </applyT>
      <elem line='82' name='table' nsuri='' namespaces='f'>
       <sequence>
        <att name='class' flags='l'>
         <str val='fn-prototype'/>
        </att>
        <att name='style' flags='l'>
         <str val='margin-bottom:10px;'/>
        </att>
        <elem line='83' name='tr' nsuri='' flags='l'>
         <elem line='84' name='td' nsuri='' flags='l'>
          <sequence>
           <att name='width' flags='l'>
            <str val='470'/>
           </att>
           <att name='align' flags='l'>
            <str val='left'/>
           </att>
           <att name='colspan' flags='l'>
            <str val='4'/>
           </att>
           <att name='style' flags='l'>
            <str val='border-top:solid 1px;'/>
           </att>
           <elem line='85' name='p' nsuri='' flags='l'>
            <elem line='86' name='i' nsuri='' flags='l'>
             <valueOf line='87' flags='l'>
              <choose>
               <fn name='exists'>
                <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}arg)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;arg&#39;;'/>
               </fn>
               <str val='Arguments'/>
               <true/>
               <str val='There are no arguments'/>
              </choose>
             </valueOf>
            </elem>
           </elem>
          </sequence>
         </elem>
        </elem>
        <forEach line='92'>
         <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}arg)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;arg&#39;;'/>
         <elem line='93' name='tr' nsuri='' flags='l' namespaces='f'>
          <sequence line='94'>
           <elem name='td' nsuri='' flags='l'>
            <sequence>
             <att name='width' flags='l'>
              <str val='40'/>
             </att>
             <elem line='95' name='p' nsuri='' flags='l'>
              <valueOf flags='l'>
               <str val=' '/>
              </valueOf>
             </elem>
            </sequence>
           </elem>
           <elem line='97' name='td' nsuri='' flags='l'>
            <sequence>
             <att name='width' flags='l'>
              <str val='80'/>
             </att>
             <att name='valign' flags='l'>
              <str val='top'/>
             </att>
             <elem line='98' name='p' nsuri='' flags='l'>
              <sequence>
               <valueOf flags='Sl'>
                <str val='$'/>
               </valueOf>
               <valueOf flags='l'>
                <convert from='xs:untypedAtomic' to='xs:string'>
                 <attVal name='Q{}name' chk='0'/>
                </convert>
               </valueOf>
              </sequence>
             </elem>
            </sequence>
           </elem>
           <elem line='100' name='td' nsuri='' flags='l'>
            <sequence>
             <att name='valign' flags='l'>
              <str val='top'/>
             </att>
             <att name='width' flags='l'>
              <str val='150'/>
             </att>
             <elem line='101' name='p' nsuri='' flags='l'>
              <valueOf line='102' flags='l'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <attVal name='Q{}type' chk='0'/>
               </convert>
              </valueOf>
             </elem>
            </sequence>
           </elem>
           <elem line='105' name='td' nsuri='' flags='l'>
            <sequence>
             <att name='valign' flags='l'>
              <str val='top'/>
             </att>
             <att name='width' flags='l'>
              <str val='200'/>
             </att>
             <elem line='106' name='p' nsuri='' flags='l'>
              <valueOf line='107' flags='l'>
               <convert from='xs:untypedAtomic' to='xs:string'>
                <attVal name='Q{}desc' chk='0'/>
               </convert>
              </valueOf>
             </elem>
            </sequence>
           </elem>
          </sequence>
         </elem>
        </forEach>
        <elem line='112' name='tr' nsuri='' flags='l'>
         <sequence line='113'>
          <elem name='td' nsuri='' flags='l'>
           <sequence>
            <att name='colspan' flags='l'>
             <str val='2'/>
            </att>
            <att name='style' flags='l'>
             <str val='border-top:solid 1px; border-bottom:solid 1px;'/>
            </att>
            <elem line='114' name='p' nsuri='' flags='l'>
             <elem line='115' name='i' nsuri='' flags='l'>
              <valueOf flags='Sl'>
               <str val='Result'/>
              </valueOf>
             </elem>
            </elem>
           </sequence>
          </elem>
          <elem line='119' name='td' nsuri='' flags='l'>
           <sequence>
            <att name='style' flags='l'>
             <str val='border-top:solid 1px #3D5B96; border-bottom:solid 1px;'/>
            </att>
            <att name='colspan' flags='l'>
             <str val='2'/>
            </att>
            <elem line='120' name='p' nsuri='' flags='l'>
             <valueOf line='121' flags='l'>
              <convert from='xs:untypedAtomic' to='xs:string'>
               <data>
                <slash line='72' simple='1'>
                 <dot type='element(Q{http://www.saxonica.com/ns/doc/functions}proto)'/>
                 <axis line='121' name='attribute' nodeTest='attribute(Q{}return-type)' jsTest='return item.name===&#39;return-type&#39;'/>
                </slash>
               </data>
              </convert>
             </valueOf>
            </elem>
           </sequence>
          </elem>
         </sequence>
        </elem>
       </sequence>
      </elem>
     </sequence>
    </forEach>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='29' part='1' rank='2' minImp='3' slots='1' flags='s' line='54' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='55'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Examples'/>
       </valueOf>
      </sequence>
     </elem>
     <choose line='58'>
      <fn name='exists'>
       <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
      </fn>
      <choose line='60'>
       <compareToInt op='eq' val='1'>
        <fn name='count'>
         <fn name='subsequence'>
          <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
          <int val='1'/>
          <int val='2'/>
         </fn>
        </fn>
       </compareToInt>
       <applyT line='61' flags='ct' bSlot='-1'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
       </applyT>
       <true/>
       <iterate line='64'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
        <params role='params' line='65'>
         <param name='Q{}i' slot='0' as='xs:integer'>
          <int role='select' val='1'/>
          <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|i'>
           <check card='1' diag='8|0|XTTE0590|i'>
            <cvUntyped to='xs:integer' diag='8|0|XTTE0590|i'>
             <data>
              <supplied slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </param>
        </params>
        <sequence role='action' line='67'>
         <elem name='h4' nsuri=''>
          <sequence>
           <valueOf flags='l'>
            <str val='Example '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}i' slot='0'/>
            </convert>
           </valueOf>
          </sequence>
         </elem>
         <applyT line='68' flags='ci' bSlot='-1'>
          <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
         </applyT>
         <nextIteration line='70'>
          <withParam name='Q{}i' as='xs:integer' slot='0'>
           <arith line='66' op='+' calc='i+i'>
            <varRef name='Q{}i' slot='0'/>
            <int val='1'/>
           </arith>
          </withParam>
         </nextIteration>
        </sequence>
       </iterate>
      </choose>
      <true/>
      <applyT line='77' flags='cti' bSlot='-1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='27' rank='2' minImp='3' slots='0' flags='s' line='49' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}details)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;details&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='50'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Details'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='51' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='31' part='1' rank='2' minImp='3' slots='0' flags='s' line='82' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
    <elem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='85' name='p' nsuri=''>
     <elem name='span' nsuri='' flags='l'>
      <sequence>
       <att name='class' flags='l'>
        <str val='link'/>
       </att>
       <att name='data-href' flags='l'>
        <fn name='concat'>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}type' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}subtype' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}name' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <valueOf line='86' flags='l'>
        <fn name='concat'>
         <str val='ixsl:'/>
         <attVal name='Q{}name' chk='0'/>
        </fn>
       </valueOf>
       <choose line='87'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <attVal name='Q{}subtype' chk='0'/>
         <str val='functions'/>
        </vc>
        <valueOf flags='Sl'>
         <str val='()'/>
        </valueOf>
       </choose>
      </sequence>
     </elem>
    </elem>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='23' part='1' rank='2' minImp='3' slots='0' flags='s' line='40' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='41' flags='cti' bSlot='-1'>
     <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
    </applyT>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='29' rank='2' minImp='3' slots='1' flags='s' line='54' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}examples)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;examples&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='55'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='Sl'>
        <str val='Examples'/>
       </valueOf>
      </sequence>
     </elem>
     <choose line='58'>
      <fn name='exists'>
       <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
      </fn>
      <choose line='60'>
       <compareToInt op='eq' val='1'>
        <fn name='count'>
         <fn name='subsequence'>
          <axis name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
          <int val='1'/>
          <int val='2'/>
         </fn>
        </fn>
       </compareToInt>
       <applyT line='61' flags='ct' bSlot='-1'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
       </applyT>
       <true/>
       <iterate line='64'>
        <axis role='select' name='child' nodeTest='*:example' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.local===&#39;example&#39;'/>
        <params role='params' line='65'>
         <param name='Q{}i' slot='0' as='xs:integer'>
          <int role='select' val='1'/>
          <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|i'>
           <check card='1' diag='8|0|XTTE0590|i'>
            <cvUntyped to='xs:integer' diag='8|0|XTTE0590|i'>
             <data>
              <supplied slot='0'/>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </param>
        </params>
        <sequence role='action' line='67'>
         <elem name='h4' nsuri=''>
          <sequence>
           <valueOf flags='l'>
            <str val='Example '/>
           </valueOf>
           <valueOf flags='l'>
            <convert from='xs:integer' to='xs:string'>
             <varRef name='Q{}i' slot='0'/>
            </convert>
           </valueOf>
          </sequence>
         </elem>
         <applyT line='68' flags='ci' bSlot='-1'>
          <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
         </applyT>
         <nextIteration line='70'>
          <withParam name='Q{}i' as='xs:integer' slot='0'>
           <arith line='66' op='+' calc='i+i'>
            <varRef name='Q{}i' slot='0'/>
            <int val='1'/>
           </arith>
          </withParam>
         </nextIteration>
        </sequence>
       </iterate>
      </choose>
      <true/>
      <applyT line='77' flags='cti' bSlot='-1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='21' part='1' rank='2' minImp='3' slots='0' flags='s' line='36' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}a)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;a&#39;;'/>
    <applyT role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='37' mode='Q{}secondary' flags='t' bSlot='9'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='25' part='1' rank='2' minImp='3' slots='0' flags='s' line='44' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}status)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;status&#39;;'/>
    <sequence role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='45'>
     <elem name='h3' nsuri=''>
      <sequence>
       <att name='class' flags='l'>
        <str val='subtitle'/>
       </att>
       <valueOf flags='l'>
        <str val='Notes on the Saxon implementation'/>
       </valueOf>
      </sequence>
     </elem>
     <applyT line='46' flags='cti' bSlot='-1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='3' prio='0.0' seq='31' rank='2' minImp='3' slots='0' flags='s' line='82' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}see-also)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;see-also&#39;;'/>
    <elem role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='85' name='p' nsuri=''>
     <elem name='span' nsuri='' flags='l'>
      <sequence>
       <att name='class' flags='l'>
        <str val='link'/>
       </att>
       <att name='data-href' flags='l'>
        <fn name='concat'>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}type' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}subtype' chk='0'/>
          </convert>
         </fn>
         <str val='/'/>
         <fn name='string'>
          <convert from='xs:untypedAtomic' to='xs:string'>
           <attVal name='Q{}name' chk='0'/>
          </convert>
         </fn>
        </fn>
       </att>
       <valueOf line='86' flags='l'>
        <fn name='concat'>
         <str val='ixsl:'/>
         <attVal name='Q{}name' chk='0'/>
        </fn>
       </valueOf>
       <choose line='87'>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <attVal name='Q{}subtype' chk='0'/>
         <str val='functions'/>
        </vc>
        <valueOf flags='Sl'>
         <str val='()'/>
        </valueOf>
       </choose>
      </sequence>
     </elem>
    </elem>
   </templateRule>
   <templateRule prec='3' prio='-0.5' seq='17' part='1' rank='0' minImp='3' slots='0' flags='s' line='24' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
    <copy role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='26' flags='cin'>
     <applyT role='content' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec='3' prio='-0.5' seq='17' rank='0' minImp='3' slots='0' flags='s' line='24' module='el-fnd-body.xsl'>
    <p.nodeTest role='match' test='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
    <copy role='action' ns='xsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='26' flags='cin'>
     <applyT role='content' flags='c' bSlot='-1'>
      <sequence role='select'>
       <axis name='attribute' nodeTest='attribute()' jsTest='return SaxonJS.U.isAttr(item)'/>
       <axis name='child' nodeTest='( element() | text() | comment() | processing-instruction() )' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);'/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id='10' binds='30'>
  <template name='Q{}foundPaths' flags='os' line='181' module='findtext.xsl' slots='3'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='182'>
    <param name='Q{}newPath' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='183' name='Q{}section' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <let line='185' var='Q{}start' as='xs:string?' slot='2' eval='7'>
     <first>
      <fn line='184' name='tokenize'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:tokenize'>
        <check card='?' diag='0|0||fn:tokenize'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}newPath' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val='/'/>
       <str val=''/>
      </fn>
     </first>
     <forEach line='187'>
      <filter flags='b'>
       <slash simple='2'>
        <filter flags=''>
         <slash simple='2'>
          <filter flags='b'>
           <slash simple='2'>
            <slash simple='2'>
             <slash simple='1'>
              <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
              <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
             </slash>
             <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
            </slash>
            <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
           </slash>
           <vc op='eq' onEmpty='0' comp='CCC'>
            <cast as='xs:string' emptiable='1'>
             <attVal name='Q{}id' chk='0'/>
            </cast>
            <str val='wrap'/>
           </vc>
          </filter>
          <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
         </slash>
         <vc op='eq' comp='CCC'>
          <attVal name='Q{}id' chk='0'/>
          <str val='foundPaths'/>
         </vc>
        </filter>
        <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       </slash>
       <vc op='eq' onEmpty='0' comp='CCC'>
        <cast as='xs:string' emptiable='1'>
         <attVal name='Q{}id' chk='0'/>
        </cast>
        <varRef name='Q{}start' slot='2'/>
       </vc>
      </filter>
      <resultDoc line='188' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}append-content&#xA;'>
       <str role='href' val='?.'/>
       <elem role='content' line='189' name='p' nsuri='' namespaces='svg js cat f'>
        <sequence>
         <att name='path' flags='l'>
          <fn name='string-join'>
           <convert from='xs:anyAtomicType' to='xs:string'>
            <data>
             <mergeAdj>
              <varRef name='Q{}newPath' slot='0'/>
             </mergeAdj>
            </data>
           </convert>
           <str val=' '/>
          </fn>
         </att>
         <att name='class' flags='l'>
          <str val='link'/>
         </att>
         <valueOf line='191' flags='l'>
          <fn name='string-join'>
           <convert from='xs:anyAtomicType' to='xs:string'>
            <choose>
             <fn name='exists'>
              <slash simple='2'>
               <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                <varRef name='Q{}section' slot='1'/>
               </treat>
               <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
              </slash>
             </fn>
             <ufCall name='Q{urn:viewerapp.function}fn-name' tailCall='false' bSlot='0' eval='16'>
              <treat as='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;' diag='0|0||f:fn-name'>
               <check card='1' diag='0|0||f:fn-name'>
                <varRef name='Q{}section' slot='1'/>
               </check>
              </treat>
             </ufCall>
             <fn name='exists'>
              <slash simple='2'>
               <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                <varRef name='Q{}section' slot='1'/>
               </treat>
               <axis name='attribute' nodeTest='attribute(Q{}title)' jsTest='return item.name===&#39;title&#39;'/>
              </slash>
             </fn>
             <data>
              <conditionalSort>
               <fn name='exists'>
                <tail start='2'>
                 <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                  <varRef name='Q{}section' slot='1'/>
                 </treat>
                </tail>
               </fn>
               <docOrder intra='0'>
                <slash simple='2'>
                 <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                  <varRef name='Q{}section' slot='1'/>
                 </treat>
                 <axis name='attribute' nodeTest='attribute(Q{}title)' jsTest='return item.name===&#39;title&#39;'/>
                </slash>
               </docOrder>
              </conditionalSort>
             </data>
             <true/>
             <data>
              <conditionalSort>
               <fn name='exists'>
                <tail start='2'>
                 <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                  <varRef name='Q{}section' slot='1'/>
                 </treat>
                </tail>
               </fn>
               <docOrder intra='0'>
                <slash simple='2'>
                 <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
                  <varRef name='Q{}section' slot='1'/>
                 </treat>
                 <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
                </slash>
               </docOrder>
              </conditionalSort>
             </data>
            </choose>
           </convert>
           <str val=' '/>
          </fn>
         </valueOf>
        </sequence>
       </elem>
      </resultDoc>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='47' binds=''>
  <template name='Q{}group' flags='os' line='219' module='elements-body.xsl' slots='0'>
   <choose role='body' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='220'>
    <compareToInt op='gt' val='2'>
     <fn name='position'/>
    </compareToInt>
    <choose line='223'>
     <fn name='exists'>
      <slash simple='1'>
       <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|9|XPTY0020|'>
        <dot flags='a'/>
       </treat>
       <axis name='parent' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}sequence)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;sequence&#39;;'/>
      </slash>
     </fn>
     <valueOf>
      <str val=', '/>
     </valueOf>
     <fn line='224' name='exists'>
      <slash simple='1'>
       <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|9|XPTY0020|'>
        <dot flags='a'/>
       </treat>
       <axis name='parent' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}choice)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;choice&#39;;'/>
      </slash>
     </fn>
     <valueOf line='224'>
      <str val=' | '/>
     </valueOf>
     <fn line='225' name='exists'>
      <slash simple='1'>
       <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|9|XPTY0020|'>
        <dot flags='a'/>
       </treat>
       <axis name='parent' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}allowed-parents)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;allowed-parents&#39;;'/>
      </slash>
     </fn>
     <valueOf line='225'>
      <str val='; '/>
     </valueOf>
    </choose>
   </choose>
  </template>
 </co>
 <co id='50' binds='15 25 24'>
  <template name='Q{}run-search' flags='os' line='25' module='findtext.xsl' slots='1'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='27' var='Q{}search' as='xs:string' slot='0' eval='8'>
    <fn name='lower-case'>
     <fn name='normalize-space'>
      <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:normalize-space'>
       <check card='?' diag='0|0||fn:normalize-space'>
        <cvUntyped to='xs:string'>
         <data>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
           <gVarRef name='Q{http://saxon.sf.net/generated-variable}gg121295574' bSlot='0'/>
           <str val='value'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
    </fn>
    <choose line='30'>
     <varRef name='Q{}search' slot='0'/>
     <sequence line='31'>
      <forEach>
       <filter flags=''>
        <slash simple='2'>
         <filter flags='b'>
          <slash simple='2'>
           <slash simple='2'>
            <slash simple='1'>
             <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
             <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
            </slash>
            <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
           </slash>
           <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
          </slash>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}id' chk='0'/>
           </cast>
           <str val='wrap'/>
          </vc>
         </filter>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <vc op='eq' comp='CCC'>
         <attVal name='Q{}class' chk='0'/>
         <str val='found'/>
        </vc>
       </filter>
       <ifCall line='32' name='Q{http://saxonica.com/ns/interactiveXSLT}set-style' type='item()?'>
        <str val='display'/>
        <str val='block'/>
        <dot type='element(Q{}div)'/>
       </ifCall>
      </forEach>
      <resultDoc line='34' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
       <str role='href' val='#foundPaths'/>
       <sequence role='content' line='35'>
        <elem name='p' nsuri='' namespaces='svg js cat f'>
         <elem name='i' nsuri='' flags='l'>
          <valueOf flags='l'>
           <str val='Search result links:'/>
          </valueOf>
         </elem>
        </elem>
        <forEach line='36'>
         <slash simple='2'>
          <slash simple='1'>
           <fn name='doc'>
            <fn name='concat'>
             <gVarRef name='Q{}location' bSlot='1'/>
             <str val='/catalog.xml'/>
            </fn>
           </fn>
           <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/catalog}catalog)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/catalog&#39;&amp;&amp;q.local===&#39;catalog&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/catalog}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/catalog&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
         </slash>
         <elem line='37' name='div' nsuri='' namespaces='svg js cat f'>
          <sequence>
           <att name='id' flags='l'>
            <convert from='xs:untypedAtomic' to='xs:string'>
             <attVal name='Q{}ref' chk='0'/>
            </convert>
           </att>
           <att name='class' flags='l'>
            <str val='foundP'/>
           </att>
           <att name='_searching' flags='l'>
            <str val='true'/>
           </att>
          </sequence>
         </elem>
        </forEach>
       </sequence>
      </resultDoc>
      <resultDoc line='40' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
       <str role='href' val='#findstatus'/>
       <valueOf role='content'>
        <str val=' searching... '/>
       </valueOf>
      </resultDoc>
      <callT line='42' name='Q{}searching' bSlot='2' flags='t'>
       <withParam name='Q{}search' flags='c' as='xs:string'>
        <varRef line='43' name='Q{}search' slot='0'/>
       </withParam>
      </callT>
     </sequence>
    </choose>
   </let>
  </template>
 </co>
 <co id='4' binds=''>
  <function name='Q{urn:viewerapp.function}set-hash' line='613' module='jstree.xsl' eval='8' flags='pU' as='item()*' slots='1'>
   <arg name='Q{}hash' as='item()*'/>
   <ifCall role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='616' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
    <str val='location.hash'/>
    <fn name='concat'>
     <str val='!'/>
     <atomSing card='?' diag='0|1||fn:concat'>
      <varRef name='Q{}hash' slot='0'/>
     </atomSing>
    </fn>
    <check card='1' diag='0|2||ixsl:set-property'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
    </check>
   </ifCall>
  </function>
 </co>
 <co id='51' binds=''>
  <function name='Q{urn:viewerapp.function}edition' line='39' module='app-functions.xsl' eval='4' flags='pU' as='xs:string*' slots='5'>
   <arg name='Q{}available' as='xs:string'/>
   <arg name='Q{}implement' as='document-node()'/>
   <let role='body' ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='49' var='Q{http://saxon.sf.net/generated-variable}v0' as='element(Q{}saxon)*' slot='2' eval='4'>
    <slash simple='2'>
     <slash simple='1'>
      <varRef name='Q{}implement' slot='1'/>
      <axis name='child' nodeTest='element(Q{}implement)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;implement&#39;;'/>
     </slash>
     <axis name='child' nodeTest='element(Q{}saxon)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;saxon&#39;;'/>
    </slash>
    <cvUntyped line='48' to='xs:string' diag='5|0|XTTE0780|f:edition#2'>
     <data>
      <forEach>
       <for line='47' var='Q{}t' as='xs:string' slot='3'>
        <fn role='in' name='tokenize'>
         <varRef name='Q{}available' slot='0'/>
         <str val='\s+'/>
         <str val=''/>
        </fn>
        <fn role='return' name='upper-case'>
         <varRef name='Q{}t' slot='3'/>
        </fn>
       </for>
       <valueOf line='49'>
        <fn name='string-join'>
         <convert from='xs:anyAtomicType' to='xs:string'>
          <let var='Q{http://saxon.sf.net/generated-variable}current-1197342495' as='xs:string' slot='4' eval='16'>
           <dot type='xs:string'/>
           <data>
            <filter flags='b'>
             <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='2'/>
             <vc op='eq' onEmpty='0' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
              <cast as='xs:string' emptiable='1'>
               <attVal name='Q{}version' chk='0'/>
              </cast>
              <varRef name='Q{http://saxon.sf.net/generated-variable}current-1197342495' slot='4'/>
             </vc>
            </filter>
           </data>
          </let>
         </convert>
         <str val=' '/>
        </fn>
       </valueOf>
      </forEach>
     </data>
    </cvUntyped>
   </let>
  </function>
 </co>
 <co id='3' binds='34'>
  <function name='Q{urn:viewerapp.function}get-hash' line='630' module='jstree.xsl' eval='7' flags='pU' as='item()*' slots='2'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='631' var='Q{}url' as='item()?' slot='0' eval='8'>
    <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}location' type='item()?'/>
    <let line='634' var='Q{}hash' as='xs:string' slot='1' eval='16'>
     <choose>
      <fn name='contains'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:contains'>
        <check card='?' diag='0|0||fn:contains'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}url' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val='%21'/>
      </fn>
      <fn name='substring-after'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:substring-after'>
        <check card='?' diag='0|0||fn:substring-after'>
         <cvUntyped to='xs:string'>
          <data>
           <varRef name='Q{}url' slot='0'/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val='%21'/>
      </fn>
      <true/>
      <fn name='substring'>
       <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:substring'>
        <check card='?' diag='0|0||fn:substring'>
         <cvUntyped to='xs:string'>
          <data>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
            <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
            <str val='location.hash'/>
           </ifCall>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <int val='3'/>
      </fn>
     </choose>
     <choose line='635'>
      <varRef name='Q{}hash' slot='1'/>
      <varRef name='Q{}hash' slot='1'/>
      <true/>
      <slash simple='1'>
       <first>
        <slash simple='2'>
         <slash simple='1'>
          <gVarRef name='Q{}navlist' bSlot='0'/>
          <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
        </slash>
       </first>
       <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
      </slash>
     </choose>
    </let>
   </let>
  </function>
 </co>
 <co id='5' binds='5'>
  <function name='Q{urn:viewerapp.function}get-item' line='384' module='jstree.xsl' eval='16' flags='pU' as='node()' slots='4'>
   <arg name='Q{}ids' as='xs:string*'/>
   <arg name='Q{}item' as='node()'/>
   <arg name='Q{}index' as='xs:integer'/>
   <tailCallLoop role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='389'>
    <choose>
     <vc op='eq' onEmpty='0' comp='CAVC'>
      <varRef name='Q{}index' slot='2'/>
      <fn name='count'>
       <varRef name='Q{}ids' slot='0'/>
      </fn>
     </vc>
     <varRef line='390' name='Q{}item' slot='1'/>
     <true/>
     <let line='393' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:string?' slot='3' eval='13'>
      <subscript>
       <varRef name='Q{}ids' slot='0'/>
       <arith op='+' calc='i+i'>
        <varRef name='Q{}index' slot='2'/>
        <int val='1'/>
       </arith>
      </subscript>
      <ufCall line='394' name='Q{urn:viewerapp.function}get-item' tailCall='self' bSlot='0' eval='6 16 16'>
       <varRef name='Q{}ids' slot='0'/>
       <check card='1' diag='0|1||f:get-item'>
        <filter line='393' flags=''>
         <slash simple='2'>
          <slash simple='1'>
           <varRef name='Q{}item' slot='1'/>
           <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
         </slash>
         <vc op='eq' comp='CCC'>
          <attVal name='Q{}id' chk='0'/>
          <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='3'/>
         </vc>
        </filter>
       </check>
       <arith op='+' calc='i+i'>
        <varRef name='Q{}index' slot='2'/>
        <int val='1'/>
       </arith>
      </ufCall>
     </let>
    </choose>
   </tailCallLoop>
  </function>
 </co>
 <co id='25' binds=''>
  <globalVariable name='Q{}location' type='xs:anyURI' line='41' module='jstree.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.anyURI.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <fn ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='41' name='resolve-uri'>
    <str val='doc'/>
    <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|1||fn:resolve-uri'>
     <check card='1' diag='0|1||fn:resolve-uri'>
      <cvUntyped to='xs:string'>
       <data>
        <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}location' type='item()?'/>
       </data>
      </cvUntyped>
     </check>
    </treat>
   </fn>
  </globalVariable>
 </co>
 <co id='16' binds=''>
  <mode name='Q{}highlight-text' onNo='SC' flags='W' patternSlots='0'>
   <templateRule prec='1' prio='-0.5' seq='15' rank='0' minImp='1' slots='1' flags='s' line='264' module='findtext.xsl'>
    <p.nodeTest role='match' test='text()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='265'>
     <param name='Q{}search' slot='0'>
      <str role='select' val=''/>
      <supplied role='conversion' slot='0'/>
     </param>
     <choose line='266'>
      <fn name='normalize-space'>
       <fn name='string'>
        <dot type='text()'/>
       </fn>
      </fn>
      <analyzeString line='267'>
       <cvUntyped role='select' to='xs:string'>
        <data>
         <dot type='text()'/>
        </data>
       </cvUntyped>
       <fn role='regex' name='string-join'>
        <convert from='xs:anyAtomicType' to='xs:string'>
         <data>
          <mergeAdj>
           <varRef name='Q{}search' slot='0'/>
          </mergeAdj>
         </data>
        </convert>
        <str val=' '/>
       </fn>
       <str role='flags' val='qi'/>
       <elem role='matching' line='268' name='span' nsuri='' namespaces='svg js cat f'>
        <sequence>
         <att name='class' flags='l'>
          <str val='highlight'/>
         </att>
         <valueOf flags='l'>
          <dot type='xs:string'/>
         </valueOf>
        </sequence>
       </elem>
       <valueOf role='nonMatching' line='269'>
        <dot type='xs:string'/>
       </valueOf>
      </analyzeString>
     </choose>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='19' binds=''>
  <function name='Q{urn:viewerapp.function}allSectionsSearched' line='290' module='findtext.xsl' eval='16' flags='pU' as='xs:boolean' slots='1'>
   <let role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='294' var='Q{}foundPathDivs' as='element(Q{}div)*' slot='0' eval='8'>
    <slash simple='2'>
     <filter flags=''>
      <slash simple='2'>
       <filter flags='b'>
        <slash simple='2'>
         <slash simple='2'>
          <slash simple='1'>
           <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}page' type='document-node()?'/>
           <axis name='child' nodeTest='element(Q{}html)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;html&#39;;'/>
          </slash>
          <axis name='child' nodeTest='element(Q{}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
         </slash>
         <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
        </slash>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <cast as='xs:string' emptiable='1'>
          <attVal name='Q{}id' chk='0'/>
         </cast>
         <str val='wrap'/>
        </vc>
       </filter>
       <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      </slash>
      <vc op='eq' comp='CCC'>
       <attVal name='Q{}id' chk='0'/>
       <str val='foundPaths'/>
      </vc>
     </filter>
     <axis name='child' nodeTest='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
    </slash>
    <choose line='295'>
     <fn name='exists'>
      <filter flags=''>
       <varRef name='Q{}foundPathDivs' slot='0'/>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}_searching' chk='0'/>
        <str val='true'/>
       </vc>
      </filter>
     </fn>
     <false/>
     <true/>
     <true/>
    </choose>
   </let>
  </function>
 </co>
 <co id='40' binds='25'>
  <globalVariable name='Q{}implement-doc' type='xs:string' line='42' module='jstree.xsl' visibility='PRIVATE' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <fn ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='42' name='concat'>
    <gVarRef name='Q{}location' bSlot='0'/>
    <str val='/implement.xml'/>
   </fn>
  </globalVariable>
 </co>
 <co id='52' binds='4'>
  <function name='Q{urn:viewerapp.function}crumb-navigation' line='596' module='jstree.xsl' eval='7' flags='pU' as='item()*' slots='1'>
   <arg name='Q{}c' as='node()'/>
   <tailCallLoop role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='600'>
    <ufCall name='Q{urn:viewerapp.function}set-hash' tailCall='foreign' bSlot='0' eval='4'>
     <fn line='598' name='string-join'>
      <cvUntyped to='xs:string' diag='3|0|XTTE0570|seq'>
       <data>
        <slash>
         <varRef name='Q{}c' slot='0'/>
         <union op='|'>
          <slash simple='2'>
           <fn name='reverse'>
            <axis name='preceding-sibling' nodeTest='element()' jsTest='return item.nodeType===1;'/>
           </fn>
           <axis name='attribute' nodeTest='attribute(Q{}idt)' jsTest='return item.name===&#39;idt&#39;'/>
          </slash>
          <axis name='attribute' nodeTest='attribute(Q{}idt)' jsTest='return item.name===&#39;idt&#39;'/>
         </union>
        </slash>
       </data>
      </cvUntyped>
      <str val='/'/>
     </fn>
    </ufCall>
   </tailCallLoop>
  </function>
 </co>
 <co id='44' binds='53 49 37'>
  <mode name='Q{}primary' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='0' prio='0.0' seq='0' part='1' rank='0' minImp='0' slots='1' flags='s' line='11' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
    <let role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='12' var='Q{}title' as='((element(Q{}h1) | element(Q{}h2)) | element(Q{}h3))?' slot='0' eval='7'>
     <first>
      <axis name='child' nodeTest='((element(Q{}h1) | element(Q{}h2)) | element(Q{}h3))' jsTest='function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h1&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h2&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h3&#39;;};return a()||b();'/>
     </first>
     <sequence line='13'>
      <choose>
       <fn name='exists'>
        <varRef name='Q{}title' slot='0'/>
       </fn>
       <ifCall line='14' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
        <str val='document.title'/>
        <fn name='string-join'>
         <sequence>
          <gVarRef name='Q{}product' bSlot='0'/>
          <data>
           <varRef name='Q{}title' slot='0'/>
          </data>
         </sequence>
         <str val=' '/>
        </fn>
        <check card='1' diag='0|2||ixsl:set-property'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
       </ifCall>
      </choose>
      <applyT line='16' mode='Q{}secondary' flags='ti' bSlot='1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec='0' prio='10.0' seq='3' rank='1' minImp='0' slots='0' flags='s' line='27' module='body.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
     <vc ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='27' op='eq' onEmpty='0' comp='CCC'>
      <cast as='xs:string' emptiable='1'>
       <attVal name='Q{}id' chk='0'/>
      </cast>
      <str val='functions'/>
     </vc>
    </p.withPredicate>
    <applyT role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='28' mode='Q{}function-list' flags='t' bSlot='2'>
     <dot role='select' type='element(Q{}section)'/>
    </applyT>
   </templateRule>
   <templateRule prec='0' prio='0.0' seq='0' rank='0' minImp='0' slots='1' flags='s' line='11' module='body.xsl'>
    <p.nodeTest role='match' test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <let role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions el=http://www.saxonica.com/ns/doc/elements' line='12' var='Q{}title' as='((element(Q{}h1) | element(Q{}h2)) | element(Q{}h3))?' slot='0' eval='7'>
     <first>
      <axis name='child' nodeTest='((element(Q{}h1) | element(Q{}h2)) | element(Q{}h3))' jsTest='function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h1&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h2&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;h3&#39;;};return a()||b();'/>
     </first>
     <sequence line='13'>
      <choose>
       <fn name='exists'>
        <varRef name='Q{}title' slot='0'/>
       </fn>
       <ifCall line='14' name='Q{http://saxonica.com/ns/interactiveXSLT}set-property' type='item()?'>
        <str val='document.title'/>
        <fn name='string-join'>
         <sequence>
          <gVarRef name='Q{}product' bSlot='0'/>
          <data>
           <varRef name='Q{}title' slot='0'/>
          </data>
         </sequence>
         <str val=' '/>
        </fn>
        <check card='1' diag='0|2||ixsl:set-property'>
         <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}window' type='item()?'/>
        </check>
       </ifCall>
      </choose>
      <applyT line='16' mode='Q{}secondary' flags='ti' bSlot='1'>
       <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
      </applyT>
     </sequence>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='45' binds='44 45'>
  <mode name='Q{}get-section' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='0.0' seq='63' part='1' rank='0' minImp='0' slots='4' flags='s' line='275' module='jstree.xsl'>
    <p.nodeTest role='match' test='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='276'>
     <param name='Q{}ids' slot='0' as='xs:string*'>
      <empty role='select'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </treat>
     </param>
     <param line='277' name='Q{}parent' slot='1' as='node()?'>
      <empty role='select'/>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|parent'>
       <check card='?' diag='8|0|XTTE0590|parent'>
        <supplied slot='1'/>
       </check>
      </treat>
     </param>
     <param line='278' name='Q{}index' slot='2' flags='i' as='xs:integer'>
      <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
       <check card='1' diag='8|0|XTTE0590|index'>
        <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='279' var='Q{}sectionEl' as='(element(Q{}section) | element(Q{}article))*' slot='3' eval='4'>
      <filter flags=''>
       <axis name='child' nodeTest='(element(Q{}section) | element(Q{}article))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;};return a()||b();'/>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}id' chk='0'/>
        <subscript>
         <varRef name='Q{}ids' slot='0'/>
         <varRef name='Q{}index' slot='2'/>
        </subscript>
       </vc>
      </filter>
      <choose line='281'>
       <fn name='empty'>
        <varRef name='Q{}sectionEl' slot='3'/>
       </fn>
       <sequence line='282'>
        <elem name='p' nsuri=''>
         <valueOf flags='el'>
          <str val='Error in URI hash-path:'/>
         </valueOf>
        </elem>
        <elem line='283' name='p' nsuri=''>
         <sequence>
          <valueOf flags='el'>
           <str val='Section &#39;'/>
          </valueOf>
          <valueOf flags='l'>
           <subscript>
            <varRef name='Q{}ids' slot='0'/>
            <varRef name='Q{}index' slot='2'/>
           </subscript>
          </valueOf>
          <valueOf flags='el'>
           <str val='&#39; not found in path: '/>
          </valueOf>
          <valueOf line='284' flags='l'>
           <fn name='string-join'>
            <varRef name='Q{}ids' slot='0'/>
            <str val='/'/>
           </fn>
          </valueOf>
         </sequence>
        </elem>
       </sequence>
       <vc line='286' op='gt' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <empty/>
       <vc line='287' op='eq' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <applyT line='288' mode='Q{}primary' flags='t' bSlot='0'>
        <varRef role='select' name='Q{}sectionEl' slot='3'/>
       </applyT>
       <true/>
       <applyT line='291' mode='Q{}get-section' flags='t' bSlot='1'>
        <varRef role='select' name='Q{}sectionEl' slot='3'/>
        <withParam name='Q{}ids' as='xs:string*'>
         <varRef line='292' name='Q{}ids' slot='0'/>
        </withParam>
        <withParam name='Q{}parent' as='element()*'>
         <varRef line='293' name='Q{}sectionEl' slot='3'/>
        </withParam>
        <withParam name='Q{}index' as='xs:integer'>
         <arith line='294' op='+' calc='i+i'>
          <varRef name='Q{}index' slot='2'/>
          <int val='1'/>
         </arith>
        </withParam>
       </applyT>
      </choose>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec='6' prio='0.0' seq='63' rank='0' minImp='0' slots='4' flags='s' line='275' module='jstree.xsl'>
    <p.nodeTest role='match' test='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
    <sequence role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='276'>
     <param name='Q{}ids' slot='0' as='xs:string*'>
      <empty role='select'/>
      <treat role='conversion' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
       <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
        <data>
         <supplied slot='0'/>
        </data>
       </cvUntyped>
      </treat>
     </param>
     <param line='277' name='Q{}parent' slot='1' as='node()?'>
      <empty role='select'/>
      <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|parent'>
       <check card='?' diag='8|0|XTTE0590|parent'>
        <supplied slot='1'/>
       </check>
      </treat>
     </param>
     <param line='278' name='Q{}index' slot='2' flags='i' as='xs:integer'>
      <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
       <check card='1' diag='8|0|XTTE0590|index'>
        <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
         <data>
          <supplied slot='2'/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line='279' var='Q{}sectionEl' as='(element(Q{}section) | element(Q{}article))*' slot='3' eval='4'>
      <filter flags=''>
       <axis name='child' nodeTest='(element(Q{}section) | element(Q{}article))' jsTest='function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;};return a()||b();'/>
       <vc op='eq' comp='CCC'>
        <attVal name='Q{}id' chk='0'/>
        <subscript>
         <varRef name='Q{}ids' slot='0'/>
         <varRef name='Q{}index' slot='2'/>
        </subscript>
       </vc>
      </filter>
      <choose line='281'>
       <fn name='empty'>
        <varRef name='Q{}sectionEl' slot='3'/>
       </fn>
       <sequence line='282'>
        <elem name='p' nsuri=''>
         <valueOf flags='el'>
          <str val='Error in URI hash-path:'/>
         </valueOf>
        </elem>
        <elem line='283' name='p' nsuri=''>
         <sequence>
          <valueOf flags='el'>
           <str val='Section &#39;'/>
          </valueOf>
          <valueOf flags='l'>
           <subscript>
            <varRef name='Q{}ids' slot='0'/>
            <varRef name='Q{}index' slot='2'/>
           </subscript>
          </valueOf>
          <valueOf flags='el'>
           <str val='&#39; not found in path: '/>
          </valueOf>
          <valueOf line='284' flags='l'>
           <fn name='string-join'>
            <varRef name='Q{}ids' slot='0'/>
            <str val='/'/>
           </fn>
          </valueOf>
         </sequence>
        </elem>
       </sequence>
       <vc line='286' op='gt' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <empty/>
       <vc line='287' op='eq' onEmpty='0' comp='CAVC'>
        <varRef name='Q{}index' slot='2'/>
        <fn name='count'>
         <varRef name='Q{}ids' slot='0'/>
        </fn>
       </vc>
       <applyT line='288' mode='Q{}primary' flags='t' bSlot='0'>
        <varRef role='select' name='Q{}sectionEl' slot='3'/>
       </applyT>
       <true/>
       <applyT line='291' mode='Q{}get-section' flags='t' bSlot='1'>
        <varRef role='select' name='Q{}sectionEl' slot='3'/>
        <withParam name='Q{}ids' as='xs:string*'>
         <varRef line='292' name='Q{}ids' slot='0'/>
        </withParam>
        <withParam name='Q{}parent' as='element()*'>
         <varRef line='293' name='Q{}sectionEl' slot='3'/>
        </withParam>
        <withParam name='Q{}index' as='xs:integer'>
         <arith line='294' op='+' calc='i+i'>
          <varRef name='Q{}index' slot='2'/>
          <int val='1'/>
         </arith>
        </withParam>
       </applyT>
      </choose>
     </let>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='54' binds='52 12 23 29 6 26 26 50'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onclick' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='0.5' seq='66' rank='1' minImp='0' slots='0' flags='s' line='335' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
     <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='335' op='eq' comp='CCC'>
      <attVal name='Q{}class' chk='0'/>
      <str val='trail'/>
     </vc>
    </p.withPredicate>
    <ufCall role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='336' name='Q{urn:viewerapp.function}crumb-navigation' tailCall='false' bSlot='0' eval='16'>
     <dot type='element(Q{}li)'/>
    </ufCall>
   </templateRule>
   <templateRule prec='6' prio='0.5' seq='64' part='1' rank='1' minImp='0' slots='0' flags='s' line='302' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
     <gc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='302' op='=' card='N:1' comp='CCC'>
      <literal count='3'>
       <str val='closed'/>
       <str val='open'/>
       <str val='empty'/>
      </literal>
      <attVal name='Q{}class' chk='0'/>
     </gc>
    </p.withPredicate>
    <applyT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='303' mode='Q{}handle-itemclick' flags='t' bSlot='1'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='6' prio='0.5' seq='64' rank='1' minImp='0' slots='0' flags='s' line='302' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}span)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;span&#39;;'/>
     <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='302' op='eq' comp='CCC'>
      <attVal name='Q{}class' chk='0'/>
      <str val='item'/>
     </vc>
    </p.withPredicate>
    <applyT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='303' mode='Q{}handle-itemclick' flags='t' bSlot='1'>
     <dot role='select' type='element()'/>
    </applyT>
   </templateRule>
   <templateRule prec='6' prio='0.5' seq='61' rank='1' minImp='0' slots='0' flags='s' line='128' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}span)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;span&#39;;'/>
     <axis ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='128' name='attribute' nodeTest='attribute(Q{}data-href)' jsTest='return item.name===&#39;data-href&#39;'/>
    </p.withPredicate>
    <ufCall role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='129' name='Q{urn:viewerapp.function}anchor-navigation' tailCall='false' bSlot='2' eval='16'>
     <dot type='element(Q{}span)'/>
    </ufCall>
   </templateRule>
   <templateRule prec='6' prio='0.5' seq='67' rank='1' minImp='0' slots='0' flags='s' line='339' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
     <gc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='339' op='=' card='N:1' comp='CCC'>
      <literal count='2'>
       <str val='arrowLeft'/>
       <str val='arrowRight'/>
      </literal>
      <attVal name='Q{}class' chk='0'/>
     </gc>
    </p.withPredicate>
    <ufCall role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='340' name='Q{urn:viewerapp.function}navpage' tailCall='false' bSlot='3' eval='8'>
     <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
    </ufCall>
   </templateRule>
   <templateRule prec='6' prio='0.5' seq='60' rank='1' minImp='0' slots='0' flags='s' line='122' module='jstree.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
     <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='122' op='eq' comp='CCC'>
      <attVal name='Q{}class' chk='0'/>
      <str val='arrowNone'/>
     </vc>
    </p.withPredicate>
    <forEach role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='123'>
     <gVarRef name='Q{http://saxon.sf.net/generated-variable}gg762227630' bSlot='4'/>
     <ifCall line='124' name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
      <str val='class'/>
      <str val='closed'/>
     </ifCall>
    </forEach>
   </templateRule>
   <templateRule prec='1' prio='0.5' seq='14' rank='0' minImp='1' slots='0' flags='s' line='198' module='findtext.xsl'>
    <p.withUpper role='match' axis='parent' upFirst='false'>
     <p.withPredicate>
      <p.nodeTest test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
      <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='198' op='eq' comp='CCC'>
       <data>
        <axis name='attribute' nodeTest='attribute(Q{}class)' jsTest='return item.name===&#39;class&#39;'/>
       </data>
       <str val='link'/>
      </vc>
     </p.withPredicate>
     <p.withUpper axis='parent' upFirst='false'>
      <p.nodeTest test='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
      <p.withPredicate>
       <p.nodeTest test='element(Q{}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
       <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='198' op='eq' comp='CCC'>
        <data>
         <axis name='attribute' nodeTest='attribute(Q{}id)' jsTest='return item.name===&#39;id&#39;'/>
        </data>
        <str val='foundPaths'/>
       </vc>
      </p.withPredicate>
     </p.withUpper>
    </p.withUpper>
    <applyT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='199' mode='Q{}found-action' flags='t' bSlot='5'>
     <dot role='select' type='element(Q{}p)'/>
    </applyT>
   </templateRule>
   <templateRule prec='1' prio='0.5' seq='9' rank='0' minImp='1' slots='0' flags='s' line='48' module='findtext.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
     <gc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='48' op='=' card='N:1' comp='CCC'>
      <literal count='3'>
       <str val='foundNext'/>
       <str val='foundPrev'/>
       <str val='foundClosed'/>
      </literal>
      <attVal name='Q{}class' chk='0'/>
     </gc>
    </p.withPredicate>
    <applyT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='49' mode='Q{}found-action' flags='t' bSlot='6'>
     <dot role='select' type='element(Q{}p)'/>
    </applyT>
   </templateRule>
   <templateRule prec='1' prio='0.5' seq='8' rank='0' minImp='1' slots='0' flags='s' line='21' module='findtext.xsl'>
    <p.withPredicate role='match'>
     <p.nodeTest test='element(Q{}p)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;p&#39;;'/>
     <vc ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='21' op='eq' comp='CCC'>
      <attVal name='Q{}class' chk='0'/>
      <str val='search'/>
     </vc>
    </p.withPredicate>
    <callT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='22' name='Q{}run-search' bSlot='7' flags='t'/>
   </templateRule>
  </mode>
 </co>
 <co id='48' binds='21 21 21 1'>
  <mode name='Q{}model' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='5' prio='0.0' seq='48' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}sequence)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;sequence&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='48' part='5' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}empty)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;empty&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='48' part='2' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}model)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;model&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='48' part='4' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}text)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;text&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='48' part='1' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}choice)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;choice&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='46' rank='0' minImp='5' slots='0' flags='s' line='153' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}element-syntax)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;element-syntax&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='154'>
     <elem name='a' nsuri='' namespaces='map ixsl f'>
      <att name='name' flags='l'>
       <fn name='concat'>
        <str val='element-'/>
        <fn name='string'>
         <convert from='xs:untypedAtomic' to='xs:string'>
          <attVal name='Q{}name' chk='0'/>
         </convert>
        </fn>
       </fn>
      </att>
     </elem>
     <elem line='155' name='p' nsuri='' namespaces='map ixsl f'>
      <sequence>
       <att name='class' flags='l'>
        <str val='element-syntax'/>
       </att>
       <applyT line='156' bSlot='1'>
        <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}in-category)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;in-category&#39;;'/>
       </applyT>
       <applyT line='158' flags='c' bSlot='-1'>
        <axis role='select' name='child' nodeTest='(((((element(Q{http://www.saxonica.com/ns/doc/elements}sequence) | element(Q{http://www.saxonica.com/ns/doc/elements}choice)) | element(Q{http://www.saxonica.com/ns/doc/elements}model)) | element(Q{http://www.saxonica.com/ns/doc/elements}content)) | element(Q{http://www.saxonica.com/ns/doc/elements}text)) | element(Q{http://www.saxonica.com/ns/doc/elements}empty))' jsTest='function a() {function a() {function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;sequence&#39;;};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;choice&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;model&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;content&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;text&#39;;};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;empty&#39;;};return a()||b();'/>
       </applyT>
       <applyT line='159' bSlot='2'>
        <axis role='select' name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}allowed-parents)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;allowed-parents&#39;;'/>
       </applyT>
       <choose line='160'>
        <fn name='empty'>
         <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/elements}attribute)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;attribute&#39;;'/>
        </fn>
        <callT line='161' name='Q{}no-attributes' bSlot='3'/>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </templateRule>
   <templateRule prec='5' prio='0.0' seq='48' part='3' rank='0' minImp='5' slots='0' flags='s' line='179' module='elements-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/elements}content)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/elements&#39;&amp;&amp;q.local===&#39;content&#39;;'/>
    <sequence role='action' ns='xsl=~ ixsl=~ xs=~ map=~ f=urn:viewerapp.function el=http://www.saxonica.com/ns/doc/elements' line='180'>
     <elem name='strong' nsuri='' namespaces='map ixsl f'>
      <valueOf flags='l'>
       <str val='Content: '/>
      </valueOf>
     </elem>
     <applyT line='181' flags='t' bSlot='0'>
      <dot role='select' type='element()'/>
     </applyT>
    </sequence>
   </templateRule>
  </mode>
 </co>
 <co id='22' binds='13'>
  <template name='Q{}init' flags='os' line='84' module='jstree.xsl' slots='0'>
   <callT role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='85' name='Q{}process-hashchange' bSlot='0' flags='t'/>
  </template>
 </co>
 <co id='42' binds='42 46'>
  <template name='Q{}show-listitems' flags='os' line='447' module='jstree.xsl' slots='7'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='448'>
    <param name='Q{}doc' slot='0' flags='i' as='node()'>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|doc'>
      <check card='1' diag='8|0|XTTE0590|doc'>
       <supplied slot='0'/>
      </check>
     </treat>
    </param>
    <param line='449' name='Q{}ids' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <param line='450' name='Q{}index' slot='2' flags='i' as='xs:integer'>
     <treat role='conversion' as='xs:integer' jsTest='return SaxonJS.U.Atomic.integer.matches(item);' diag='8|0|XTTE0590|index'>
      <check card='1' diag='8|0|XTTE0590|index'>
       <cvUntyped to='xs:integer' diag='8|0|XTTE0590|index'>
        <data>
         <supplied slot='2'/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line='451' name='Q{}item' slot='3' as='node()?'>
     <empty role='select'/>
     <treat role='conversion' as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='8|0|XTTE0590|item'>
      <check card='?' diag='8|0|XTTE0590|item'>
       <supplied slot='3'/>
      </check>
     </treat>
    </param>
    <let line='452' var='Q{}id' as='item()?' slot='4' eval='7'>
     <subscript>
      <varRef name='Q{}ids' slot='1'/>
      <varRef name='Q{}index' slot='2'/>
     </subscript>
     <forEach line='454'>
      <varRef name='Q{}item' slot='3'/>
      <sequence line='455'>
       <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}set-attribute' type='item()*'>
        <str val='class'/>
        <choose line='621'>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <check line='455' card='1' diag='0|0||f:get-open-class'>
           <cvUntyped to='xs:string'>
            <attVal name='Q{}class' chk='0'/>
           </cvUntyped>
          </check>
          <str val='empty'/>
         </vc>
         <str val='empty'/>
         <true/>
         <str val='open'/>
        </choose>
       </ifCall>
       <choose line='465'>
        <fn name='exists'>
         <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
        </fn>
        <choose line='466'>
         <vc op='lt' onEmpty='0' comp='CAVC'>
          <varRef name='Q{}index' slot='2'/>
          <fn name='count'>
           <varRef name='Q{}ids' slot='1'/>
          </fn>
         </vc>
         <let line='471' var='Q{http://saxon.sf.net/generated-variable}v1' as='xs:anyAtomicType?' slot='5' eval='13'>
          <atomSing card='?' diag='1|1||eq'>
           <subscript>
            <varRef name='Q{}ids' slot='1'/>
            <arith op='+' calc='i+i'>
             <varRef name='Q{}index' slot='2'/>
             <int val='1'/>
            </arith>
           </subscript>
          </atomSing>
          <let line='468' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:anyAtomicType?' slot='6' eval='13'>
           <atomSing card='?' diag='1|1||eq'>
            <varRef name='Q{}id' slot='4'/>
           </atomSing>
           <callT line='467' name='Q{}show-listitems' bSlot='0' flags='t'>
            <withParam name='Q{}doc' flags='c' as='element()'>
             <check line='468' card='1' diag='8|0|XTTE0590|doc'>
              <filter flags=''>
               <slash simple='1'>
                <varRef name='Q{}doc' slot='0'/>
                <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
               </slash>
               <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <attVal name='Q{}id' chk='0'/>
                <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='6'/>
               </vc>
              </filter>
             </check>
            </withParam>
            <withParam name='Q{}ids' flags='c'>
             <varRef line='469' name='Q{}ids' slot='1'/>
            </withParam>
            <withParam name='Q{}index' flags='c' as='xs:integer'>
             <arith line='470' op='+' calc='i+i'>
              <varRef name='Q{}index' slot='2'/>
              <int val='1'/>
             </arith>
            </withParam>
            <withParam name='Q{}item' flags='c' as='element(Q{}li)?'>
             <check line='471' card='?' diag='8|0|XTTE0590|item'>
              <filter flags=''>
               <slash simple='2'>
                <axis name='child' nodeTest='element(Q{}ul)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;ul&#39;;'/>
                <axis name='child' nodeTest='element(Q{}li)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;li&#39;;'/>
               </slash>
               <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
                <attVal name='Q{}id' chk='0'/>
                <varRef name='Q{http://saxon.sf.net/generated-variable}v1' slot='5'/>
               </vc>
              </filter>
             </check>
            </withParam>
           </callT>
          </let>
         </let>
        </choose>
        <true/>
        <resultDoc line='476' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}append-content&#xA;'>
         <str role='href' val='?.'/>
         <callT role='content' line='477' name='Q{}add-list' bSlot='1'>
          <withParam name='Q{}section' flags='c' as='element()'>
           <check line='479' card='1' diag='8|0|XTTE0590|section'>
            <union op='|'>
             <filter flags=''>
              <slash simple='1'>
               <varRef name='Q{}doc' slot='0'/>
               <axis name='child' nodeTest='element()' jsTest='return item.nodeType===1;'/>
              </slash>
              <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
               <attVal name='Q{}id' chk='0'/>
               <atomSing card='?' diag='1|1||eq'>
                <varRef name='Q{}id' slot='4'/>
               </atomSing>
              </vc>
             </filter>
             <filter flags=''>
              <slash simple='1'>
               <varRef name='Q{}doc' slot='0'/>
               <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
              </slash>
              <vc op='eq' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
               <fn name='string'>
                <check card='?' diag='0|0||fn:string'>
                 <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
                </check>
               </fn>
               <atomSing card='?' diag='1|1||eq'>
                <varRef name='Q{}id' slot='4'/>
               </atomSing>
              </vc>
             </filter>
            </union>
           </check>
          </withParam>
          <withParam name='Q{}ids' flags='c' as='xs:string*'>
           <treat line='480' as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='8|0|XTTE0590|ids'>
            <cvUntyped to='xs:string' diag='8|0|XTTE0590|ids'>
             <data>
              <varRef name='Q{}ids' slot='1'/>
             </data>
            </cvUntyped>
           </treat>
          </withParam>
          <withParam name='Q{}index' flags='c' as='xs:integer'>
           <varRef line='481' name='Q{}index' slot='2'/>
          </withParam>
         </callT>
        </resultDoc>
       </choose>
      </sequence>
     </forEach>
    </let>
   </sequence>
  </template>
 </co>
 <co id='36' binds='55'>
  <template name='Q{}show-fn' flags='os' line='142' module='jstree.xsl' slots='6'>
   <sequence role='body' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='144'>
    <param name='Q{}span' slot='0'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='0'/>
    </param>
    <param line='145' name='Q{}docName' slot='1'>
     <str role='select' val=''/>
     <supplied role='conversion' slot='1'/>
    </param>
    <let line='146' var='Q{}href' as='attribute(Q{}data-href)*' slot='2' eval='8'>
     <slash simple='2'>
      <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='1|0|XPTY0019|/'>
       <varRef name='Q{}span' slot='0'/>
      </treat>
      <axis name='attribute' nodeTest='attribute(Q{}data-href)' jsTest='return item.name===&#39;data-href&#39;'/>
     </slash>
     <let line='148' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:untypedAtomic*' slot='3' eval='4'>
      <data>
       <varRef name='Q{}href' slot='2'/>
      </data>
      <let var='Q{}fn' as='element(Q{http://www.saxonica.com/ns/doc/functions}function)*' slot='4' eval='8'>
       <filter flags='b'>
        <slash simple='2'>
         <for var='Q{http://saxon.sf.net/generated-variable}dd752001567' as='document-node()' slot='5'>
          <fn role='in' name='doc'>
           <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='0|0||fn:doc'>
            <check card='?' diag='0|0||fn:doc'>
             <cvUntyped to='xs:string'>
              <data>
               <varRef name='Q{}docName' slot='1'/>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </fn>
          <fn role='return' name='key'>
           <str val='Q{http://saxon.sf.net/}kk101'/>
           <str val='functions'/>
           <varRef name='Q{http://saxon.sf.net/generated-variable}dd752001567' slot='5'/>
          </fn>
         </for>
         <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}function)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;function&#39;;'/>
        </slash>
        <gc op='=' card='M:N' comp='CCC'>
         <data>
          <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}name)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;name&#39;;'/>
         </data>
         <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='3'/>
        </gc>
       </filter>
       <resultDoc line='149' global='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;' local='#&#xA;#Wed Nov 06 15:11:18 GMT 2019&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;'>
        <str role='href' val='#fn-desc'/>
        <sequence role='content' line='150'>
         <elem name='h4' nsuri=''>
          <valueOf line='151' flags='l'>
           <fn name='concat'>
            <str val='ixsl:'/>
            <atomSing card='?' diag='0|1||fn:concat'>
             <varRef name='Q{}href' slot='2'/>
            </atomSing>
           </fn>
          </valueOf>
         </elem>
         <applyT line='154' mode='Q{}fn-description' bSlot='0'>
          <union role='select' op='|'>
           <conditionalSort>
            <fn name='exists'>
             <tail start='2'>
              <varRef name='Q{}fn' slot='4'/>
             </tail>
            </fn>
            <docOrder intra='0'>
             <slash simple='2'>
              <varRef name='Q{}fn' slot='4'/>
              <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
             </slash>
            </docOrder>
           </conditionalSort>
           <conditionalSort>
            <fn name='exists'>
             <tail start='2'>
              <varRef name='Q{}fn' slot='4'/>
             </tail>
            </fn>
            <docOrder intra='0'>
             <slash simple='2'>
              <varRef name='Q{}fn' slot='4'/>
              <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}signatures)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;signatures&#39;;'/>
             </slash>
            </docOrder>
           </conditionalSort>
          </union>
         </applyT>
        </sequence>
       </resultDoc>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id='55' binds='43 43'>
  <mode name='Q{}fn-description' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='4' prio='0.0' seq='35' rank='0' minImp='4' slots='0' flags='s' line='140' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}signatures)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;signatures&#39;;'/>
    <choose role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='141'>
     <fn name='exists'>
      <slash simple='2'>
       <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}proto)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;proto&#39;;'/>
       <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
      </slash>
     </fn>
     <elem line='142' name='ol' nsuri='' namespaces='f'>
      <forEach line='143'>
       <slash simple='2'>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}proto)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;proto&#39;;'/>
        <axis name='child' nodeTest='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
       </slash>
       <elem line='144' name='li' nsuri='' flags='l' namespaces='f'>
        <applyT line='145' mode='Q{}f' flags='i' bSlot='0'>
         <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
        </applyT>
       </elem>
      </forEach>
     </elem>
    </choose>
   </templateRule>
   <templateRule prec='4' prio='0.0' seq='34' rank='0' minImp='4' slots='0' flags='s' line='133' module='functions-body.xsl'>
    <p.nodeTest role='match' test='element(Q{http://www.saxonica.com/ns/doc/functions}description)' jsTest='var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.saxonica.com/ns/doc/functions&#39;&amp;&amp;q.local===&#39;description&#39;;'/>
    <elem role='action' ns='xsl=~ ixsl=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='134' name='div' nsuri='' namespaces='f'>
     <applyT line='135' mode='Q{}f' flags='i' bSlot='1'>
      <axis role='select' name='child' nodeTest='node()' jsTest='return true;'/>
     </applyT>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id='56' binds='50 29'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onkeydown' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='-1.0' seq='59' rank='0' minImp='0' slots='3' flags='s' line='102' module='jstree.xsl'>
    <p.any role='match'/>
    <let role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='103' var='Q{}event' as='item()?' slot='0' eval='8'>
     <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}event' type='item()?'/>
     <let line='104' var='Q{}key' as='xs:string' slot='1' eval='16'>
      <treat as='xs:string' jsTest='return SaxonJS.U.Atomic.string.matches(item);' diag='3|0|XTTE0570|key'>
       <check card='1' diag='3|0|XTTE0570|key'>
        <cvUntyped to='xs:string' diag='3|0|XTTE0570|key'>
         <data>
          <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}get' type='item()*'>
           <varRef name='Q{}event' slot='0'/>
           <str val='key'/>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <let line='108' var='Q{}class' as='xs:string?' slot='2' eval='7'>
       <choose>
        <gc op='=' card='N:1' comp='CCC'>
         <literal count='3'>
          <str val='ArrowLeft'/>
          <str val='Left'/>
          <str val='PageUp'/>
         </literal>
         <varRef name='Q{}key' slot='1'/>
        </gc>
        <str val='arrowLeft'/>
        <gc op='=' card='N:1' comp='CCC'>
         <literal count='3'>
          <str val='ArrowRight'/>
          <str val='Right'/>
          <str val='PageDown'/>
         </literal>
         <varRef name='Q{}key' slot='1'/>
        </gc>
        <str val='arrowRight'/>
        <vc op='eq' onEmpty='0' comp='CCC'>
         <varRef name='Q{}key' slot='1'/>
         <str val='Enter'/>
        </vc>
        <str val='enter'/>
       </choose>
       <choose line='109'>
        <fn name='exists'>
         <varRef name='Q{}class' slot='2'/>
        </fn>
        <choose line='112'>
         <vc op='eq' onEmpty='0' comp='CCC'>
          <varRef name='Q{}class' slot='2'/>
          <str val='enter'/>
         </vc>
         <callT line='113' name='Q{}run-search' bSlot='0' flags='t'/>
         <true/>
         <ufCall line='116' name='Q{urn:viewerapp.function}navpage' tailCall='false' bSlot='1' eval='6'>
          <varRef name='Q{}class' slot='2'/>
         </ufCall>
        </choose>
       </choose>
      </let>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id='57' binds=''>
  <function name='Q{urn:viewerapp.function}usual-prefix' line='20' module='app-functions.xsl' eval='16' flags='pU' as='xs:string' slots='1'>
   <arg name='Q{}ns' as='xs:string'/>
   <choose role='body' ns='xsl=~ ixsl=~ xs=~ map=~ fnd=http://www.saxonica.com/ns/doc/functions f=urn:viewerapp.function' line='23'>
    <vc op='eq' onEmpty='0' comp='CCC'>
     <varRef name='Q{}ns' slot='0'/>
     <str val='http://saxonica.com/ns/interactiveXSLT'/>
    </vc>
    <str val='ixsl'/>
    <true/>
    <str val=''/>
   </choose>
  </function>
 </co>
 <co id='53' binds=''>
  <globalParam name='Q{}product' type='xs:string' line='39' module='jstree.xsl' visibility='PUBLIC' jsAcceptor='return SaxonJS.U.Atomic.string.cast(val);' jsCardCheck='function c(n) {return n==1;};'>
   <str val='Saxon-JS'/>
  </globalParam>
 </co>
 <co id='58' binds='13'>
  <mode name='Q{http://saxonica.com/ns/interactiveXSLT}onhashchange' onNo='TC' flags='W' patternSlots='0'>
   <templateRule prec='6' prio='-1.0' seq='58' rank='0' minImp='0' slots='0' flags='s' line='97' module='jstree.xsl'>
    <p.any role='match'/>
    <callT role='action' ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='98' name='Q{}process-hashchange' bSlot='0' flags='t'/>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name='Q{http://saxon.sf.net/}kk101' line='0' binds='' flags='u'>
  <p.nodeSet type='element(Q{}section)'>
   <slash ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='148'>
    <axis name='child' nodeTest='element(Q{}article)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;article&#39;;'/>
    <axis name='child' nodeTest='element(Q{}section)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;&#39;&amp;&amp;q.local===&#39;section&#39;;'/>
   </slash>
  </p.nodeSet>
  <cast ns='xsl=~ svg=http://www.w3.org/2000/svg ch=http://www.saxonica.com/ns/doc/changes f=urn:viewerapp.function cat=http://www.saxonica.com/ns/doc/catalog ixsl=~ js=~ xs=~ fnd=http://www.saxonica.com/ns/doc/functions' line='148' as='xs:string' emptiable='1'>
   <attVal name='Q{}id' chk='0'/>
  </cast>
 </key>
 <output>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 991708ba?>
