<article id="technical" title="Technical Information">
   <h1>Technical Information</h1>

   <p>Saxon/C is built by cross compiling the Java code of Saxon 9.9.1.5 using the Excelsior JET
      15.3 Enterprise edition (MP1). This generates platform specific machine code, which we
      interface with C/C++ using the Java Native Interace (JNI).</p>

   <p><b>Embedded systems</b>: It is also possible to build Saxon/C for embedded systems, for
      example on a Linux/ARM System. If such a build is required please contact Saxonica to discuss
      further: <a href="mailto:support@saxonica.com">support@saxonica.com</a>.</p>

   <p>The PHP interface is in the form of a C/C++ PHP extension to Saxon/C created using the Zend
      module API. Supports PHP5 and PHP7.</p>

   <p>The Python interface is in the form of a Cython module interfaced with the C/C++ Saxon/C API.
      Currently supports Python3.</p>

   <p>The XML parser used is the one supplied by the Excelsior JET runtime which is cross compiled
      from the openJDK 8u181. There are currently no links to libxml.</p>



   <h2>Limitations</h2>

   <p>The following limitations apply to the 1.2.1 release:</p>
   <ul>
      <li>No support for the XDM function type in the XDM data model.</li>
      <li>The bytecode generation feature available in Saxon-EE on Java is not available in
         Saxon-EE/C.</li>
      <li>It is currently not possible to create and export to file a precompiled schema component
         model (SCM).</li>
   </ul>

   <h2>Feedback/Comments:</h2>

   <p>Please use the help forums and bug trackers for Saxon/C at <a
         href="https://saxonica.plan.io/projects/saxon-c" target="_blank">saxonica.plan.io</a> if
      you need help or advice. Or send email to <a href="mailto:support@saxonica.com"
         >support@saxonica.com</a>.</p>


   <section id="debugging" title="Debugging">
      <h1>Debugging</h1>

      <p>Exceptions and errors are captured and maintained silently in Saxon/C, but can be accessed.
         This is due to the restrictions in JNI: "There is no uniform and general way to throw and
         catch exceptions in native languages compared to Java. The JNI therefore requires you to
         check for possible exceptions after calling JNI functions".</p>

      <p>Any exceptions or errors found in a Saxon/C method can be retrieved by the method call
               <code>getErrorMessage(<i>n</i>)</code>, where <i>n</i> is an index number referring
         to the <i>n</i>th error message. The method <code>getErrorCount()</code> gets the total
         number of errors reported, which helps to loop through the errors if there is more than one
         of them. For example, see the following PHP code snippet:</p>

      <samp><![CDATA[<?php
  ...
  $result = $query->runQueryToString();
  if($result == NULL) {
    $errCount = $query->getExceptionCount();
    if($errCount > 0 ){
      for ($i = 0; $i &lt; $errCount; $i++) {
        $errC = $query->getErrorCode(intval(i));
        $errMessage = $query->getErrorMessage(intval(i));
        if($errC != NULL) {
          echo 'Error found: '. $errC.' :'.$errMessage;
        }
        $query->exceptionClear();
      }
    }
  }
  ...
?>]]></samp>

   </section>

   <section id="troubleshooting" title="Troubleshooting">
      <h1>Troubleshooting</h1>

      <p>After installing Saxon/C, if you notice anomalies in execution, then the apache log file
         usually has useful information on errors reported and crashes. See below for a description
         of some of the common errors and crashes, and their solutions:</p>
      <ul>
         <li>
            <p>
               <code>FATAL ERROR: Unable to load /usr/lib64/rt/lib/amd64/libjava.so (libjvm.so
                  cannot open shared object file: No such file or directory) JNI_CreateJavaVM()
                  failed with result-1</code>
            </p>
            <p><b>Solution:</b> Running the following command should resolve the error:</p>
            <kbd>sudo ldconfig</kbd>
            <p>Alternatively create a symlink to the java virtual machine. This is not required to
               install or compile, but it is required for PHP code. The following command should
               resolve the issue on a 64-bit machine:</p>
            <kbd>ln -s $JAVA_HOME/jre/lib/amd64/server/libjvm.so /lib64/libjvm.so<br/></kbd>
            <p>Alternatively, it is possible to link the libjvm.so from the 'rt/lib/jetjvm'
               directory.</p>
         </li>
         <li>
            <p>
               <code>/usr/lib/Saxon-C-API/SaxonProcessor.h:3:17: fatal error: jni.h: No such file or
                  directory <br/>#include &lt;jni.h&gt; compilation terminated.</code>
            </p>
            <p><b>Solution:</b> Link the jni.h on the machine or simply install gcj-jdk which should
               resolve this error. </p>
         </li>
         <li>
            <p>
               <code>PHP Warning: PHP Startup: Unable to load dynamic library
                  '/usr/lib/php/modules/saxon.so' - libsaxonhec.so: cannot enable executable stack
                  as shared object requires: Permission denied in Unknown on line 0</code>
            </p>
            <p><b>Solution:</b> This has been observed on centos systems: SELinux is
               enforced/enabled.</p>
            <p>Run the following command to show the security setting for the library files:</p>
            <kbd>ls -alZ /usr/lib" and 'ls -alZ /usr/lib/php/module/</kbd>
            <p>Then run the following commands or similar to change the security context:</p>
            <kbd>chcon system_u:object_r:lib_t:s0 /usr/lib/libsaxonhec.so</kbd>
            <kbd>chcon system_u:object_r:lib_t:s0 /usr/lib/php/modules/saxon.so</kbd>
         </li>
         <li>
            <p>Some 64-bit Linux flavors do not run the 32-bit JET libraries by default.</p>
            <p><b>Solution:</b> For instance, <code>ia32-libs</code> must be installed on
               Ubuntu/Debian, e.g. using the following command:<br/>
               </p>
            <kbd>sudo apt-get install ia32-libs</kbd>
         </li>
      </ul>


   </section>

</article>
