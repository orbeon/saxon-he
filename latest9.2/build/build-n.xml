<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="all" name="Saxon for the .NET platform"
         xmlns:dn="antlib:org.apache.ant.dotnet">
    
    <!-- Build file for Saxon on .NET. This build file is designed to be imported from build.xml -->
    
	<import file="build-constants.xml"/>      
		    
    <!-- directories holding C# source code -->
    <!-- <property name="vss-n.dir" value="${root}/Documents and Settings/Mike/Documents/Visual Studio 2008/Projects/Saxon.Net"/>-->

   	    
    <!-- directory holding .NET API documentation -->
    <property name="dotnetdoc.dir" value="${root}/MyJava/build/dotnetdoc"/>
    		    
    <!-- location of the C# compiler -->
    <property name="csharp.compiler" value="C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\csc.exe"/>   
		    
    
    <!-- following locations are for IKVMC code used to build the .NET product -->
    
    <property name="development-ikvm.dir" value="${root}/MyDotNet"/>
    <property name="ikvm.dir" value="${development-ikvm.dir}/ikvm-0.40.0.1"/>
    <property name="generated.stubs.dir" value="${development-ikvm.dir}/stubs"/>
    
    <!-- Key file used for signing the Saxonica-built .NET product. User builds should use a different key file -->
    <property name="saxondotnet.snk" value="${development-ikvm.dir}/make/saxondotnet.snk"/>
    
    <!-- set to 'debug' for testing, 'live' for final build -->
    <!--<property name="dot.net.debug" value="live"/>--> 
    
    <!-- The other important thing to enable debugging is that the .pdb file is available in the same directory
         as the .dll. -->
    
    <!-- Precondition for .NET compilation: IKVM is installed.
         * Download from www.ikvm.net
         * Unzip into ${development-ikvm.dir}
         * Register in the GAC (access the Microsoft .NET Framework Configuration item in the 
                                Windows Control Panel, and add the assemblies to the Assembly Cache. 
                                At a minimum, install the IKVM.OpenJDK.ClassLibrary.dll and IKVM.Runtime.dll)
         * Generate stubs in ${generated.stubs.dir} 
           for System.Xml.dll, System.Security.dll, and IKVM.OpenJDK.ClassLibrary.dll
    -->       
    
    <!-- following locations are relative to the build file -->
        
    <property name="temp-src-nj.dir" value="${temp.dir}/n/jsource"/>
    <property name="temp-src-nc.dir" value="${temp.dir}/n/csource"/>
    <property name="classes-n.dir" value="${temp.dir}/n/classes"/> 
    <property name="jar-n.dir" value="${temp.dir}/n/jar"/> 
    <property name="dll-n.dir" value="${temp.dir}/n/dll"/>  

		<!-- following locations are relative to the destination directory -->
		
    <property name="build-hen.dir" value="${product.dir}/hen"/> 
    <property name="build-pen.dir" value="${product.dir}/pen"/>  
    <property name="build-een.dir" value="${product.dir}/een"/>
     
   
    <!-- development source -->
        
    <path id="classpath-n">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${ikvm.dir}">
        	 <include name="classpath/mscorlib.jar"/>
        	 <include name="classpath/System.jar"/>
        	 <!--<include name="bin/IKVM.OpenJDK.ClassLibrary.jar"/>-->
        	 <include name="classpath/IKVM.Runtime.jar"/>
        </fileset>
        <fileset dir="${generated.stubs.dir}">
             <include name="CIL.jar"/>	 
        	 <include name="System.Xml.jar"/>
        	 <include name="System.Security.jar"/>
        	 <!--<include name="saxon9.net.api.jar"/>-->
        </fileset>	 
    </path>
       
    
    <target name="prepare-libs-n" description="Prepare required libraries for .NET, specifically Xerces">
        <taskdef name="ikvmc" classname="net.ikvm.ant.IkvmcTask" classpath="e:\javalib\ant-ikvmc.0.4.jar"/>
        <mkdir dir="${dll-n.dir}"/>
        <copy todir="${dll-n.dir}">
          <fileset dir="${ikvm.dir}/bin">
            <include name="IKVM.OpenJDK.*.dll"/>
            <include name="IKVM.Runtime.dll"/>            
          </fileset>
          <!--<fileset dir="${ikvm.dir}/openjdk/extras">
            <include name="charsets.dll"/>
          </fileset>-->
        </copy>
        <!--<copy file="${saxondotnet.snk}" todir="${basedir}"/>-->
        <mkdir dir="${basedir}/libs/xerces"/>
        <unjar src="${basedir}/libs/xercesimpl.jar" dest="${basedir}/libs/xerces"/>
        <unjar src="${basedir}/libs/resolver.jar" dest="${basedir}/libs/xerces"/>
        <jar basedir="${basedir}/libs/xerces" compress="${build.compress}" jarfile="${basedir}/libs/xerces.jar">
            <include name="**/*.class"/>
            <include name="**/*.properties"/>
            <exclude name="org.w3c.dom.html.HTMLDOMImplementation.class"/>
            <exclude name="META-INF/MANIFEST.MF"/>
        </jar> 
        <!--<ikvmc home="${ikvm.dir}"
               assembly="xerces" target="library" keyfile="${saxondotnet.snk}" version="${version}"
               debug="false" srcpath="e:/Javalib/xerces-2_9_0/src"
               out="${basedir}/${dll-n.dir}/xercesImpl.dll"
               verbose="true">
          <fileset dir="${basedir}/libs">
            <include name="xerces.jar"/>
          </fileset>
          <reference path="mscorlib.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Core.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Charsets.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Text.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Util.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.XML.API.dll"/>
        </ikvmc>-->
    </target>    
        
    <target name="create-edition-properties-n" description="Create the edition.properties files for the three editions of Saxon on Java">
        <mkdir dir="${classes-n.dir}"/>
        <mkdir dir="${classes-n.dir}/he"/>
        <mkdir dir="${classes-n.dir}/pe"/>
        <mkdir dir="${classes-n.dir}/ee"/>
        <echo file="${classes-n.dir}/he/edition.properties"
>config=net.sf.saxon.Configuration
platform=net.sf.saxon.dotnet.DotNetPlatform
</echo>
        <echo file="${classes-n.dir}/pe/edition.properties"
>config=com.saxonica.config.ProfessionalConfiguration
platform=com.saxonica.config.DotNetPlatformPE
</echo>
        <echo file="${classes-n.dir}/ee/edition.properties"
>config=com.saxonica.config.EnterpriseConfiguration
platform=com.saxonica.config.DotNetPlatformPE
</echo>   
    </target>
    
    <target name="prepare-n" depends="prepare-libs-n, create-edition-properties-n"/>
    
    
    <target name="copysource-development-n" description="Copy source files for Saxon on .NET from development directory">
        <copy todir="${temp-src-nj.dir}">
          <fileset dir="${source-hej.dir}">
            <include name="net/sf/saxon/**/*.java"/>
            <exclude name="**/ant/**"/>
            <exclude name="**/dom/**"/>
            <exclude name="**/dom4j/**"/>
            <exclude name="**/java/**"/>
            <exclude name="**/jdom/**"/>
            <exclude name="**/s9api/**"/>
            <exclude name="**/sql/**"/>
            <exclude name="**/xom/**"/>
            <exclude name="**/xpath/**"/>
            <exclude name="**/xqj/**"/>
          </fileset>
          <fileset dir="${source-eej.dir}">
		    <include name="com/saxonica/config/*.java"/>
		    <include name="com/saxonica/extfn/*.java"/>
            <include name="com/saxonica/extra/*.java"/>
            <include name="com/saxonica/fsa/*.java"/>
            <include name="com/saxonica/hof/*.java"/>
            <include name="com/saxonica/ptree/*.java"/>
            <include name="com/saxonica/pull/*.java"/>
            <include name="com/saxonica/query11/*.java"/>
            <include name="com/saxonica/schema/*.java"/>
            <include name="com/saxonica/sdoc/*.java"/>
            <include name="com/saxonica/stream/**/*.java"/>
            <include name="com/saxonica/style/*.java"/>
            <include name="com/saxonica/update/*.java"/>
            <include name="com/saxonica/validate/*.java"/>
            <include name="com/saxonica/xsltextn/*.java"/>
            <include name="com/saxonica/Validate.java"/>            
          </fileset>          
        </copy>
        <copy todir="${temp-src-nc.dir}/api">
          <fileset dir="${source-api-n.dir}">
            <include name="Saxon.Api/*.cs"/>
            <include name="Saxon.Api/Properties/AssemblyInfo.cs"/>
          </fileset>
        </copy>
        <!-- Commented out code used when source in Visual Studio        
        <copy todir="${temp-src-nc.dir}/cmd">
          <fileset dir="${source-cmd-n.dir}/Transform">
            <include name="*.cs"/>
          </fileset>
          <fileset dir="${source-cmd-n.dir}/Query">
            <include name="*.cs"/>
          </fileset>
          <fileset dir="${source-cmd-n.dir}/Validate">
            <include name="*.cs"/>
          </fileset>
        </copy>
        -->
        <copy todir="${temp-src-nc.dir}/cmd">
          <fileset dir="${source-cmd-n.dir}">
            <include name="Transform.cs"/>
            <include name="Query.cs"/>
            <include name="Validate.cs"/>
          </fileset>
        </copy>
        <!-- Commented out code used when source in Visual Studio   
        <copy todir="${temp-src-nc.dir}/samples">
          <fileset dir="${source-samples-n.dir}/Examples">
            <include name="*.cs"/>
          </fileset>
          <fileset dir="${source-samples-n.dir}/SampleExtensions">
            <include name="*.cs"/>
          </fileset>
          <fileset dir="${source-samples-n.dir}/TestRunner">
            <include name="*.cs"/>
          </fileset>
        </copy>
        -->
        <copy todir="${temp-src-nc.dir}/samples">
          <fileset dir="${source-samples-n.dir}">
            <include name="Examples.cs"/>
            <include name="SampleExtensions.cs"/>
            <include name="TestRunner.cs"/>
          </fileset>
        </copy>
    </target>    
                      
    <target name="compile-n" description="Compile Saxon Java classes for the .NET product" 
            depends="copysource-development-n">
        <mkdir dir="${classes-n.dir}"/>
        <mkdir dir="${classes-n.dir}/he"/>
        <mkdir dir="${classes-n.dir}/pe"/>
        <mkdir dir="${classes-n.dir}/ee"/>
        <echo message="Compile with debug = ${build.debug}, debuglevel = ${build.debuglevel}"/>
        <javac debug="${build.debug}" debuglevel="${build.debuglevel}" 
            deprecation="${build.deprecation}" destdir="${classes-n.dir}"
            optimize="${build.optimize}" srcdir="${temp-src-nj.dir}" source="${build.compiler.source}"
            target="${build.compiler.target}">

            <include name="net/**"/>
            <include name="com/saxonica/**"/>
            <exclude name="**/s9api/**"/>
            <exclude name="**/EnterpriseXPathFactory.java"/>
            <exclude name="**/ProfessionalXPathFactory.java"/>
            <exclude name="**/EnterpriseTransformerFactory.java"/>
            <exclude name="**/ProfessionalTransformerFactory.java"/>
            <exclude name="**/JavaPlatform.java"/>
            <exclude name="**/JavaPlatformPE.java"/>
            <exclude name="**/JavaLocalizerFactory.java"/>
            <classpath>
                <path refid="classpath-n"/>
            </classpath>
        </javac>
    </target>
    
    <target name="jar-hen" description="Create Saxon-HE jar files for .NET" depends="compile-n">
        <mkdir dir="${jar-n.dir}"/>
        <jar basedir="${classes-n.dir}" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9he.jar">
            <include name="net/**/*.class"/>
            <exclude name="net/sf/saxon/ant/*.class"/>
            <exclude name="net/sf/saxon/option/**/*.class"/>
        </jar>
        <jar basedir="${classes-n.dir}/he" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9he.jar" update="true">
            <include name="edition.properties"/>
        </jar> 
    </target> 
    
    <target name="jar-pen" description="Create Saxon-PE jar files for .NET" depends="compile-n">
        <mkdir dir="${jar-n.dir}"/>
        <jar basedir="${classes-n.dir}" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9pe.jar">
            <include name="net/**/*.class"/>
            <exclude name="net/sf/saxon/ant/*.class"/>
            <exclude name="**/sql/**/*.class"/>
            <include name="com/saxonica/**/*.class"/>
            <exclude name="com/saxonica/codegen/**/*.class"/>
            <exclude name="com/saxonica/deploy/**/*.class"/>
            <exclude name="com/saxonica/fsa/**/*.class"/>
            <exclude name="com/saxonica/jaxp/**/**/*.class"/>
            <exclude name="com/saxonica/schema/**/*.class"/>
            <exclude name="com/saxonica/sdoc/**/*.class"/>
            <exclude name="com/saxonica/stream/**/*.class"/>
            <exclude name="com/saxonica/update/**/*.class"/>
            <exclude name="com/saxonica/validate/**/*.class"/>
            <exclude name="com/saxonica/Validate.class"/>
            <exclude name="com/saxonica/CompileQuery.class"/>
            <exclude name="com/saxonica/CompileStylesheet.class"/>
            <exclude name="com/saxonica/CompileStylesheet$TracingObjectOutputStream.class"/>
            <exclude name="com/saxonica/config/EnterpriseConfiguration.class"/>
            <exclude name="com/saxonica/config/EnterpriseConfiguration$SurrogateSchema.class"/>
            <exclude name="com/saxonica/config/ProfessionalTransformerFactory.class"/>
            <exclude name="com/saxonica/config/ProfessionalXPathFactory.class"/>
            <exclude name="com/saxonica/config/EnterpriseTransformerFactory.class"/>
            <exclude name="com/saxonica/config/EnterpriseXPathFactory.class"/>
            <exclude name="com/saxonica/extra/StaticQueryContextEE.class"/>
            <exclude name="com/saxonica/extra/OptimizerEE.class"/>
            <exclude name="com/saxonica/extra/GeneralComparisonEE.class"/>         
        </jar>
        <jar basedir="${classes-n.dir}/pe" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9pe.jar" update="true">
            <include name="edition.properties"/>
        </jar>
    </target>     
    
    <target name="jar-een" description="Create Saxon-EE jar files for .NET" depends="compile-n">
        <mkdir dir="${jar-n.dir}"/>
        <jar basedir="${classes-n.dir}" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9ee.jar">
            <include name="net/**/*.class"/>
            <include name="com/saxonica/**/*.class"/>
            <exclude name="com/saxonica/CompileQuery.class"/>
            <exclude name="com/saxonica/CompileStylesheet.class"/>
            <exclude name="com/saxonica/config/EnterpriseTransformerFactory.class"/>
            <exclude name="com/saxonica/config/EnterpriseXPathFactory.class"/>
        </jar>
        <jar basedir="${classes-n.dir}/ee" compress="${build.compress}" jarfile="${jar-n.dir}/saxon9ee.jar" update="true">
            <include name="edition.properties"/>
        </jar>
    </target>
    
    <target name="dll-n" description="Create DLLs for .NET" depends="jar-hen, jar-pen, jar-een">
        <taskdef name="ikvmc" classname="net.ikvm.ant.IkvmcTask" classpath="e:\javalib\ant-ikvmc.0.4.jar"/>
        <mkdir dir="${dll-n.dir}"/>
        <copy todir="${jar-n.dir}">
          <fileset dir="${basedir}/libs">
            <include name="xerces.jar"/>
          </fileset>
        </copy>
         
        <!--
            Invoke IKVMC to cross-compile the JAR files into DLLs
        -->
        
        <ikvmc home="${ikvm.dir}"
               assembly="saxon9he" target="library" keyfile="${saxondotnet.snk}" version="${version}"
               debug="false" srcpath="c:/MyJava/saxon8.x"
               out="${basedir}/${dll-n.dir}/saxon9he.dll"
               verbose="true">
          <fileset dir="${basedir}/${jar-n.dir}">
            <include name="saxon9he.jar"/>
            <include name="xerces.jar"/>
          </fileset>
          <reference path="mscorlib.dll"/>
          <reference path="System.Xml"/>
          <reference path="System"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Core.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Charsets.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Text.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Util.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.XML.API.dll"/>
          <!--<reference path="${dll-n.dir}/xercesImpl.dll"/>-->
          <!--<reference path="${dll-n.dir}/IKVM.OpenJDK.XMLparse.dll"/>-->
        </ikvmc>
        <ikvmc home="${ikvm.dir}"
               assembly="saxon9pe" 
               target="library" 
               keyfile="${saxondotnet.snk}" 
               version="${version}"
               debug="false" srcpath="c:/MyJava/saxon8.x"
               out="${basedir}/${dll-n.dir}/saxon9pe.dll"
               verbose="true">
          <fileset dir="${basedir}/${jar-n.dir}">
            <include name="saxon9pe.jar"/>
            <include name="xerces.jar"/>
          </fileset>
          <reference path="mscorlib.dll"/>
          <reference path="System.Xml"/>
          <reference path="System"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Core.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Charsets.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Security.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Text.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Util.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.XML.API.dll"/>
          <!--<reference path="${dll-n.dir}/xercesImpl.dll"/>-->
          <!--<reference path="${dll-n.dir}/IKVM.OpenJDK.XMLparse.dll"/>-->
          <reference path="System.Security"/>
        </ikvmc>
        <ikvmc home="${ikvm.dir}"
               assembly="saxon9ee" 
               target="library" 
               keyfile="${saxondotnet.snk}" 
               version="${version}"
               debug="false" srcpath="c:/MyJava/saxon8.x"
               out="${basedir}/${dll-n.dir}/saxon9ee.dll"
               verbose="true">
          <fileset dir="${basedir}/${jar-n.dir}">
            <include name="saxon9ee.jar"/>
            <include name="xerces.jar"/>
          </fileset>
          <reference path="mscorlib.dll"/>
          <reference path="System.Xml"/>
          <reference path="System"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Core.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Charsets.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Security.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Text.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Util.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.XML.API.dll"/>
          <!--<reference path="${dll-n.dir}/xercesImpl.dll"/>-->
          <!--<reference path="${dll-n.dir}/IKVM.OpenJDK.XMLparse.dll"/>-->
          <reference path="System.Security"/>
        </ikvmc>
        
        <!-- Create a version of the DLL for debugging. Debugging in Visual Studio
             requires a version of the assembly that has no strong name. Currently
             we build this only for Enterprise Edition. The debugging version of the
             DLL plays no further part in the build, and is not included in the
             released product, but it can be used by linking it as a reference
             from the relevant client in Visual Studio, for example Transform.exe -->
        
        <ikvmc home="${ikvm.dir}"
               assembly="saxon9ee-debug" 
               target="library" 
               debug="true" srcpath="c:/MyJava/saxon8.x"
               out="${basedir}/${dll-n.dir}/saxon9ee-debug.dll"
               verbose="true">
          <fileset dir="${basedir}/${jar-n.dir}">
            <include name="saxon9ee.jar"/>
            <include name="xerces.jar"/>
          </fileset>
          <reference path="mscorlib.dll"/>
          <reference path="System.Xml"/>
          <reference path="System"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Core.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Charsets.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Security.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Text.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.Util.dll"/>
          <reference path="${dll-n.dir}/IKVM.OpenJDK.XML.API.dll"/>
          <reference path="System.Security"/>
        </ikvmc>
        
        <!--           
        <exec dir="." executable="ikvmc.cmd" >
          <arg line="${dot.net.debug}"/>   <!- -set to 'debug' for testing, 'live' for final build - ->
          <arg line="${basedir}/${jar-n.dir}"/>
          <arg line="${basedir}/${dll-n.dir}"/>
          <arg line="${version}"/>
        </exec>-->
        
        <!-- NB Remember to add the dll's to the GAC - it doesn't work if you don't -->
        
    </target>
    
    <target name="csharp-hen" description="Compile C# source for .NET commands and API library (HE)"
            xmlns:dn="antlib:org.apache.ant.dotnet" depends="dll-n"
        > <!---->
        
        <taskdef 
            uri="antlib:org.apache.ant.dotnet">
            <classpath>
              <pathelement location="e:/javalib/ant-dotnet-1.0/ant-dotnet-1.0.jar"/>
            </classpath>
        </taskdef>

		<mkdir dir="${dll-n.dir}/he"/>
		
		<copy todir="${dll-n.dir}/he">
            <fileset dir="${dll-n.dir}">
         	  <include name="IKVM.OpenJDK.Core.dll"/>
         	  <include name="IKVM.OpenJDK.Charsets.dll"/>
         	  <include name="IKVM.OpenJDK.Text.dll"/>
         	  <include name="IKVM.OpenJDK.Util.dll"/>
         	  <include name="IKVM.OpenJDK.XML.API.dll"/>
         	  <include name="xercesImpl.dll"/>
              <include name="IKVM.Runtime.dll"/>
              <!--<include name="IKVM.OpenJDK.Charsets.dll"/>-->
              <include name="saxon9he.dll"/>
            </fileset>
        </copy>
		
		<!-- API library DLL -->
		
		<dn:csc targetType="library" outputFile="${basedir}/${dll-n.dir}/he/saxon9he-api.dll"
		     docFile="${dotnetdoc.dir}/apidoc.xml"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/api/Saxon.Api" includes="*.cs Properties/AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/he">
		        <!--<include name="charsets.dll"/>-->
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
         	    <include name="xercesImpl.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <include name="saxon9he.dll"/>
		     </reference>
		</dn:csc>
		
		<!-- Transform, Query, Validate commands -->
		
		<echo file="${basedir}/${temp-src-nc.dir}/cmd/AssemblyInfo.cs">
		  using System.Reflection;
          using System.Runtime.CompilerServices;
          using System.Runtime.InteropServices;
          [assembly: AssemblyCompany("Saxonica")]
          [assembly: AssemblyProduct("Saxon.HE")]
          [assembly: AssemblyCopyright("Copyright © Saxonica 2010")]
          [assembly: AssemblyVersion("${version}")]
          [assembly: AssemblyFileVersion("${version}")]
        </echo>
		
		<dn:csc targetType="exe" 
		     win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/he/Transform.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Transform.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/he">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
         	    <include name="xercesImpl.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9he.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/he/Query.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Query.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/he">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
         	    <include name="xercesImpl.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9he.dll"/>
		     </reference>
		</dn:csc>
		
    </target>
    
    <target name="csharp-pen" description="Compile C# source for .NET commands and API library (PE)"
            xmlns:dn="antlib:org.apache.ant.dotnet" depends="dll-n"
        > <!---->
        
        <taskdef 
            uri="antlib:org.apache.ant.dotnet">
            <classpath>
              <pathelement location="e:/javalib/ant-dotnet-1.0/ant-dotnet-1.0.jar"/>
            </classpath>
          </taskdef>

		<mkdir dir="${dll-n.dir}/pe"/>
		
		<copy todir="${dll-n.dir}/pe">
            <fileset dir="${dll-n.dir}">
         	  <include name="IKVM.OpenJDK.Core.dll"/>
         	  <include name="IKVM.OpenJDK.Charsets.dll"/>
         	  <include name="IKVM.OpenJDK.Security.dll"/>
         	  <include name="IKVM.OpenJDK.Text.dll"/>
         	  <include name="IKVM.OpenJDK.Util.dll"/>
         	  <include name="IKVM.OpenJDK.XML.API.dll"/>
         	  <include name="xercesImpl.dll"/>
              <include name="IKVM.Runtime.dll"/>
              <!--<include name="charsets.dll"/>-->
              <include name="saxon9pe.dll"/>
            </fileset>
        </copy>
		
		<!-- API library DLL -->
		
		<dn:csc targetType="library" outputFile="${basedir}/${dll-n.dir}/pe/saxon9pe-api.dll"
		     docFile="${dotnetdoc.dir}/apidoc.xml"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/api/Saxon.Api" includes="*.cs Properties/AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/pe">
		        <!--<include name="charsets.dll"/>-->
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
         	    <include name="IKVM.Runtime.dll"/>
		        <include name="saxon9pe.dll"/>
		     </reference>
		</dn:csc>
		
		<!-- Transform, Query, Validate commands -->

		<echo file="${basedir}/${temp-src-nc.dir}/cmd/AssemblyInfo.cs">
		  using System.Reflection;
          using System.Runtime.CompilerServices;
          using System.Runtime.InteropServices;
          [assembly: AssemblyCompany("Saxonica")]
          [assembly: AssemblyProduct("Saxon.PE")]
          [assembly: AssemblyCopyright("Copyright © Saxonica 2010")]
          [assembly: AssemblyVersion("${version}")]
          [assembly: AssemblyFileVersion("${version}")]
        </echo>
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/pe/Transform.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Transform.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/pe">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9pe.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/pe/Query.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Query.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/pe">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9pe.dll"/>
		     </reference>
		</dn:csc>
		
    </target>    
    
    <target name="csharp-een" description="Compile C# source for .NET commands and API library (EE)"
            xmlns:dn="antlib:org.apache.ant.dotnet" depends="dll-n"
        > <!---->
        
        <taskdef 
            uri="antlib:org.apache.ant.dotnet">
            <classpath>
              <pathelement location="e:/javalib/ant-dotnet-1.0/ant-dotnet-1.0.jar"/>
            </classpath>
          </taskdef>

		<mkdir dir="${dll-n.dir}/ee"/>
		
		<copy todir="${dll-n.dir}/ee">
            <fileset dir="${dll-n.dir}">
         	  <include name="IKVM.OpenJDK.Core.dll"/>
         	  <include name="IKVM.OpenJDK.Charsets.dll"/>
         	  <include name="IKVM.OpenJDK.Security.dll"/>
         	  <include name="IKVM.OpenJDK.Text.dll"/>
         	  <include name="IKVM.OpenJDK.Util.dll"/>
         	  <include name="IKVM.OpenJDK.XML.API.dll"/>
              <include name="IKVM.Runtime.dll"/>
              <include name="saxon9ee.dll"/>
              <include name="saxon9ee-debug.dll"/>
            </fileset>
        </copy>
		
		<!-- API library DLL -->
		
		<!-- Note, this is not built for debugging in Visual Studio. Such a version
		     is best built within VS itself -->
		
		<dn:csc targetType="library" outputFile="${basedir}/${dll-n.dir}/ee/saxon9ee-api.dll"
		     docFile="${dotnetdoc.dir}/apidoc.xml"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/api/Saxon.Api" includes="*.cs Properties/AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <!--<include name="charsets.dll"/>-->
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <include name="saxon9ee.dll"/>
		     </reference>
		</dn:csc>
		
		<!-- Transform, Query, Validate commands -->
		
		<echo file="${basedir}/${temp-src-nc.dir}/cmd/AssemblyInfo.cs">
		  using System.Reflection;
          using System.Runtime.CompilerServices;
          using System.Runtime.InteropServices;
          [assembly: AssemblyCompany("Saxonica")]
          [assembly: AssemblyProduct("Saxon.EE")]
          [assembly: AssemblyCopyright("Copyright © Saxonica 2010")]
          [assembly: AssemblyVersion("${version}")]
          [assembly: AssemblyFileVersion("${version}")]
        </echo>		
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/ee/Transform.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Transform.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9ee.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/ee/Query.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Query.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <!--<include name="charsets.dll"/>-->
		        <include name="saxon9ee.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="exe" win32icon="c:\MyDotNet\icons\gyfu.ico"
		     outputFile="${basedir}/${dll-n.dir}/ee/Validate.exe"
		     extraOptions="-keyfile:${saxondotnet.snk}"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/cmd" includes="Validate.cs AssemblyInfo.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.Core.dll"/>
         	    <include name="IKVM.OpenJDK.Charsets.dll"/>
         	    <include name="IKVM.OpenJDK.Security.dll"/>
         	    <include name="IKVM.OpenJDK.Text.dll"/>
         	    <include name="IKVM.OpenJDK.Util.dll"/>
         	    <include name="IKVM.OpenJDK.XML.API.dll"/>
		        <include name="IKVM.Runtime.dll"/>
		        <include name="saxon9ee.dll"/>
		     </reference>
		</dn:csc>
    </target>    
    
    <target name="compile-samples-n" description="Compile C# source for .NET commands and API library (HE)"
            xmlns:dn="antlib:org.apache.ant.dotnet" depends="csharp-hen, csharp-pen, csharp-een, samples-common"
        >

       <taskdef 
            uri="antlib:org.apache.ant.dotnet">
            <classpath>
              <pathelement location="e:/javalib/ant-dotnet-1.0/ant-dotnet-1.0.jar"/>
            </classpath>
          </taskdef>

		<mkdir dir="${dll-n.dir}/samples"/>
		<mkdir dir="${dll-n.dir}/tests"/>
		
		<!-- Sample applications and test drivers -->
		
		<dn:csc targetType="exe"
		     outputFile="${basedir}/${dll-n.dir}/samples/Examples.exe"
		     win32icon="c:\MyDotNet\icons\csharp.ico"
		     debug="true"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/samples" includes="Examples.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.*.dll"/>
		        <include name="saxon9ee-api.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="library"
		     outputFile="${basedir}/${dll-n.dir}/samples/SampleExtensions.dll"
		     debug="true"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/samples" includes="SampleExtensions.cs"/>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.*.dll"/>
		        <include name="saxon9ee.dll"/>
		        <include name="saxon9ee-api.dll"/>
		     </reference>
		</dn:csc>
		
		<dn:csc targetType="winexe"
		     outputFile="${basedir}/${dll-n.dir}/samples/TestRunner.exe"
		     win32icon="c:\MyDotNet\icons\csharp.ico"
		     debug="true"
		     executable="${csharp.compiler}">
		     <src dir="${basedir}/${temp-src-nc.dir}/samples">
		       <include name="TestRunnerForm.cs"/>
		       <include name="TestRunnerForm.Designer.cs"/>
		       <include name="TestRunnerProgram.cs"/>
		       <include name="XsltTestSuiteDriver.cs"/>
		       <include name="XQueryTestSuiteDriver.cs"/>
		       <include name="SchemaTestSuiteDriver.cs"/>
		       <include name="IFeedbackListener.cs"/>
		       <include name="FileComparer.cs"/>
		     </src>
		     <reference dir="${basedir}/${dll-n.dir}/ee">
		        <include name="IKVM.OpenJDK.*.dll"/>
		        <include name="saxon9ee-api.dll"/>
		     </reference>
		</dn:csc>				
		
				      
		<!--		
	    <exec dir="." executable="csharp-compile.cmd" >
          <arg line="${basedir}/${temp-src-nc.dir}"/>
          <arg line="${basedir}/${dll-n.dir}"/>
          <arg line="${version}"/>
        </exec> -->  	     
    </target>
    
    <target name="product-hen" description="Assemble product.directory for Saxon-HE on .NET"
       										    depends="csharp-hen">
      <mkdir dir="${build-hen.dir}/bin"/> 										    
      <copy todir="${build-hen.dir}/bin">
        <fileset dir="${dll-n.dir}/he">
     	  <include name="IKVM.OpenJDK.*.dll"/>
          <include name="IKVM.Runtime.dll"/>
          <include name="saxon9he.dll"/>
          <include name="saxon9he-api.dll"/>
          <include name="Query.exe"/>
          <include name="Transform.exe"/>
        </fileset>
      </copy>
			<echo file="${build-hen.dir}/bin/install-gac.cmd">
			    set NET="%PROGRAMFILES%\Microsoft SDKs\Windows\v6.0A\bin"
				rem -- alternative location: set NET="%PROGRAMFILES%\Microsoft.NET\SDK\v2.0\Bin"
				%NET%\gacutil /if IKVM.Runtime.dll
				%NET%\gacutil /if IKVM.OpenJDK.Core.dll
				%NET%\gacutil /if IKVM.OpenJDK.Charsets.dll
				%NET%\gacutil /if IKVM.OpenJDK.Util.dll
				%NET%\gacutil /if IKVM.OpenJDK.XML.API.dll
				%NET%\gacutil /if xercesImpl.dll
				%NET%\gacutil /if saxon9he.dll 
				%NET%\gacutil /if saxon9he-api.dll                
      </echo> 
    </target>
    
    <target name="product-pen" description="Assemble product.directory for Saxon-PE on .NET"
       										    depends="csharp-pen">
      <mkdir dir="${build-pen.dir}/bin"/> 										    
      <copy todir="${build-pen.dir}/bin">
        <fileset dir="${dll-n.dir}/pe">
     	  <include name="IKVM.OpenJDK.*.dll"/>
          <include name="IKVM.Runtime.dll"/>
          <include name="saxon9pe.dll"/>
          <include name="saxon9pe-api.dll"/>
          <include name="Query.exe"/>
          <include name="Transform.exe"/>
        </fileset>
      </copy>
			<echo file="${build-pen.dir}/bin/install-gac.cmd">
			    set NET="%PROGRAMFILES%\Microsoft SDKs\Windows\v6.0A\bin"
				rem -- alternative location: set NET="%PROGRAMFILES%\Microsoft.NET\SDK\v2.0\Bin"
				%NET%\gacutil /if IKVM.Runtime.dll
				%NET%\gacutil /if IKVM.OpenJDK.Core.dll
				%NET%\gacutil /if IKVM.OpenJDK.Charsets.dll
				%NET%\gacutil /if IKVM.OpenJDK.Security.dll
				%NET%\gacutil /if IKVM.OpenJDK.Util.dll
				%NET%\gacutil /if IKVM.OpenJDK.XML.API.dll
				%NET%\gacutil /if xercesImpl.dll
				%NET%\gacutil /if saxon9pe.dll 
				%NET%\gacutil /if saxon9pe-api.dll                
      </echo> 
    </target>
    
    <target name="product-een" description="Assemble product.directory for Saxon-SA on .NET"
       										    depends="csharp-een">
      <copy todir="${build-een.dir}/bin">
        <fileset dir="${dll-n.dir}/ee">
     	  <include name="IKVM.OpenJDK.*.dll"/>
          <include name="IKVM.Runtime.dll"/>
          <include name="saxon9ee.dll"/>
          <include name="saxon9ee-api.dll"/>
          <include name="Query.exe"/>
          <include name="Transform.exe"/>
          <include name="Validate.exe"/>
        </fileset> 
      </copy> 
      <echo file="${build-een.dir}/bin/install-gac.cmd">
				set NET="%PROGRAMFILES%\Microsoft SDKs\Windows\v6.0A\bin"
				rem -- alternative location: set NET="%PROGRAMFILES%\Microsoft.NET\SDK\v2.0\Bin"
				%NET%\gacutil /if IKVM.Runtime.dll
				%NET%\gacutil /if IKVM.OpenJDK.Core.dll
				%NET%\gacutil /if IKVM.OpenJDK.Charsets.dll
				%NET%\gacutil /if IKVM.OpenJDK.Security.dll
				%NET%\gacutil /if IKVM.OpenJDK.Util.dll
				%NET%\gacutil /if IKVM.OpenJDK.XML.API.dll
				%NET%\gacutil /if xercesImpl.dll
				%NET%\gacutil /if saxon9pe.dll 
				%NET%\gacutil /if saxon9pe-api.dll              
      </echo>             
    </target>
    
    <target name="product-n" description="Assemble product.directories for Saxon on .NET"
       										    depends="product-hen, product-pen, product-een">
       										    
       <!-- Following steps are for diagnostics only, they can be omitted if Powershell is not available -->
       										    
       <exec executable="c:/windows/system32/WindowsPowerShell/v1.0/powershell.exe">
		  <arg line="tools/list-dependencies.ps1"/>
		  <arg line="${build-hen.dir}/bin"/>
	   </exec>
	   
	   <exec executable="c:/windows/system32/WindowsPowerShell/v1.0/powershell.exe">
		  <arg line="tools/list-dependencies.ps1"/>
		  <arg line="${build-pen.dir}/bin"/>
	   </exec>
	   
	   <exec executable="c:/windows/system32/WindowsPowerShell/v1.0/powershell.exe">
		  <arg line="tools/list-dependencies.ps1"/>
		  <arg line="${build-een.dir}/bin"/>
	   </exec>
	   
	</target>      										    
       
    <target name="samples-n" description="Assemble release samples for .NET"
                  depends="csharp-hen, compile-samples-n">
      <mkdir dir="${build-resources.dir}/samples/cs"/>
      <copy todir="${build-resources.dir}/samples/cs"> 
        <fileset dir="${temp-src-nc.dir}/samples">
          <include name="*.cs"/>
        </fileset>
      </copy>
      <mkdir dir="${build-resources.dir}/samples/cs/bin"/>
      <copy todir="${build-resources.dir}/samples/cs/bin"> 
        <fileset dir="${dll-n.dir}/samples">
          <include name="*.exe"/>
          <include name="*.dll"/>
          <include name="*.pdb"/>
        </fileset>
      </copy>
      <copy todir="${build-resources.dir}/samples/cs/bin"> 
        <fileset dir="${dll-n.dir}/tests">
          <include name="*.exe"/>
          <include name="*.dll"/>
          <include name="*.pdb"/>
        </fileset>
      </copy>      
    </target>
    
    <target name="dotnetdoc-dependset">
      <dependset>
        <srcfilelist dir="${dotnetdoc.dir}" files="*.xsl"/> 
        <srcfilelist dir="${temp-src-nc.dir}/api/Saxon.Api" files="*.cs"/>
        <targetfileset dir="${dotnetdoc.dir}" includes="names.xml"/>
      </dependset>
    </target>               
                     
    <target name="product-dotnetdoc" description="Create .NET API documentation"
        depends="copysource-development-n, csharp-hen, dotnetdoc-dependset">
    <!-- Omit for maintenance builds    
      <taskdef name="saxon-xslt" 
			         classname="net.sf.saxon.ant.AntTransform" 
			         classpath="e:\saxon-build\9.1.0.7\saj\saxon9sa.jar;e:\saxon-build\9.1.0.7\bj\saxon9-ant.jar;c:\saxon-licenses"/>

      <saxon-xslt       in="${dotnetdoc.dir}/parsecs.xsl"
			            style="${dotnetdoc.dir}/parsecs.xsl"
			            initialTemplate="main"
			            out="${dotnetdoc.dir}/names.xml"/>
	  <saxon-xslt in="${dotnetdoc.dir}/names.xml" 
			            style="${dotnetdoc.dir}/merge.xsl"
			            initialTemplate="main"
			            out="${dotnetdoc.dir}/merged.xml"/>
      <saxon-xslt in="${dotnetdoc.dir}/merged.xml" 
			            style="${dotnetdoc.dir}/tohtml.xsl"
			            out="${dotnetdoc.dir}/out/index.html"/>	            	            
      
      <mkdir dir="${build-resources.dir}/doc/dotnetdoc"/>
      <copy todir="${build-resources.dir}/doc/dotnetdoc">
        <fileset dir="${dotnetdoc.dir}/out/html"/>
      </copy>
      <copy file="${dotnetdoc.dir}/out/index.html"
              tofile="${build-resources.dir}/doc/dotnetdoc/index.html"
              overwrite="true"/>
      <copy file="${userdoc.dir}/fixed/javadoc/stylesheet.css"
              tofile="${build-resources.dir}/doc/dotnetdoc/stylesheet.css"
              overwrite="true"/>
    -->
    </target>  
    
    
    <target name="release-userdoc-n" description="Generate User Documentation">
      <copy todir="${product.dir}/hen">
        <fileset dir="${userdoc.dir}/welcome">
          <include name="doc/**"/>
          <include name="notices/**"/>
        </fileset>
      </copy>
      <copy todir="${product.dir}/pen">
        <fileset dir="${userdoc.dir}/welcome">
          <include name="doc/**"/>
          <include name="notices/**"/>
        </fileset>
      </copy>
      <copy todir="${product.dir}/een">
        <fileset dir="${userdoc.dir}/welcome">
          <include name="doc/**"/>
          <include name="notices/**"/>
        </fileset>
      </copy>       
		     
    </target>
                  
    <target name="n" depends="product-n, samples-n"
    		description="Generate Saxon for the .NET platform"/>    
      
    <target name="release-n" description="Create .ZIP files for release"
        >  <!-- depends="build, resources"-->
      <mkdir dir="${issue.dir}"/> 
       <zip zipfile="${issue.dir}/saxonhe${versionh}n.zip">
        <fileset dir="${product.dir}/hen"/>
      </zip>                
      <zip zipfile="${issue.dir}/saxonpe${versionh}n.zip">
        <fileset dir="${product.dir}/pen"/>
      </zip>                    
      <zip zipfile="${issue.dir}/saxonee${versionh}n.zip">
        <fileset dir="${product.dir}/een"/>
      </zip>
    </target>
    

      
       
    
</project>
